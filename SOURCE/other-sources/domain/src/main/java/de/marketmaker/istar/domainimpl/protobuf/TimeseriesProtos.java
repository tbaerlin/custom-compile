// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: timeseries.proto

package de.marketmaker.istar.domainimpl.protobuf;

public final class TimeseriesProtos {
  private TimeseriesProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface VolumeAggregationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.VolumeAggregation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional sint64 time = 1;</code>
     */
    boolean hasTime();
    /**
     * <code>optional sint64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>optional sint32 exponent_total_volume_call = 2;</code>
     */
    boolean hasExponentTotalVolumeCall();
    /**
     * <code>optional sint32 exponent_total_volume_call = 2;</code>
     */
    int getExponentTotalVolumeCall();

    /**
     * <code>optional sint64 total_volume_call = 3;</code>
     */
    boolean hasTotalVolumeCall();
    /**
     * <code>optional sint64 total_volume_call = 3;</code>
     */
    long getTotalVolumeCall();

    /**
     * <code>optional sint32 exponent_total_volume_put = 4;</code>
     */
    boolean hasExponentTotalVolumePut();
    /**
     * <code>optional sint32 exponent_total_volume_put = 4;</code>
     */
    int getExponentTotalVolumePut();

    /**
     * <code>optional sint64 total_volume_put = 5;</code>
     */
    boolean hasTotalVolumePut();
    /**
     * <code>optional sint64 total_volume_put = 5;</code>
     */
    long getTotalVolumePut();

    /**
     * <code>optional sint32 exponent_total_block_trade_volume_call = 6;</code>
     */
    boolean hasExponentTotalBlockTradeVolumeCall();
    /**
     * <code>optional sint32 exponent_total_block_trade_volume_call = 6;</code>
     */
    int getExponentTotalBlockTradeVolumeCall();

    /**
     * <code>optional sint64 total_block_trade_volume_call = 7;</code>
     */
    boolean hasTotalBlockTradeVolumeCall();
    /**
     * <code>optional sint64 total_block_trade_volume_call = 7;</code>
     */
    long getTotalBlockTradeVolumeCall();

    /**
     * <code>optional sint32 exponent_total_block_trade_volume_put = 8;</code>
     */
    boolean hasExponentTotalBlockTradeVolumePut();
    /**
     * <code>optional sint32 exponent_total_block_trade_volume_put = 8;</code>
     */
    int getExponentTotalBlockTradeVolumePut();

    /**
     * <code>optional sint64 total_block_trade_volume_put = 9;</code>
     */
    boolean hasTotalBlockTradeVolumePut();
    /**
     * <code>optional sint64 total_block_trade_volume_put = 9;</code>
     */
    long getTotalBlockTradeVolumePut();

    /**
     * <code>optional sint32 exponent_total_volume_futures = 10;</code>
     */
    boolean hasExponentTotalVolumeFutures();
    /**
     * <code>optional sint32 exponent_total_volume_futures = 10;</code>
     */
    int getExponentTotalVolumeFutures();

    /**
     * <code>optional sint64 total_volume_futures = 11;</code>
     */
    boolean hasTotalVolumeFutures();
    /**
     * <code>optional sint64 total_volume_futures = 11;</code>
     */
    long getTotalVolumeFutures();

    /**
     * <code>optional sint32 exponent_total_block_trade_volume_futures = 12;</code>
     */
    boolean hasExponentTotalBlockTradeVolumeFutures();
    /**
     * <code>optional sint32 exponent_total_block_trade_volume_futures = 12;</code>
     */
    int getExponentTotalBlockTradeVolumeFutures();

    /**
     * <code>optional sint64 total_block_trade_volume_futures = 13;</code>
     */
    boolean hasTotalBlockTradeVolumeFutures();
    /**
     * <code>optional sint64 total_block_trade_volume_futures = 13;</code>
     */
    long getTotalBlockTradeVolumeFutures();

    /**
     * <code>repeated .protobuf.Field fields = 14;</code>
     */
    java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> 
        getFieldsList();
    /**
     * <code>repeated .protobuf.Field fields = 14;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index);
    /**
     * <code>repeated .protobuf.Field fields = 14;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .protobuf.Field fields = 14;</code>
     */
    java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .protobuf.Field fields = 14;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protobuf.VolumeAggregation}
   */
  public static final class VolumeAggregation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.VolumeAggregation)
      VolumeAggregationOrBuilder {
    // Use VolumeAggregation.newBuilder() to construct.
    private VolumeAggregation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VolumeAggregation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VolumeAggregation defaultInstance;
    public static VolumeAggregation getDefaultInstance() {
      return defaultInstance;
    }

    public VolumeAggregation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VolumeAggregation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              time_ = input.readSInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              exponentTotalVolumeCall_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              totalVolumeCall_ = input.readSInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              exponentTotalVolumePut_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              totalVolumePut_ = input.readSInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              exponentTotalBlockTradeVolumeCall_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              totalBlockTradeVolumeCall_ = input.readSInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              exponentTotalBlockTradeVolumePut_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              totalBlockTradeVolumePut_ = input.readSInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              exponentTotalVolumeFutures_ = input.readSInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              totalVolumeFutures_ = input.readSInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              exponentTotalBlockTradeVolumeFutures_ = input.readSInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              totalBlockTradeVolumeFutures_ = input.readSInt64();
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>();
                mutable_bitField0_ |= 0x00002000;
              }
              fields_.add(input.readMessage(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_VolumeAggregation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_VolumeAggregation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation.Builder.class);
    }

    public static com.google.protobuf.Parser<VolumeAggregation> PARSER =
        new com.google.protobuf.AbstractParser<VolumeAggregation>() {
      public VolumeAggregation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VolumeAggregation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VolumeAggregation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int EXPONENT_TOTAL_VOLUME_CALL_FIELD_NUMBER = 2;
    private int exponentTotalVolumeCall_;
    /**
     * <code>optional sint32 exponent_total_volume_call = 2;</code>
     */
    public boolean hasExponentTotalVolumeCall() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 exponent_total_volume_call = 2;</code>
     */
    public int getExponentTotalVolumeCall() {
      return exponentTotalVolumeCall_;
    }

    public static final int TOTAL_VOLUME_CALL_FIELD_NUMBER = 3;
    private long totalVolumeCall_;
    /**
     * <code>optional sint64 total_volume_call = 3;</code>
     */
    public boolean hasTotalVolumeCall() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint64 total_volume_call = 3;</code>
     */
    public long getTotalVolumeCall() {
      return totalVolumeCall_;
    }

    public static final int EXPONENT_TOTAL_VOLUME_PUT_FIELD_NUMBER = 4;
    private int exponentTotalVolumePut_;
    /**
     * <code>optional sint32 exponent_total_volume_put = 4;</code>
     */
    public boolean hasExponentTotalVolumePut() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 exponent_total_volume_put = 4;</code>
     */
    public int getExponentTotalVolumePut() {
      return exponentTotalVolumePut_;
    }

    public static final int TOTAL_VOLUME_PUT_FIELD_NUMBER = 5;
    private long totalVolumePut_;
    /**
     * <code>optional sint64 total_volume_put = 5;</code>
     */
    public boolean hasTotalVolumePut() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint64 total_volume_put = 5;</code>
     */
    public long getTotalVolumePut() {
      return totalVolumePut_;
    }

    public static final int EXPONENT_TOTAL_BLOCK_TRADE_VOLUME_CALL_FIELD_NUMBER = 6;
    private int exponentTotalBlockTradeVolumeCall_;
    /**
     * <code>optional sint32 exponent_total_block_trade_volume_call = 6;</code>
     */
    public boolean hasExponentTotalBlockTradeVolumeCall() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 exponent_total_block_trade_volume_call = 6;</code>
     */
    public int getExponentTotalBlockTradeVolumeCall() {
      return exponentTotalBlockTradeVolumeCall_;
    }

    public static final int TOTAL_BLOCK_TRADE_VOLUME_CALL_FIELD_NUMBER = 7;
    private long totalBlockTradeVolumeCall_;
    /**
     * <code>optional sint64 total_block_trade_volume_call = 7;</code>
     */
    public boolean hasTotalBlockTradeVolumeCall() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint64 total_block_trade_volume_call = 7;</code>
     */
    public long getTotalBlockTradeVolumeCall() {
      return totalBlockTradeVolumeCall_;
    }

    public static final int EXPONENT_TOTAL_BLOCK_TRADE_VOLUME_PUT_FIELD_NUMBER = 8;
    private int exponentTotalBlockTradeVolumePut_;
    /**
     * <code>optional sint32 exponent_total_block_trade_volume_put = 8;</code>
     */
    public boolean hasExponentTotalBlockTradeVolumePut() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 exponent_total_block_trade_volume_put = 8;</code>
     */
    public int getExponentTotalBlockTradeVolumePut() {
      return exponentTotalBlockTradeVolumePut_;
    }

    public static final int TOTAL_BLOCK_TRADE_VOLUME_PUT_FIELD_NUMBER = 9;
    private long totalBlockTradeVolumePut_;
    /**
     * <code>optional sint64 total_block_trade_volume_put = 9;</code>
     */
    public boolean hasTotalBlockTradeVolumePut() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional sint64 total_block_trade_volume_put = 9;</code>
     */
    public long getTotalBlockTradeVolumePut() {
      return totalBlockTradeVolumePut_;
    }

    public static final int EXPONENT_TOTAL_VOLUME_FUTURES_FIELD_NUMBER = 10;
    private int exponentTotalVolumeFutures_;
    /**
     * <code>optional sint32 exponent_total_volume_futures = 10;</code>
     */
    public boolean hasExponentTotalVolumeFutures() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional sint32 exponent_total_volume_futures = 10;</code>
     */
    public int getExponentTotalVolumeFutures() {
      return exponentTotalVolumeFutures_;
    }

    public static final int TOTAL_VOLUME_FUTURES_FIELD_NUMBER = 11;
    private long totalVolumeFutures_;
    /**
     * <code>optional sint64 total_volume_futures = 11;</code>
     */
    public boolean hasTotalVolumeFutures() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional sint64 total_volume_futures = 11;</code>
     */
    public long getTotalVolumeFutures() {
      return totalVolumeFutures_;
    }

    public static final int EXPONENT_TOTAL_BLOCK_TRADE_VOLUME_FUTURES_FIELD_NUMBER = 12;
    private int exponentTotalBlockTradeVolumeFutures_;
    /**
     * <code>optional sint32 exponent_total_block_trade_volume_futures = 12;</code>
     */
    public boolean hasExponentTotalBlockTradeVolumeFutures() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional sint32 exponent_total_block_trade_volume_futures = 12;</code>
     */
    public int getExponentTotalBlockTradeVolumeFutures() {
      return exponentTotalBlockTradeVolumeFutures_;
    }

    public static final int TOTAL_BLOCK_TRADE_VOLUME_FUTURES_FIELD_NUMBER = 13;
    private long totalBlockTradeVolumeFutures_;
    /**
     * <code>optional sint64 total_block_trade_volume_futures = 13;</code>
     */
    public boolean hasTotalBlockTradeVolumeFutures() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional sint64 total_block_trade_volume_futures = 13;</code>
     */
    public long getTotalBlockTradeVolumeFutures() {
      return totalBlockTradeVolumeFutures_;
    }

    public static final int FIELDS_FIELD_NUMBER = 14;
    private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_;
    /**
     * <code>repeated .protobuf.Field fields = 14;</code>
     */
    public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 14;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 14;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .protobuf.Field fields = 14;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .protobuf.Field fields = 14;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    private void initFields() {
      time_ = 0L;
      exponentTotalVolumeCall_ = 0;
      totalVolumeCall_ = 0L;
      exponentTotalVolumePut_ = 0;
      totalVolumePut_ = 0L;
      exponentTotalBlockTradeVolumeCall_ = 0;
      totalBlockTradeVolumeCall_ = 0L;
      exponentTotalBlockTradeVolumePut_ = 0;
      totalBlockTradeVolumePut_ = 0L;
      exponentTotalVolumeFutures_ = 0;
      totalVolumeFutures_ = 0L;
      exponentTotalBlockTradeVolumeFutures_ = 0;
      totalBlockTradeVolumeFutures_ = 0L;
      fields_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFieldsCount(); i++) {
        if (!getFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, exponentTotalVolumeCall_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt64(3, totalVolumeCall_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, exponentTotalVolumePut_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt64(5, totalVolumePut_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(6, exponentTotalBlockTradeVolumeCall_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt64(7, totalBlockTradeVolumeCall_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(8, exponentTotalBlockTradeVolumePut_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSInt64(9, totalBlockTradeVolumePut_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeSInt32(10, exponentTotalVolumeFutures_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSInt64(11, totalVolumeFutures_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeSInt32(12, exponentTotalBlockTradeVolumeFutures_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeSInt64(13, totalBlockTradeVolumeFutures_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(14, fields_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, exponentTotalVolumeCall_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, totalVolumeCall_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, exponentTotalVolumePut_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(5, totalVolumePut_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, exponentTotalBlockTradeVolumeCall_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(7, totalBlockTradeVolumeCall_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, exponentTotalBlockTradeVolumePut_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(9, totalBlockTradeVolumePut_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(10, exponentTotalVolumeFutures_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(11, totalVolumeFutures_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(12, exponentTotalBlockTradeVolumeFutures_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(13, totalBlockTradeVolumeFutures_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, fields_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.VolumeAggregation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.VolumeAggregation)
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_VolumeAggregation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_VolumeAggregation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation.Builder.class);
      }

      // Construct using de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        exponentTotalVolumeCall_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        totalVolumeCall_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        exponentTotalVolumePut_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        totalVolumePut_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        exponentTotalBlockTradeVolumeCall_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        totalBlockTradeVolumeCall_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        exponentTotalBlockTradeVolumePut_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        totalBlockTradeVolumePut_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        exponentTotalVolumeFutures_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        totalVolumeFutures_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        exponentTotalBlockTradeVolumeFutures_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        totalBlockTradeVolumeFutures_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_VolumeAggregation_descriptor;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation getDefaultInstanceForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation.getDefaultInstance();
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation build() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation buildPartial() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation result = new de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.exponentTotalVolumeCall_ = exponentTotalVolumeCall_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.totalVolumeCall_ = totalVolumeCall_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.exponentTotalVolumePut_ = exponentTotalVolumePut_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.totalVolumePut_ = totalVolumePut_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.exponentTotalBlockTradeVolumeCall_ = exponentTotalBlockTradeVolumeCall_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.totalBlockTradeVolumeCall_ = totalBlockTradeVolumeCall_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.exponentTotalBlockTradeVolumePut_ = exponentTotalBlockTradeVolumePut_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.totalBlockTradeVolumePut_ = totalBlockTradeVolumePut_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.exponentTotalVolumeFutures_ = exponentTotalVolumeFutures_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.totalVolumeFutures_ = totalVolumeFutures_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.exponentTotalBlockTradeVolumeFutures_ = exponentTotalBlockTradeVolumeFutures_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.totalBlockTradeVolumeFutures_ = totalBlockTradeVolumeFutures_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation) {
          return mergeFrom((de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation other) {
        if (other == de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasExponentTotalVolumeCall()) {
          setExponentTotalVolumeCall(other.getExponentTotalVolumeCall());
        }
        if (other.hasTotalVolumeCall()) {
          setTotalVolumeCall(other.getTotalVolumeCall());
        }
        if (other.hasExponentTotalVolumePut()) {
          setExponentTotalVolumePut(other.getExponentTotalVolumePut());
        }
        if (other.hasTotalVolumePut()) {
          setTotalVolumePut(other.getTotalVolumePut());
        }
        if (other.hasExponentTotalBlockTradeVolumeCall()) {
          setExponentTotalBlockTradeVolumeCall(other.getExponentTotalBlockTradeVolumeCall());
        }
        if (other.hasTotalBlockTradeVolumeCall()) {
          setTotalBlockTradeVolumeCall(other.getTotalBlockTradeVolumeCall());
        }
        if (other.hasExponentTotalBlockTradeVolumePut()) {
          setExponentTotalBlockTradeVolumePut(other.getExponentTotalBlockTradeVolumePut());
        }
        if (other.hasTotalBlockTradeVolumePut()) {
          setTotalBlockTradeVolumePut(other.getTotalBlockTradeVolumePut());
        }
        if (other.hasExponentTotalVolumeFutures()) {
          setExponentTotalVolumeFutures(other.getExponentTotalVolumeFutures());
        }
        if (other.hasTotalVolumeFutures()) {
          setTotalVolumeFutures(other.getTotalVolumeFutures());
        }
        if (other.hasExponentTotalBlockTradeVolumeFutures()) {
          setExponentTotalBlockTradeVolumeFutures(other.getExponentTotalBlockTradeVolumeFutures());
        }
        if (other.hasTotalBlockTradeVolumeFutures()) {
          setTotalBlockTradeVolumeFutures(other.getTotalBlockTradeVolumeFutures());
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00002000);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFieldsCount(); i++) {
          if (!getFields(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.VolumeAggregation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long time_ ;
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        onChanged();
        return this;
      }

      private int exponentTotalVolumeCall_ ;
      /**
       * <code>optional sint32 exponent_total_volume_call = 2;</code>
       */
      public boolean hasExponentTotalVolumeCall() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 exponent_total_volume_call = 2;</code>
       */
      public int getExponentTotalVolumeCall() {
        return exponentTotalVolumeCall_;
      }
      /**
       * <code>optional sint32 exponent_total_volume_call = 2;</code>
       */
      public Builder setExponentTotalVolumeCall(int value) {
        bitField0_ |= 0x00000002;
        exponentTotalVolumeCall_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_total_volume_call = 2;</code>
       */
      public Builder clearExponentTotalVolumeCall() {
        bitField0_ = (bitField0_ & ~0x00000002);
        exponentTotalVolumeCall_ = 0;
        onChanged();
        return this;
      }

      private long totalVolumeCall_ ;
      /**
       * <code>optional sint64 total_volume_call = 3;</code>
       */
      public boolean hasTotalVolumeCall() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint64 total_volume_call = 3;</code>
       */
      public long getTotalVolumeCall() {
        return totalVolumeCall_;
      }
      /**
       * <code>optional sint64 total_volume_call = 3;</code>
       */
      public Builder setTotalVolumeCall(long value) {
        bitField0_ |= 0x00000004;
        totalVolumeCall_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 total_volume_call = 3;</code>
       */
      public Builder clearTotalVolumeCall() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalVolumeCall_ = 0L;
        onChanged();
        return this;
      }

      private int exponentTotalVolumePut_ ;
      /**
       * <code>optional sint32 exponent_total_volume_put = 4;</code>
       */
      public boolean hasExponentTotalVolumePut() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 exponent_total_volume_put = 4;</code>
       */
      public int getExponentTotalVolumePut() {
        return exponentTotalVolumePut_;
      }
      /**
       * <code>optional sint32 exponent_total_volume_put = 4;</code>
       */
      public Builder setExponentTotalVolumePut(int value) {
        bitField0_ |= 0x00000008;
        exponentTotalVolumePut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_total_volume_put = 4;</code>
       */
      public Builder clearExponentTotalVolumePut() {
        bitField0_ = (bitField0_ & ~0x00000008);
        exponentTotalVolumePut_ = 0;
        onChanged();
        return this;
      }

      private long totalVolumePut_ ;
      /**
       * <code>optional sint64 total_volume_put = 5;</code>
       */
      public boolean hasTotalVolumePut() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint64 total_volume_put = 5;</code>
       */
      public long getTotalVolumePut() {
        return totalVolumePut_;
      }
      /**
       * <code>optional sint64 total_volume_put = 5;</code>
       */
      public Builder setTotalVolumePut(long value) {
        bitField0_ |= 0x00000010;
        totalVolumePut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 total_volume_put = 5;</code>
       */
      public Builder clearTotalVolumePut() {
        bitField0_ = (bitField0_ & ~0x00000010);
        totalVolumePut_ = 0L;
        onChanged();
        return this;
      }

      private int exponentTotalBlockTradeVolumeCall_ ;
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_call = 6;</code>
       */
      public boolean hasExponentTotalBlockTradeVolumeCall() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_call = 6;</code>
       */
      public int getExponentTotalBlockTradeVolumeCall() {
        return exponentTotalBlockTradeVolumeCall_;
      }
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_call = 6;</code>
       */
      public Builder setExponentTotalBlockTradeVolumeCall(int value) {
        bitField0_ |= 0x00000020;
        exponentTotalBlockTradeVolumeCall_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_call = 6;</code>
       */
      public Builder clearExponentTotalBlockTradeVolumeCall() {
        bitField0_ = (bitField0_ & ~0x00000020);
        exponentTotalBlockTradeVolumeCall_ = 0;
        onChanged();
        return this;
      }

      private long totalBlockTradeVolumeCall_ ;
      /**
       * <code>optional sint64 total_block_trade_volume_call = 7;</code>
       */
      public boolean hasTotalBlockTradeVolumeCall() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint64 total_block_trade_volume_call = 7;</code>
       */
      public long getTotalBlockTradeVolumeCall() {
        return totalBlockTradeVolumeCall_;
      }
      /**
       * <code>optional sint64 total_block_trade_volume_call = 7;</code>
       */
      public Builder setTotalBlockTradeVolumeCall(long value) {
        bitField0_ |= 0x00000040;
        totalBlockTradeVolumeCall_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 total_block_trade_volume_call = 7;</code>
       */
      public Builder clearTotalBlockTradeVolumeCall() {
        bitField0_ = (bitField0_ & ~0x00000040);
        totalBlockTradeVolumeCall_ = 0L;
        onChanged();
        return this;
      }

      private int exponentTotalBlockTradeVolumePut_ ;
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_put = 8;</code>
       */
      public boolean hasExponentTotalBlockTradeVolumePut() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_put = 8;</code>
       */
      public int getExponentTotalBlockTradeVolumePut() {
        return exponentTotalBlockTradeVolumePut_;
      }
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_put = 8;</code>
       */
      public Builder setExponentTotalBlockTradeVolumePut(int value) {
        bitField0_ |= 0x00000080;
        exponentTotalBlockTradeVolumePut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_put = 8;</code>
       */
      public Builder clearExponentTotalBlockTradeVolumePut() {
        bitField0_ = (bitField0_ & ~0x00000080);
        exponentTotalBlockTradeVolumePut_ = 0;
        onChanged();
        return this;
      }

      private long totalBlockTradeVolumePut_ ;
      /**
       * <code>optional sint64 total_block_trade_volume_put = 9;</code>
       */
      public boolean hasTotalBlockTradeVolumePut() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional sint64 total_block_trade_volume_put = 9;</code>
       */
      public long getTotalBlockTradeVolumePut() {
        return totalBlockTradeVolumePut_;
      }
      /**
       * <code>optional sint64 total_block_trade_volume_put = 9;</code>
       */
      public Builder setTotalBlockTradeVolumePut(long value) {
        bitField0_ |= 0x00000100;
        totalBlockTradeVolumePut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 total_block_trade_volume_put = 9;</code>
       */
      public Builder clearTotalBlockTradeVolumePut() {
        bitField0_ = (bitField0_ & ~0x00000100);
        totalBlockTradeVolumePut_ = 0L;
        onChanged();
        return this;
      }

      private int exponentTotalVolumeFutures_ ;
      /**
       * <code>optional sint32 exponent_total_volume_futures = 10;</code>
       */
      public boolean hasExponentTotalVolumeFutures() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional sint32 exponent_total_volume_futures = 10;</code>
       */
      public int getExponentTotalVolumeFutures() {
        return exponentTotalVolumeFutures_;
      }
      /**
       * <code>optional sint32 exponent_total_volume_futures = 10;</code>
       */
      public Builder setExponentTotalVolumeFutures(int value) {
        bitField0_ |= 0x00000200;
        exponentTotalVolumeFutures_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_total_volume_futures = 10;</code>
       */
      public Builder clearExponentTotalVolumeFutures() {
        bitField0_ = (bitField0_ & ~0x00000200);
        exponentTotalVolumeFutures_ = 0;
        onChanged();
        return this;
      }

      private long totalVolumeFutures_ ;
      /**
       * <code>optional sint64 total_volume_futures = 11;</code>
       */
      public boolean hasTotalVolumeFutures() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional sint64 total_volume_futures = 11;</code>
       */
      public long getTotalVolumeFutures() {
        return totalVolumeFutures_;
      }
      /**
       * <code>optional sint64 total_volume_futures = 11;</code>
       */
      public Builder setTotalVolumeFutures(long value) {
        bitField0_ |= 0x00000400;
        totalVolumeFutures_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 total_volume_futures = 11;</code>
       */
      public Builder clearTotalVolumeFutures() {
        bitField0_ = (bitField0_ & ~0x00000400);
        totalVolumeFutures_ = 0L;
        onChanged();
        return this;
      }

      private int exponentTotalBlockTradeVolumeFutures_ ;
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_futures = 12;</code>
       */
      public boolean hasExponentTotalBlockTradeVolumeFutures() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_futures = 12;</code>
       */
      public int getExponentTotalBlockTradeVolumeFutures() {
        return exponentTotalBlockTradeVolumeFutures_;
      }
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_futures = 12;</code>
       */
      public Builder setExponentTotalBlockTradeVolumeFutures(int value) {
        bitField0_ |= 0x00000800;
        exponentTotalBlockTradeVolumeFutures_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_total_block_trade_volume_futures = 12;</code>
       */
      public Builder clearExponentTotalBlockTradeVolumeFutures() {
        bitField0_ = (bitField0_ & ~0x00000800);
        exponentTotalBlockTradeVolumeFutures_ = 0;
        onChanged();
        return this;
      }

      private long totalBlockTradeVolumeFutures_ ;
      /**
       * <code>optional sint64 total_block_trade_volume_futures = 13;</code>
       */
      public boolean hasTotalBlockTradeVolumeFutures() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional sint64 total_block_trade_volume_futures = 13;</code>
       */
      public long getTotalBlockTradeVolumeFutures() {
        return totalBlockTradeVolumeFutures_;
      }
      /**
       * <code>optional sint64 total_block_trade_volume_futures = 13;</code>
       */
      public Builder setTotalBlockTradeVolumeFutures(long value) {
        bitField0_ |= 0x00001000;
        totalBlockTradeVolumeFutures_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 total_block_trade_volume_futures = 13;</code>
       */
      public Builder clearTotalBlockTradeVolumeFutures() {
        bitField0_ = (bitField0_ & ~0x00001000);
        totalBlockTradeVolumeFutures_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>(fields_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public Builder addFields(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public Builder addFields(
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 14;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.VolumeAggregation)
    }

    static {
      defaultInstance = new VolumeAggregation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.VolumeAggregation)
  }

  public interface PerformanceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Performance)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional sint64 time = 1;</code>
     */
    boolean hasTime();
    /**
     * <code>optional sint64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>optional sint32 exponent_percent = 2;</code>
     */
    boolean hasExponentPercent();
    /**
     * <code>optional sint32 exponent_percent = 2;</code>
     */
    int getExponentPercent();

    /**
     * <code>optional sint64 percent = 3;</code>
     */
    boolean hasPercent();
    /**
     * <code>optional sint64 percent = 3;</code>
     */
    long getPercent();

    /**
     * <code>repeated .protobuf.Field fields = 4;</code>
     */
    java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> 
        getFieldsList();
    /**
     * <code>repeated .protobuf.Field fields = 4;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index);
    /**
     * <code>repeated .protobuf.Field fields = 4;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .protobuf.Field fields = 4;</code>
     */
    java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .protobuf.Field fields = 4;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protobuf.Performance}
   */
  public static final class Performance extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Performance)
      PerformanceOrBuilder {
    // Use Performance.newBuilder() to construct.
    private Performance(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Performance(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Performance defaultInstance;
    public static Performance getDefaultInstance() {
      return defaultInstance;
    }

    public Performance getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Performance(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              time_ = input.readSInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              exponentPercent_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              percent_ = input.readSInt64();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>();
                mutable_bitField0_ |= 0x00000008;
              }
              fields_.add(input.readMessage(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Performance_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Performance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance.Builder.class);
    }

    public static com.google.protobuf.Parser<Performance> PARSER =
        new com.google.protobuf.AbstractParser<Performance>() {
      public Performance parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Performance(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Performance> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int EXPONENT_PERCENT_FIELD_NUMBER = 2;
    private int exponentPercent_;
    /**
     * <code>optional sint32 exponent_percent = 2;</code>
     */
    public boolean hasExponentPercent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 exponent_percent = 2;</code>
     */
    public int getExponentPercent() {
      return exponentPercent_;
    }

    public static final int PERCENT_FIELD_NUMBER = 3;
    private long percent_;
    /**
     * <code>optional sint64 percent = 3;</code>
     */
    public boolean hasPercent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint64 percent = 3;</code>
     */
    public long getPercent() {
      return percent_;
    }

    public static final int FIELDS_FIELD_NUMBER = 4;
    private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_;
    /**
     * <code>repeated .protobuf.Field fields = 4;</code>
     */
    public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 4;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 4;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .protobuf.Field fields = 4;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .protobuf.Field fields = 4;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    private void initFields() {
      time_ = 0L;
      exponentPercent_ = 0;
      percent_ = 0L;
      fields_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFieldsCount(); i++) {
        if (!getFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, exponentPercent_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt64(3, percent_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(4, fields_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, exponentPercent_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, percent_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, fields_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Performance}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Performance)
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.PerformanceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Performance_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Performance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance.Builder.class);
      }

      // Construct using de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        exponentPercent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        percent_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Performance_descriptor;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance getDefaultInstanceForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance.getDefaultInstance();
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance build() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance buildPartial() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance result = new de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.exponentPercent_ = exponentPercent_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.percent_ = percent_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance) {
          return mergeFrom((de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance other) {
        if (other == de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasExponentPercent()) {
          setExponentPercent(other.getExponentPercent());
        }
        if (other.hasPercent()) {
          setPercent(other.getPercent());
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000008);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFieldsCount(); i++) {
          if (!getFields(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Performance) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long time_ ;
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        onChanged();
        return this;
      }

      private int exponentPercent_ ;
      /**
       * <code>optional sint32 exponent_percent = 2;</code>
       */
      public boolean hasExponentPercent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 exponent_percent = 2;</code>
       */
      public int getExponentPercent() {
        return exponentPercent_;
      }
      /**
       * <code>optional sint32 exponent_percent = 2;</code>
       */
      public Builder setExponentPercent(int value) {
        bitField0_ |= 0x00000002;
        exponentPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_percent = 2;</code>
       */
      public Builder clearExponentPercent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        exponentPercent_ = 0;
        onChanged();
        return this;
      }

      private long percent_ ;
      /**
       * <code>optional sint64 percent = 3;</code>
       */
      public boolean hasPercent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint64 percent = 3;</code>
       */
      public long getPercent() {
        return percent_;
      }
      /**
       * <code>optional sint64 percent = 3;</code>
       */
      public Builder setPercent(long value) {
        bitField0_ |= 0x00000004;
        percent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 percent = 3;</code>
       */
      public Builder clearPercent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        percent_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>(fields_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public Builder addFields(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public Builder addFields(
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Performance)
    }

    static {
      defaultInstance = new Performance(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Performance)
  }

  public interface TickOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Tick)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional sint64 time = 1;</code>
     */
    boolean hasTime();
    /**
     * <code>optional sint64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>optional sint32 exponent_price = 2;</code>
     */
    boolean hasExponentPrice();
    /**
     * <code>optional sint32 exponent_price = 2;</code>
     */
    int getExponentPrice();

    /**
     * <code>optional sint64 price = 3;</code>
     */
    boolean hasPrice();
    /**
     * <code>optional sint64 price = 3;</code>
     */
    long getPrice();

    /**
     * <code>optional sint64 volume = 4;</code>
     */
    boolean hasVolume();
    /**
     * <code>optional sint64 volume = 4;</code>
     */
    long getVolume();

    /**
     * <code>optional string supplement = 5;</code>
     */
    boolean hasSupplement();
    /**
     * <code>optional string supplement = 5;</code>
     */
    java.lang.String getSupplement();
    /**
     * <code>optional string supplement = 5;</code>
     */
    com.google.protobuf.ByteString
        getSupplementBytes();

    /**
     * <code>optional string tradeIdentifier = 6;</code>
     */
    boolean hasTradeIdentifier();
    /**
     * <code>optional string tradeIdentifier = 6;</code>
     */
    java.lang.String getTradeIdentifier();
    /**
     * <code>optional string tradeIdentifier = 6;</code>
     */
    com.google.protobuf.ByteString
        getTradeIdentifierBytes();

    /**
     * <code>repeated .protobuf.Field fields = 7;</code>
     */
    java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> 
        getFieldsList();
    /**
     * <code>repeated .protobuf.Field fields = 7;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index);
    /**
     * <code>repeated .protobuf.Field fields = 7;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .protobuf.Field fields = 7;</code>
     */
    java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .protobuf.Field fields = 7;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protobuf.Tick}
   */
  public static final class Tick extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Tick)
      TickOrBuilder {
    // Use Tick.newBuilder() to construct.
    private Tick(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Tick(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Tick defaultInstance;
    public static Tick getDefaultInstance() {
      return defaultInstance;
    }

    public Tick getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Tick(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              time_ = input.readSInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              exponentPrice_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              price_ = input.readSInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              volume_ = input.readSInt64();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              supplement_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              tradeIdentifier_ = bs;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>();
                mutable_bitField0_ |= 0x00000040;
              }
              fields_.add(input.readMessage(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Tick_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Tick_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick.Builder.class);
    }

    public static com.google.protobuf.Parser<Tick> PARSER =
        new com.google.protobuf.AbstractParser<Tick>() {
      public Tick parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Tick(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Tick> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int EXPONENT_PRICE_FIELD_NUMBER = 2;
    private int exponentPrice_;
    /**
     * <code>optional sint32 exponent_price = 2;</code>
     */
    public boolean hasExponentPrice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 exponent_price = 2;</code>
     */
    public int getExponentPrice() {
      return exponentPrice_;
    }

    public static final int PRICE_FIELD_NUMBER = 3;
    private long price_;
    /**
     * <code>optional sint64 price = 3;</code>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint64 price = 3;</code>
     */
    public long getPrice() {
      return price_;
    }

    public static final int VOLUME_FIELD_NUMBER = 4;
    private long volume_;
    /**
     * <code>optional sint64 volume = 4;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint64 volume = 4;</code>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int SUPPLEMENT_FIELD_NUMBER = 5;
    private java.lang.Object supplement_;
    /**
     * <code>optional string supplement = 5;</code>
     */
    public boolean hasSupplement() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string supplement = 5;</code>
     */
    public java.lang.String getSupplement() {
      java.lang.Object ref = supplement_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          supplement_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string supplement = 5;</code>
     */
    public com.google.protobuf.ByteString
        getSupplementBytes() {
      java.lang.Object ref = supplement_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        supplement_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRADEIDENTIFIER_FIELD_NUMBER = 6;
    private java.lang.Object tradeIdentifier_;
    /**
     * <code>optional string tradeIdentifier = 6;</code>
     */
    public boolean hasTradeIdentifier() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string tradeIdentifier = 6;</code>
     */
    public java.lang.String getTradeIdentifier() {
      java.lang.Object ref = tradeIdentifier_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tradeIdentifier_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tradeIdentifier = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTradeIdentifierBytes() {
      java.lang.Object ref = tradeIdentifier_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tradeIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_FIELD_NUMBER = 7;
    private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_;
    /**
     * <code>repeated .protobuf.Field fields = 7;</code>
     */
    public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 7;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 7;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .protobuf.Field fields = 7;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .protobuf.Field fields = 7;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    private void initFields() {
      time_ = 0L;
      exponentPrice_ = 0;
      price_ = 0L;
      volume_ = 0L;
      supplement_ = "";
      tradeIdentifier_ = "";
      fields_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFieldsCount(); i++) {
        if (!getFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, exponentPrice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt64(3, price_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt64(4, volume_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getSupplementBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getTradeIdentifierBytes());
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(7, fields_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, exponentPrice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, price_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(4, volume_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getSupplementBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getTradeIdentifierBytes());
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fields_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Tick}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Tick)
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Tick_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Tick_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick.Builder.class);
      }

      // Construct using de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        exponentPrice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        price_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        supplement_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        tradeIdentifier_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Tick_descriptor;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick getDefaultInstanceForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick.getDefaultInstance();
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick build() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick buildPartial() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick result = new de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.exponentPrice_ = exponentPrice_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.supplement_ = supplement_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tradeIdentifier_ = tradeIdentifier_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick) {
          return mergeFrom((de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick other) {
        if (other == de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasExponentPrice()) {
          setExponentPrice(other.getExponentPrice());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasSupplement()) {
          bitField0_ |= 0x00000010;
          supplement_ = other.supplement_;
          onChanged();
        }
        if (other.hasTradeIdentifier()) {
          bitField0_ |= 0x00000020;
          tradeIdentifier_ = other.tradeIdentifier_;
          onChanged();
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000040);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFieldsCount(); i++) {
          if (!getFields(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Tick) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long time_ ;
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        onChanged();
        return this;
      }

      private int exponentPrice_ ;
      /**
       * <code>optional sint32 exponent_price = 2;</code>
       */
      public boolean hasExponentPrice() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 exponent_price = 2;</code>
       */
      public int getExponentPrice() {
        return exponentPrice_;
      }
      /**
       * <code>optional sint32 exponent_price = 2;</code>
       */
      public Builder setExponentPrice(int value) {
        bitField0_ |= 0x00000002;
        exponentPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_price = 2;</code>
       */
      public Builder clearExponentPrice() {
        bitField0_ = (bitField0_ & ~0x00000002);
        exponentPrice_ = 0;
        onChanged();
        return this;
      }

      private long price_ ;
      /**
       * <code>optional sint64 price = 3;</code>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint64 price = 3;</code>
       */
      public long getPrice() {
        return price_;
      }
      /**
       * <code>optional sint64 price = 3;</code>
       */
      public Builder setPrice(long value) {
        bitField0_ |= 0x00000004;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 price = 3;</code>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000004);
        price_ = 0L;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <code>optional sint64 volume = 4;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint64 volume = 4;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <code>optional sint64 volume = 4;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000008;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 volume = 4;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000008);
        volume_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object supplement_ = "";
      /**
       * <code>optional string supplement = 5;</code>
       */
      public boolean hasSupplement() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string supplement = 5;</code>
       */
      public java.lang.String getSupplement() {
        java.lang.Object ref = supplement_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            supplement_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string supplement = 5;</code>
       */
      public com.google.protobuf.ByteString
          getSupplementBytes() {
        java.lang.Object ref = supplement_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          supplement_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string supplement = 5;</code>
       */
      public Builder setSupplement(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        supplement_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string supplement = 5;</code>
       */
      public Builder clearSupplement() {
        bitField0_ = (bitField0_ & ~0x00000010);
        supplement_ = getDefaultInstance().getSupplement();
        onChanged();
        return this;
      }
      /**
       * <code>optional string supplement = 5;</code>
       */
      public Builder setSupplementBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        supplement_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tradeIdentifier_ = "";
      /**
       * <code>optional string tradeIdentifier = 6;</code>
       */
      public boolean hasTradeIdentifier() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string tradeIdentifier = 6;</code>
       */
      public java.lang.String getTradeIdentifier() {
        java.lang.Object ref = tradeIdentifier_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tradeIdentifier_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tradeIdentifier = 6;</code>
       */
      public com.google.protobuf.ByteString
          getTradeIdentifierBytes() {
        java.lang.Object ref = tradeIdentifier_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tradeIdentifier_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tradeIdentifier = 6;</code>
       */
      public Builder setTradeIdentifier(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        tradeIdentifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tradeIdentifier = 6;</code>
       */
      public Builder clearTradeIdentifier() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tradeIdentifier_ = getDefaultInstance().getTradeIdentifier();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tradeIdentifier = 6;</code>
       */
      public Builder setTradeIdentifierBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        tradeIdentifier_ = value;
        onChanged();
        return this;
      }

      private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>(fields_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public Builder addFields(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public Builder addFields(
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 7;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Tick)
    }

    static {
      defaultInstance = new Tick(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Tick)
  }

  public interface TickEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.TickEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional sint64 time = 1;</code>
     */
    boolean hasTime();
    /**
     * <code>optional sint64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>optional sint32 exponent_bid_price = 2;</code>
     */
    boolean hasExponentBidPrice();
    /**
     * <code>optional sint32 exponent_bid_price = 2;</code>
     */
    int getExponentBidPrice();

    /**
     * <code>optional sint64 bid_price = 3;</code>
     */
    boolean hasBidPrice();
    /**
     * <code>optional sint64 bid_price = 3;</code>
     */
    long getBidPrice();

    /**
     * <code>optional sint64 bid_volume = 4;</code>
     */
    boolean hasBidVolume();
    /**
     * <code>optional sint64 bid_volume = 4;</code>
     */
    long getBidVolume();

    /**
     * <code>optional sint32 exponent_ask_price = 5;</code>
     */
    boolean hasExponentAskPrice();
    /**
     * <code>optional sint32 exponent_ask_price = 5;</code>
     */
    int getExponentAskPrice();

    /**
     * <code>optional sint64 ask_price = 6;</code>
     */
    boolean hasAskPrice();
    /**
     * <code>optional sint64 ask_price = 6;</code>
     */
    long getAskPrice();

    /**
     * <code>optional sint64 ask_volume = 7;</code>
     */
    boolean hasAskVolume();
    /**
     * <code>optional sint64 ask_volume = 7;</code>
     */
    long getAskVolume();

    /**
     * <code>optional sint32 exponent_price = 8;</code>
     */
    boolean hasExponentPrice();
    /**
     * <code>optional sint32 exponent_price = 8;</code>
     */
    int getExponentPrice();

    /**
     * <code>optional sint64 price = 9;</code>
     */
    boolean hasPrice();
    /**
     * <code>optional sint64 price = 9;</code>
     */
    long getPrice();

    /**
     * <code>optional sint64 volume = 10;</code>
     */
    boolean hasVolume();
    /**
     * <code>optional sint64 volume = 10;</code>
     */
    long getVolume();

    /**
     * <code>optional string supplement = 11;</code>
     */
    boolean hasSupplement();
    /**
     * <code>optional string supplement = 11;</code>
     */
    java.lang.String getSupplement();
    /**
     * <code>optional string supplement = 11;</code>
     */
    com.google.protobuf.ByteString
        getSupplementBytes();

    /**
     * <code>optional string tradeIdentifier = 12;</code>
     */
    boolean hasTradeIdentifier();
    /**
     * <code>optional string tradeIdentifier = 12;</code>
     */
    java.lang.String getTradeIdentifier();
    /**
     * <code>optional string tradeIdentifier = 12;</code>
     */
    com.google.protobuf.ByteString
        getTradeIdentifierBytes();

    /**
     * <code>repeated .protobuf.Field fields = 13;</code>
     */
    java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> 
        getFieldsList();
    /**
     * <code>repeated .protobuf.Field fields = 13;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index);
    /**
     * <code>repeated .protobuf.Field fields = 13;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .protobuf.Field fields = 13;</code>
     */
    java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .protobuf.Field fields = 13;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protobuf.TickEvent}
   */
  public static final class TickEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.TickEvent)
      TickEventOrBuilder {
    // Use TickEvent.newBuilder() to construct.
    private TickEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TickEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TickEvent defaultInstance;
    public static TickEvent getDefaultInstance() {
      return defaultInstance;
    }

    public TickEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TickEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              time_ = input.readSInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              exponentBidPrice_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              bidPrice_ = input.readSInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              bidVolume_ = input.readSInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              exponentAskPrice_ = input.readSInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              askPrice_ = input.readSInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              askVolume_ = input.readSInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              exponentPrice_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              price_ = input.readSInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              volume_ = input.readSInt64();
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              supplement_ = bs;
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              tradeIdentifier_ = bs;
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>();
                mutable_bitField0_ |= 0x00001000;
              }
              fields_.add(input.readMessage(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_TickEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_TickEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<TickEvent> PARSER =
        new com.google.protobuf.AbstractParser<TickEvent>() {
      public TickEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TickEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TickEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int EXPONENT_BID_PRICE_FIELD_NUMBER = 2;
    private int exponentBidPrice_;
    /**
     * <code>optional sint32 exponent_bid_price = 2;</code>
     */
    public boolean hasExponentBidPrice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 exponent_bid_price = 2;</code>
     */
    public int getExponentBidPrice() {
      return exponentBidPrice_;
    }

    public static final int BID_PRICE_FIELD_NUMBER = 3;
    private long bidPrice_;
    /**
     * <code>optional sint64 bid_price = 3;</code>
     */
    public boolean hasBidPrice() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint64 bid_price = 3;</code>
     */
    public long getBidPrice() {
      return bidPrice_;
    }

    public static final int BID_VOLUME_FIELD_NUMBER = 4;
    private long bidVolume_;
    /**
     * <code>optional sint64 bid_volume = 4;</code>
     */
    public boolean hasBidVolume() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint64 bid_volume = 4;</code>
     */
    public long getBidVolume() {
      return bidVolume_;
    }

    public static final int EXPONENT_ASK_PRICE_FIELD_NUMBER = 5;
    private int exponentAskPrice_;
    /**
     * <code>optional sint32 exponent_ask_price = 5;</code>
     */
    public boolean hasExponentAskPrice() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 exponent_ask_price = 5;</code>
     */
    public int getExponentAskPrice() {
      return exponentAskPrice_;
    }

    public static final int ASK_PRICE_FIELD_NUMBER = 6;
    private long askPrice_;
    /**
     * <code>optional sint64 ask_price = 6;</code>
     */
    public boolean hasAskPrice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint64 ask_price = 6;</code>
     */
    public long getAskPrice() {
      return askPrice_;
    }

    public static final int ASK_VOLUME_FIELD_NUMBER = 7;
    private long askVolume_;
    /**
     * <code>optional sint64 ask_volume = 7;</code>
     */
    public boolean hasAskVolume() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint64 ask_volume = 7;</code>
     */
    public long getAskVolume() {
      return askVolume_;
    }

    public static final int EXPONENT_PRICE_FIELD_NUMBER = 8;
    private int exponentPrice_;
    /**
     * <code>optional sint32 exponent_price = 8;</code>
     */
    public boolean hasExponentPrice() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 exponent_price = 8;</code>
     */
    public int getExponentPrice() {
      return exponentPrice_;
    }

    public static final int PRICE_FIELD_NUMBER = 9;
    private long price_;
    /**
     * <code>optional sint64 price = 9;</code>
     */
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional sint64 price = 9;</code>
     */
    public long getPrice() {
      return price_;
    }

    public static final int VOLUME_FIELD_NUMBER = 10;
    private long volume_;
    /**
     * <code>optional sint64 volume = 10;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional sint64 volume = 10;</code>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int SUPPLEMENT_FIELD_NUMBER = 11;
    private java.lang.Object supplement_;
    /**
     * <code>optional string supplement = 11;</code>
     */
    public boolean hasSupplement() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string supplement = 11;</code>
     */
    public java.lang.String getSupplement() {
      java.lang.Object ref = supplement_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          supplement_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string supplement = 11;</code>
     */
    public com.google.protobuf.ByteString
        getSupplementBytes() {
      java.lang.Object ref = supplement_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        supplement_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRADEIDENTIFIER_FIELD_NUMBER = 12;
    private java.lang.Object tradeIdentifier_;
    /**
     * <code>optional string tradeIdentifier = 12;</code>
     */
    public boolean hasTradeIdentifier() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string tradeIdentifier = 12;</code>
     */
    public java.lang.String getTradeIdentifier() {
      java.lang.Object ref = tradeIdentifier_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tradeIdentifier_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tradeIdentifier = 12;</code>
     */
    public com.google.protobuf.ByteString
        getTradeIdentifierBytes() {
      java.lang.Object ref = tradeIdentifier_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tradeIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FIELDS_FIELD_NUMBER = 13;
    private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_;
    /**
     * <code>repeated .protobuf.Field fields = 13;</code>
     */
    public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 13;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 13;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .protobuf.Field fields = 13;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .protobuf.Field fields = 13;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    private void initFields() {
      time_ = 0L;
      exponentBidPrice_ = 0;
      bidPrice_ = 0L;
      bidVolume_ = 0L;
      exponentAskPrice_ = 0;
      askPrice_ = 0L;
      askVolume_ = 0L;
      exponentPrice_ = 0;
      price_ = 0L;
      volume_ = 0L;
      supplement_ = "";
      tradeIdentifier_ = "";
      fields_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFieldsCount(); i++) {
        if (!getFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, exponentBidPrice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt64(3, bidPrice_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt64(4, bidVolume_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(5, exponentAskPrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt64(6, askPrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt64(7, askVolume_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(8, exponentPrice_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSInt64(9, price_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeSInt64(10, volume_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getSupplementBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getTradeIdentifierBytes());
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(13, fields_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, exponentBidPrice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, bidPrice_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(4, bidVolume_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, exponentAskPrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(6, askPrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(7, askVolume_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, exponentPrice_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(9, price_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(10, volume_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getSupplementBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getTradeIdentifierBytes());
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, fields_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.TickEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.TickEvent)
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_TickEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_TickEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent.Builder.class);
      }

      // Construct using de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        exponentBidPrice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        bidPrice_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        bidVolume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        exponentAskPrice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        askPrice_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        askVolume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        exponentPrice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        price_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        supplement_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        tradeIdentifier_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_TickEvent_descriptor;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent getDefaultInstanceForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent.getDefaultInstance();
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent build() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent buildPartial() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent result = new de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.exponentBidPrice_ = exponentBidPrice_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bidPrice_ = bidPrice_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bidVolume_ = bidVolume_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.exponentAskPrice_ = exponentAskPrice_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.askPrice_ = askPrice_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.askVolume_ = askVolume_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.exponentPrice_ = exponentPrice_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.price_ = price_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.supplement_ = supplement_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tradeIdentifier_ = tradeIdentifier_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent) {
          return mergeFrom((de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent other) {
        if (other == de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasExponentBidPrice()) {
          setExponentBidPrice(other.getExponentBidPrice());
        }
        if (other.hasBidPrice()) {
          setBidPrice(other.getBidPrice());
        }
        if (other.hasBidVolume()) {
          setBidVolume(other.getBidVolume());
        }
        if (other.hasExponentAskPrice()) {
          setExponentAskPrice(other.getExponentAskPrice());
        }
        if (other.hasAskPrice()) {
          setAskPrice(other.getAskPrice());
        }
        if (other.hasAskVolume()) {
          setAskVolume(other.getAskVolume());
        }
        if (other.hasExponentPrice()) {
          setExponentPrice(other.getExponentPrice());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasSupplement()) {
          bitField0_ |= 0x00000400;
          supplement_ = other.supplement_;
          onChanged();
        }
        if (other.hasTradeIdentifier()) {
          bitField0_ |= 0x00000800;
          tradeIdentifier_ = other.tradeIdentifier_;
          onChanged();
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00001000);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFieldsCount(); i++) {
          if (!getFields(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.TickEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long time_ ;
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        onChanged();
        return this;
      }

      private int exponentBidPrice_ ;
      /**
       * <code>optional sint32 exponent_bid_price = 2;</code>
       */
      public boolean hasExponentBidPrice() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 exponent_bid_price = 2;</code>
       */
      public int getExponentBidPrice() {
        return exponentBidPrice_;
      }
      /**
       * <code>optional sint32 exponent_bid_price = 2;</code>
       */
      public Builder setExponentBidPrice(int value) {
        bitField0_ |= 0x00000002;
        exponentBidPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_bid_price = 2;</code>
       */
      public Builder clearExponentBidPrice() {
        bitField0_ = (bitField0_ & ~0x00000002);
        exponentBidPrice_ = 0;
        onChanged();
        return this;
      }

      private long bidPrice_ ;
      /**
       * <code>optional sint64 bid_price = 3;</code>
       */
      public boolean hasBidPrice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint64 bid_price = 3;</code>
       */
      public long getBidPrice() {
        return bidPrice_;
      }
      /**
       * <code>optional sint64 bid_price = 3;</code>
       */
      public Builder setBidPrice(long value) {
        bitField0_ |= 0x00000004;
        bidPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 bid_price = 3;</code>
       */
      public Builder clearBidPrice() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bidPrice_ = 0L;
        onChanged();
        return this;
      }

      private long bidVolume_ ;
      /**
       * <code>optional sint64 bid_volume = 4;</code>
       */
      public boolean hasBidVolume() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint64 bid_volume = 4;</code>
       */
      public long getBidVolume() {
        return bidVolume_;
      }
      /**
       * <code>optional sint64 bid_volume = 4;</code>
       */
      public Builder setBidVolume(long value) {
        bitField0_ |= 0x00000008;
        bidVolume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 bid_volume = 4;</code>
       */
      public Builder clearBidVolume() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bidVolume_ = 0L;
        onChanged();
        return this;
      }

      private int exponentAskPrice_ ;
      /**
       * <code>optional sint32 exponent_ask_price = 5;</code>
       */
      public boolean hasExponentAskPrice() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 exponent_ask_price = 5;</code>
       */
      public int getExponentAskPrice() {
        return exponentAskPrice_;
      }
      /**
       * <code>optional sint32 exponent_ask_price = 5;</code>
       */
      public Builder setExponentAskPrice(int value) {
        bitField0_ |= 0x00000010;
        exponentAskPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_ask_price = 5;</code>
       */
      public Builder clearExponentAskPrice() {
        bitField0_ = (bitField0_ & ~0x00000010);
        exponentAskPrice_ = 0;
        onChanged();
        return this;
      }

      private long askPrice_ ;
      /**
       * <code>optional sint64 ask_price = 6;</code>
       */
      public boolean hasAskPrice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint64 ask_price = 6;</code>
       */
      public long getAskPrice() {
        return askPrice_;
      }
      /**
       * <code>optional sint64 ask_price = 6;</code>
       */
      public Builder setAskPrice(long value) {
        bitField0_ |= 0x00000020;
        askPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 ask_price = 6;</code>
       */
      public Builder clearAskPrice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        askPrice_ = 0L;
        onChanged();
        return this;
      }

      private long askVolume_ ;
      /**
       * <code>optional sint64 ask_volume = 7;</code>
       */
      public boolean hasAskVolume() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint64 ask_volume = 7;</code>
       */
      public long getAskVolume() {
        return askVolume_;
      }
      /**
       * <code>optional sint64 ask_volume = 7;</code>
       */
      public Builder setAskVolume(long value) {
        bitField0_ |= 0x00000040;
        askVolume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 ask_volume = 7;</code>
       */
      public Builder clearAskVolume() {
        bitField0_ = (bitField0_ & ~0x00000040);
        askVolume_ = 0L;
        onChanged();
        return this;
      }

      private int exponentPrice_ ;
      /**
       * <code>optional sint32 exponent_price = 8;</code>
       */
      public boolean hasExponentPrice() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 exponent_price = 8;</code>
       */
      public int getExponentPrice() {
        return exponentPrice_;
      }
      /**
       * <code>optional sint32 exponent_price = 8;</code>
       */
      public Builder setExponentPrice(int value) {
        bitField0_ |= 0x00000080;
        exponentPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_price = 8;</code>
       */
      public Builder clearExponentPrice() {
        bitField0_ = (bitField0_ & ~0x00000080);
        exponentPrice_ = 0;
        onChanged();
        return this;
      }

      private long price_ ;
      /**
       * <code>optional sint64 price = 9;</code>
       */
      public boolean hasPrice() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional sint64 price = 9;</code>
       */
      public long getPrice() {
        return price_;
      }
      /**
       * <code>optional sint64 price = 9;</code>
       */
      public Builder setPrice(long value) {
        bitField0_ |= 0x00000100;
        price_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 price = 9;</code>
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000100);
        price_ = 0L;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <code>optional sint64 volume = 10;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional sint64 volume = 10;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <code>optional sint64 volume = 10;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000200;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 volume = 10;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000200);
        volume_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object supplement_ = "";
      /**
       * <code>optional string supplement = 11;</code>
       */
      public boolean hasSupplement() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string supplement = 11;</code>
       */
      public java.lang.String getSupplement() {
        java.lang.Object ref = supplement_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            supplement_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string supplement = 11;</code>
       */
      public com.google.protobuf.ByteString
          getSupplementBytes() {
        java.lang.Object ref = supplement_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          supplement_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string supplement = 11;</code>
       */
      public Builder setSupplement(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        supplement_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string supplement = 11;</code>
       */
      public Builder clearSupplement() {
        bitField0_ = (bitField0_ & ~0x00000400);
        supplement_ = getDefaultInstance().getSupplement();
        onChanged();
        return this;
      }
      /**
       * <code>optional string supplement = 11;</code>
       */
      public Builder setSupplementBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        supplement_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tradeIdentifier_ = "";
      /**
       * <code>optional string tradeIdentifier = 12;</code>
       */
      public boolean hasTradeIdentifier() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string tradeIdentifier = 12;</code>
       */
      public java.lang.String getTradeIdentifier() {
        java.lang.Object ref = tradeIdentifier_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tradeIdentifier_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tradeIdentifier = 12;</code>
       */
      public com.google.protobuf.ByteString
          getTradeIdentifierBytes() {
        java.lang.Object ref = tradeIdentifier_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tradeIdentifier_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tradeIdentifier = 12;</code>
       */
      public Builder setTradeIdentifier(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        tradeIdentifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tradeIdentifier = 12;</code>
       */
      public Builder clearTradeIdentifier() {
        bitField0_ = (bitField0_ & ~0x00000800);
        tradeIdentifier_ = getDefaultInstance().getTradeIdentifier();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tradeIdentifier = 12;</code>
       */
      public Builder setTradeIdentifierBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        tradeIdentifier_ = value;
        onChanged();
        return this;
      }

      private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>(fields_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public Builder addFields(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public Builder addFields(
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 13;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.TickEvent)
    }

    static {
      defaultInstance = new TickEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.TickEvent)
  }

  public interface OhlcvOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Ohlcv)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional sint64 time = 1;</code>
     */
    boolean hasTime();
    /**
     * <code>optional sint64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>optional sint32 exponent_open = 2;</code>
     */
    boolean hasExponentOpen();
    /**
     * <code>optional sint32 exponent_open = 2;</code>
     */
    int getExponentOpen();

    /**
     * <code>optional sint64 open = 3;</code>
     */
    boolean hasOpen();
    /**
     * <code>optional sint64 open = 3;</code>
     */
    long getOpen();

    /**
     * <code>optional sint32 exponent_high = 4;</code>
     */
    boolean hasExponentHigh();
    /**
     * <code>optional sint32 exponent_high = 4;</code>
     */
    int getExponentHigh();

    /**
     * <code>optional sint64 high = 5;</code>
     */
    boolean hasHigh();
    /**
     * <code>optional sint64 high = 5;</code>
     */
    long getHigh();

    /**
     * <code>optional sint32 exponent_low = 6;</code>
     */
    boolean hasExponentLow();
    /**
     * <code>optional sint32 exponent_low = 6;</code>
     */
    int getExponentLow();

    /**
     * <code>optional sint64 low = 7;</code>
     */
    boolean hasLow();
    /**
     * <code>optional sint64 low = 7;</code>
     */
    long getLow();

    /**
     * <code>optional sint32 exponent_close = 8;</code>
     */
    boolean hasExponentClose();
    /**
     * <code>optional sint32 exponent_close = 8;</code>
     */
    int getExponentClose();

    /**
     * <code>optional sint64 close = 9;</code>
     */
    boolean hasClose();
    /**
     * <code>optional sint64 close = 9;</code>
     */
    long getClose();

    /**
     * <code>optional sint64 volume = 10;</code>
     */
    boolean hasVolume();
    /**
     * <code>optional sint64 volume = 10;</code>
     */
    long getVolume();

    /**
     * <code>optional sint32 count = 11;</code>
     */
    boolean hasCount();
    /**
     * <code>optional sint32 count = 11;</code>
     */
    int getCount();

    /**
     * <code>repeated .protobuf.Field fields = 12;</code>
     */
    java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> 
        getFieldsList();
    /**
     * <code>repeated .protobuf.Field fields = 12;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index);
    /**
     * <code>repeated .protobuf.Field fields = 12;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .protobuf.Field fields = 12;</code>
     */
    java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .protobuf.Field fields = 12;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protobuf.Ohlcv}
   */
  public static final class Ohlcv extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Ohlcv)
      OhlcvOrBuilder {
    // Use Ohlcv.newBuilder() to construct.
    private Ohlcv(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Ohlcv(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Ohlcv defaultInstance;
    public static Ohlcv getDefaultInstance() {
      return defaultInstance;
    }

    public Ohlcv getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Ohlcv(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              time_ = input.readSInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              exponentOpen_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              open_ = input.readSInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              exponentHigh_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              high_ = input.readSInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              exponentLow_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              low_ = input.readSInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              exponentClose_ = input.readSInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              close_ = input.readSInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              volume_ = input.readSInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              count_ = input.readSInt32();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>();
                mutable_bitField0_ |= 0x00000800;
              }
              fields_.add(input.readMessage(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Ohlcv_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Ohlcv_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv.Builder.class);
    }

    public static com.google.protobuf.Parser<Ohlcv> PARSER =
        new com.google.protobuf.AbstractParser<Ohlcv>() {
      public Ohlcv parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ohlcv(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Ohlcv> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int EXPONENT_OPEN_FIELD_NUMBER = 2;
    private int exponentOpen_;
    /**
     * <code>optional sint32 exponent_open = 2;</code>
     */
    public boolean hasExponentOpen() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 exponent_open = 2;</code>
     */
    public int getExponentOpen() {
      return exponentOpen_;
    }

    public static final int OPEN_FIELD_NUMBER = 3;
    private long open_;
    /**
     * <code>optional sint64 open = 3;</code>
     */
    public boolean hasOpen() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint64 open = 3;</code>
     */
    public long getOpen() {
      return open_;
    }

    public static final int EXPONENT_HIGH_FIELD_NUMBER = 4;
    private int exponentHigh_;
    /**
     * <code>optional sint32 exponent_high = 4;</code>
     */
    public boolean hasExponentHigh() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 exponent_high = 4;</code>
     */
    public int getExponentHigh() {
      return exponentHigh_;
    }

    public static final int HIGH_FIELD_NUMBER = 5;
    private long high_;
    /**
     * <code>optional sint64 high = 5;</code>
     */
    public boolean hasHigh() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint64 high = 5;</code>
     */
    public long getHigh() {
      return high_;
    }

    public static final int EXPONENT_LOW_FIELD_NUMBER = 6;
    private int exponentLow_;
    /**
     * <code>optional sint32 exponent_low = 6;</code>
     */
    public boolean hasExponentLow() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 exponent_low = 6;</code>
     */
    public int getExponentLow() {
      return exponentLow_;
    }

    public static final int LOW_FIELD_NUMBER = 7;
    private long low_;
    /**
     * <code>optional sint64 low = 7;</code>
     */
    public boolean hasLow() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint64 low = 7;</code>
     */
    public long getLow() {
      return low_;
    }

    public static final int EXPONENT_CLOSE_FIELD_NUMBER = 8;
    private int exponentClose_;
    /**
     * <code>optional sint32 exponent_close = 8;</code>
     */
    public boolean hasExponentClose() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 exponent_close = 8;</code>
     */
    public int getExponentClose() {
      return exponentClose_;
    }

    public static final int CLOSE_FIELD_NUMBER = 9;
    private long close_;
    /**
     * <code>optional sint64 close = 9;</code>
     */
    public boolean hasClose() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional sint64 close = 9;</code>
     */
    public long getClose() {
      return close_;
    }

    public static final int VOLUME_FIELD_NUMBER = 10;
    private long volume_;
    /**
     * <code>optional sint64 volume = 10;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional sint64 volume = 10;</code>
     */
    public long getVolume() {
      return volume_;
    }

    public static final int COUNT_FIELD_NUMBER = 11;
    private int count_;
    /**
     * <code>optional sint32 count = 11;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional sint32 count = 11;</code>
     */
    public int getCount() {
      return count_;
    }

    public static final int FIELDS_FIELD_NUMBER = 12;
    private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_;
    /**
     * <code>repeated .protobuf.Field fields = 12;</code>
     */
    public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 12;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 12;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .protobuf.Field fields = 12;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .protobuf.Field fields = 12;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    private void initFields() {
      time_ = 0L;
      exponentOpen_ = 0;
      open_ = 0L;
      exponentHigh_ = 0;
      high_ = 0L;
      exponentLow_ = 0;
      low_ = 0L;
      exponentClose_ = 0;
      close_ = 0L;
      volume_ = 0L;
      count_ = 0;
      fields_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFieldsCount(); i++) {
        if (!getFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, exponentOpen_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt64(3, open_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, exponentHigh_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt64(5, high_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(6, exponentLow_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt64(7, low_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt32(8, exponentClose_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeSInt64(9, close_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeSInt64(10, volume_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeSInt32(11, count_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(12, fields_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, exponentOpen_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, open_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, exponentHigh_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(5, high_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, exponentLow_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(7, low_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, exponentClose_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(9, close_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(10, volume_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(11, count_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, fields_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Ohlcv}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Ohlcv)
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.OhlcvOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Ohlcv_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Ohlcv_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv.Builder.class);
      }

      // Construct using de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        exponentOpen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        open_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        exponentHigh_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        high_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        exponentLow_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        low_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        exponentClose_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        close_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        count_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Ohlcv_descriptor;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv getDefaultInstanceForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv.getDefaultInstance();
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv build() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv buildPartial() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv result = new de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.exponentOpen_ = exponentOpen_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.open_ = open_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.exponentHigh_ = exponentHigh_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.high_ = high_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.exponentLow_ = exponentLow_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.low_ = low_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.exponentClose_ = exponentClose_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.close_ = close_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.count_ = count_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv) {
          return mergeFrom((de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv other) {
        if (other == de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasExponentOpen()) {
          setExponentOpen(other.getExponentOpen());
        }
        if (other.hasOpen()) {
          setOpen(other.getOpen());
        }
        if (other.hasExponentHigh()) {
          setExponentHigh(other.getExponentHigh());
        }
        if (other.hasHigh()) {
          setHigh(other.getHigh());
        }
        if (other.hasExponentLow()) {
          setExponentLow(other.getExponentLow());
        }
        if (other.hasLow()) {
          setLow(other.getLow());
        }
        if (other.hasExponentClose()) {
          setExponentClose(other.getExponentClose());
        }
        if (other.hasClose()) {
          setClose(other.getClose());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000800);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFieldsCount(); i++) {
          if (!getFields(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Ohlcv) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long time_ ;
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        onChanged();
        return this;
      }

      private int exponentOpen_ ;
      /**
       * <code>optional sint32 exponent_open = 2;</code>
       */
      public boolean hasExponentOpen() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 exponent_open = 2;</code>
       */
      public int getExponentOpen() {
        return exponentOpen_;
      }
      /**
       * <code>optional sint32 exponent_open = 2;</code>
       */
      public Builder setExponentOpen(int value) {
        bitField0_ |= 0x00000002;
        exponentOpen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_open = 2;</code>
       */
      public Builder clearExponentOpen() {
        bitField0_ = (bitField0_ & ~0x00000002);
        exponentOpen_ = 0;
        onChanged();
        return this;
      }

      private long open_ ;
      /**
       * <code>optional sint64 open = 3;</code>
       */
      public boolean hasOpen() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint64 open = 3;</code>
       */
      public long getOpen() {
        return open_;
      }
      /**
       * <code>optional sint64 open = 3;</code>
       */
      public Builder setOpen(long value) {
        bitField0_ |= 0x00000004;
        open_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 open = 3;</code>
       */
      public Builder clearOpen() {
        bitField0_ = (bitField0_ & ~0x00000004);
        open_ = 0L;
        onChanged();
        return this;
      }

      private int exponentHigh_ ;
      /**
       * <code>optional sint32 exponent_high = 4;</code>
       */
      public boolean hasExponentHigh() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 exponent_high = 4;</code>
       */
      public int getExponentHigh() {
        return exponentHigh_;
      }
      /**
       * <code>optional sint32 exponent_high = 4;</code>
       */
      public Builder setExponentHigh(int value) {
        bitField0_ |= 0x00000008;
        exponentHigh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_high = 4;</code>
       */
      public Builder clearExponentHigh() {
        bitField0_ = (bitField0_ & ~0x00000008);
        exponentHigh_ = 0;
        onChanged();
        return this;
      }

      private long high_ ;
      /**
       * <code>optional sint64 high = 5;</code>
       */
      public boolean hasHigh() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint64 high = 5;</code>
       */
      public long getHigh() {
        return high_;
      }
      /**
       * <code>optional sint64 high = 5;</code>
       */
      public Builder setHigh(long value) {
        bitField0_ |= 0x00000010;
        high_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 high = 5;</code>
       */
      public Builder clearHigh() {
        bitField0_ = (bitField0_ & ~0x00000010);
        high_ = 0L;
        onChanged();
        return this;
      }

      private int exponentLow_ ;
      /**
       * <code>optional sint32 exponent_low = 6;</code>
       */
      public boolean hasExponentLow() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 exponent_low = 6;</code>
       */
      public int getExponentLow() {
        return exponentLow_;
      }
      /**
       * <code>optional sint32 exponent_low = 6;</code>
       */
      public Builder setExponentLow(int value) {
        bitField0_ |= 0x00000020;
        exponentLow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_low = 6;</code>
       */
      public Builder clearExponentLow() {
        bitField0_ = (bitField0_ & ~0x00000020);
        exponentLow_ = 0;
        onChanged();
        return this;
      }

      private long low_ ;
      /**
       * <code>optional sint64 low = 7;</code>
       */
      public boolean hasLow() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint64 low = 7;</code>
       */
      public long getLow() {
        return low_;
      }
      /**
       * <code>optional sint64 low = 7;</code>
       */
      public Builder setLow(long value) {
        bitField0_ |= 0x00000040;
        low_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 low = 7;</code>
       */
      public Builder clearLow() {
        bitField0_ = (bitField0_ & ~0x00000040);
        low_ = 0L;
        onChanged();
        return this;
      }

      private int exponentClose_ ;
      /**
       * <code>optional sint32 exponent_close = 8;</code>
       */
      public boolean hasExponentClose() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional sint32 exponent_close = 8;</code>
       */
      public int getExponentClose() {
        return exponentClose_;
      }
      /**
       * <code>optional sint32 exponent_close = 8;</code>
       */
      public Builder setExponentClose(int value) {
        bitField0_ |= 0x00000080;
        exponentClose_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_close = 8;</code>
       */
      public Builder clearExponentClose() {
        bitField0_ = (bitField0_ & ~0x00000080);
        exponentClose_ = 0;
        onChanged();
        return this;
      }

      private long close_ ;
      /**
       * <code>optional sint64 close = 9;</code>
       */
      public boolean hasClose() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional sint64 close = 9;</code>
       */
      public long getClose() {
        return close_;
      }
      /**
       * <code>optional sint64 close = 9;</code>
       */
      public Builder setClose(long value) {
        bitField0_ |= 0x00000100;
        close_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 close = 9;</code>
       */
      public Builder clearClose() {
        bitField0_ = (bitField0_ & ~0x00000100);
        close_ = 0L;
        onChanged();
        return this;
      }

      private long volume_ ;
      /**
       * <code>optional sint64 volume = 10;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional sint64 volume = 10;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <code>optional sint64 volume = 10;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000200;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 volume = 10;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000200);
        volume_ = 0L;
        onChanged();
        return this;
      }

      private int count_ ;
      /**
       * <code>optional sint32 count = 11;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional sint32 count = 11;</code>
       */
      public int getCount() {
        return count_;
      }
      /**
       * <code>optional sint32 count = 11;</code>
       */
      public Builder setCount(int value) {
        bitField0_ |= 0x00000400;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 count = 11;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        count_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>(fields_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public Builder addFields(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public Builder addFields(
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 12;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Ohlcv)
    }

    static {
      defaultInstance = new Ohlcv(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Ohlcv)
  }

  public interface FundPriceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.FundPrice)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional sint64 time = 1;</code>
     */
    boolean hasTime();
    /**
     * <code>optional sint64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>optional sint32 exponent_issue_price = 2;</code>
     */
    boolean hasExponentIssuePrice();
    /**
     * <code>optional sint32 exponent_issue_price = 2;</code>
     */
    int getExponentIssuePrice();

    /**
     * <code>optional sint64 issue_price = 3;</code>
     */
    boolean hasIssuePrice();
    /**
     * <code>optional sint64 issue_price = 3;</code>
     */
    long getIssuePrice();

    /**
     * <code>optional sint32 exponent_repurchasing_price = 4;</code>
     */
    boolean hasExponentRepurchasingPrice();
    /**
     * <code>optional sint32 exponent_repurchasing_price = 4;</code>
     */
    int getExponentRepurchasingPrice();

    /**
     * <code>optional sint64 repurchasing_price = 5;</code>
     */
    boolean hasRepurchasingPrice();
    /**
     * <code>optional sint64 repurchasing_price = 5;</code>
     */
    long getRepurchasingPrice();

    /**
     * <code>optional sint32 exponent_net_asset_value = 6;</code>
     */
    boolean hasExponentNetAssetValue();
    /**
     * <code>optional sint32 exponent_net_asset_value = 6;</code>
     */
    int getExponentNetAssetValue();

    /**
     * <code>optional sint64 net_asset_value = 7;</code>
     */
    boolean hasNetAssetValue();
    /**
     * <code>optional sint64 net_asset_value = 7;</code>
     */
    long getNetAssetValue();

    /**
     * <code>repeated .protobuf.Field fields = 8;</code>
     */
    java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> 
        getFieldsList();
    /**
     * <code>repeated .protobuf.Field fields = 8;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index);
    /**
     * <code>repeated .protobuf.Field fields = 8;</code>
     */
    int getFieldsCount();
    /**
     * <code>repeated .protobuf.Field fields = 8;</code>
     */
    java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <code>repeated .protobuf.Field fields = 8;</code>
     */
    de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index);

    /**
     * <code>optional sint64 volume = 9;</code>
     */
    boolean hasVolume();
    /**
     * <code>optional sint64 volume = 9;</code>
     */
    long getVolume();
  }
  /**
   * Protobuf type {@code protobuf.FundPrice}
   */
  public static final class FundPrice extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.FundPrice)
      FundPriceOrBuilder {
    // Use FundPrice.newBuilder() to construct.
    private FundPrice(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FundPrice(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FundPrice defaultInstance;
    public static FundPrice getDefaultInstance() {
      return defaultInstance;
    }

    public FundPrice getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FundPrice(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              time_ = input.readSInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              exponentIssuePrice_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              issuePrice_ = input.readSInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              exponentRepurchasingPrice_ = input.readSInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              repurchasingPrice_ = input.readSInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              exponentNetAssetValue_ = input.readSInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              netAssetValue_ = input.readSInt64();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>();
                mutable_bitField0_ |= 0x00000080;
              }
              fields_.add(input.readMessage(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.PARSER, extensionRegistry));
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              volume_ = input.readSInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_FundPrice_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_FundPrice_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice.Builder.class);
    }

    public static com.google.protobuf.Parser<FundPrice> PARSER =
        new com.google.protobuf.AbstractParser<FundPrice>() {
      public FundPrice parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FundPrice(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FundPrice> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int EXPONENT_ISSUE_PRICE_FIELD_NUMBER = 2;
    private int exponentIssuePrice_;
    /**
     * <code>optional sint32 exponent_issue_price = 2;</code>
     */
    public boolean hasExponentIssuePrice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 exponent_issue_price = 2;</code>
     */
    public int getExponentIssuePrice() {
      return exponentIssuePrice_;
    }

    public static final int ISSUE_PRICE_FIELD_NUMBER = 3;
    private long issuePrice_;
    /**
     * <code>optional sint64 issue_price = 3;</code>
     */
    public boolean hasIssuePrice() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint64 issue_price = 3;</code>
     */
    public long getIssuePrice() {
      return issuePrice_;
    }

    public static final int EXPONENT_REPURCHASING_PRICE_FIELD_NUMBER = 4;
    private int exponentRepurchasingPrice_;
    /**
     * <code>optional sint32 exponent_repurchasing_price = 4;</code>
     */
    public boolean hasExponentRepurchasingPrice() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 exponent_repurchasing_price = 4;</code>
     */
    public int getExponentRepurchasingPrice() {
      return exponentRepurchasingPrice_;
    }

    public static final int REPURCHASING_PRICE_FIELD_NUMBER = 5;
    private long repurchasingPrice_;
    /**
     * <code>optional sint64 repurchasing_price = 5;</code>
     */
    public boolean hasRepurchasingPrice() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint64 repurchasing_price = 5;</code>
     */
    public long getRepurchasingPrice() {
      return repurchasingPrice_;
    }

    public static final int EXPONENT_NET_ASSET_VALUE_FIELD_NUMBER = 6;
    private int exponentNetAssetValue_;
    /**
     * <code>optional sint32 exponent_net_asset_value = 6;</code>
     */
    public boolean hasExponentNetAssetValue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sint32 exponent_net_asset_value = 6;</code>
     */
    public int getExponentNetAssetValue() {
      return exponentNetAssetValue_;
    }

    public static final int NET_ASSET_VALUE_FIELD_NUMBER = 7;
    private long netAssetValue_;
    /**
     * <code>optional sint64 net_asset_value = 7;</code>
     */
    public boolean hasNetAssetValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint64 net_asset_value = 7;</code>
     */
    public long getNetAssetValue() {
      return netAssetValue_;
    }

    public static final int FIELDS_FIELD_NUMBER = 8;
    private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_;
    /**
     * <code>repeated .protobuf.Field fields = 8;</code>
     */
    public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 8;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <code>repeated .protobuf.Field fields = 8;</code>
     */
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <code>repeated .protobuf.Field fields = 8;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <code>repeated .protobuf.Field fields = 8;</code>
     */
    public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    public static final int VOLUME_FIELD_NUMBER = 9;
    private long volume_;
    /**
     * <code>optional sint64 volume = 9;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint64 volume = 9;</code>
     */
    public long getVolume() {
      return volume_;
    }

    private void initFields() {
      time_ = 0L;
      exponentIssuePrice_ = 0;
      issuePrice_ = 0L;
      exponentRepurchasingPrice_ = 0;
      repurchasingPrice_ = 0L;
      exponentNetAssetValue_ = 0;
      netAssetValue_ = 0L;
      fields_ = java.util.Collections.emptyList();
      volume_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFieldsCount(); i++) {
        if (!getFields(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, exponentIssuePrice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt64(3, issuePrice_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, exponentRepurchasingPrice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt64(5, repurchasingPrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(6, exponentNetAssetValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeSInt64(7, netAssetValue_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(8, fields_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeSInt64(9, volume_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, exponentIssuePrice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, issuePrice_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, exponentRepurchasingPrice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(5, repurchasingPrice_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, exponentNetAssetValue_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(7, netAssetValue_);
      }
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, fields_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(9, volume_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.FundPrice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.FundPrice)
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPriceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_FundPrice_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_FundPrice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice.Builder.class);
      }

      // Construct using de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        exponentIssuePrice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        issuePrice_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        exponentRepurchasingPrice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        repurchasingPrice_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        exponentNetAssetValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        netAssetValue_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          fieldsBuilder_.clear();
        }
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_FundPrice_descriptor;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice getDefaultInstanceForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice.getDefaultInstance();
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice build() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice buildPartial() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice result = new de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.exponentIssuePrice_ = exponentIssuePrice_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.issuePrice_ = issuePrice_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.exponentRepurchasingPrice_ = exponentRepurchasingPrice_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.repurchasingPrice_ = repurchasingPrice_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.exponentNetAssetValue_ = exponentNetAssetValue_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.netAssetValue_ = netAssetValue_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.volume_ = volume_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice) {
          return mergeFrom((de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice other) {
        if (other == de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasExponentIssuePrice()) {
          setExponentIssuePrice(other.getExponentIssuePrice());
        }
        if (other.hasIssuePrice()) {
          setIssuePrice(other.getIssuePrice());
        }
        if (other.hasExponentRepurchasingPrice()) {
          setExponentRepurchasingPrice(other.getExponentRepurchasingPrice());
        }
        if (other.hasRepurchasingPrice()) {
          setRepurchasingPrice(other.getRepurchasingPrice());
        }
        if (other.hasExponentNetAssetValue()) {
          setExponentNetAssetValue(other.getExponentNetAssetValue());
        }
        if (other.hasNetAssetValue()) {
          setNetAssetValue(other.getNetAssetValue());
        }
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000080);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFieldsCount(); i++) {
          if (!getFields(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FundPrice) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long time_ ;
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        onChanged();
        return this;
      }

      private int exponentIssuePrice_ ;
      /**
       * <code>optional sint32 exponent_issue_price = 2;</code>
       */
      public boolean hasExponentIssuePrice() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 exponent_issue_price = 2;</code>
       */
      public int getExponentIssuePrice() {
        return exponentIssuePrice_;
      }
      /**
       * <code>optional sint32 exponent_issue_price = 2;</code>
       */
      public Builder setExponentIssuePrice(int value) {
        bitField0_ |= 0x00000002;
        exponentIssuePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_issue_price = 2;</code>
       */
      public Builder clearExponentIssuePrice() {
        bitField0_ = (bitField0_ & ~0x00000002);
        exponentIssuePrice_ = 0;
        onChanged();
        return this;
      }

      private long issuePrice_ ;
      /**
       * <code>optional sint64 issue_price = 3;</code>
       */
      public boolean hasIssuePrice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint64 issue_price = 3;</code>
       */
      public long getIssuePrice() {
        return issuePrice_;
      }
      /**
       * <code>optional sint64 issue_price = 3;</code>
       */
      public Builder setIssuePrice(long value) {
        bitField0_ |= 0x00000004;
        issuePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 issue_price = 3;</code>
       */
      public Builder clearIssuePrice() {
        bitField0_ = (bitField0_ & ~0x00000004);
        issuePrice_ = 0L;
        onChanged();
        return this;
      }

      private int exponentRepurchasingPrice_ ;
      /**
       * <code>optional sint32 exponent_repurchasing_price = 4;</code>
       */
      public boolean hasExponentRepurchasingPrice() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 exponent_repurchasing_price = 4;</code>
       */
      public int getExponentRepurchasingPrice() {
        return exponentRepurchasingPrice_;
      }
      /**
       * <code>optional sint32 exponent_repurchasing_price = 4;</code>
       */
      public Builder setExponentRepurchasingPrice(int value) {
        bitField0_ |= 0x00000008;
        exponentRepurchasingPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_repurchasing_price = 4;</code>
       */
      public Builder clearExponentRepurchasingPrice() {
        bitField0_ = (bitField0_ & ~0x00000008);
        exponentRepurchasingPrice_ = 0;
        onChanged();
        return this;
      }

      private long repurchasingPrice_ ;
      /**
       * <code>optional sint64 repurchasing_price = 5;</code>
       */
      public boolean hasRepurchasingPrice() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint64 repurchasing_price = 5;</code>
       */
      public long getRepurchasingPrice() {
        return repurchasingPrice_;
      }
      /**
       * <code>optional sint64 repurchasing_price = 5;</code>
       */
      public Builder setRepurchasingPrice(long value) {
        bitField0_ |= 0x00000010;
        repurchasingPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 repurchasing_price = 5;</code>
       */
      public Builder clearRepurchasingPrice() {
        bitField0_ = (bitField0_ & ~0x00000010);
        repurchasingPrice_ = 0L;
        onChanged();
        return this;
      }

      private int exponentNetAssetValue_ ;
      /**
       * <code>optional sint32 exponent_net_asset_value = 6;</code>
       */
      public boolean hasExponentNetAssetValue() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 exponent_net_asset_value = 6;</code>
       */
      public int getExponentNetAssetValue() {
        return exponentNetAssetValue_;
      }
      /**
       * <code>optional sint32 exponent_net_asset_value = 6;</code>
       */
      public Builder setExponentNetAssetValue(int value) {
        bitField0_ |= 0x00000020;
        exponentNetAssetValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 exponent_net_asset_value = 6;</code>
       */
      public Builder clearExponentNetAssetValue() {
        bitField0_ = (bitField0_ & ~0x00000020);
        exponentNetAssetValue_ = 0;
        onChanged();
        return this;
      }

      private long netAssetValue_ ;
      /**
       * <code>optional sint64 net_asset_value = 7;</code>
       */
      public boolean hasNetAssetValue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sint64 net_asset_value = 7;</code>
       */
      public long getNetAssetValue() {
        return netAssetValue_;
      }
      /**
       * <code>optional sint64 net_asset_value = 7;</code>
       */
      public Builder setNetAssetValue(long value) {
        bitField0_ |= 0x00000040;
        netAssetValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 net_asset_value = 7;</code>
       */
      public Builder clearNetAssetValue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        netAssetValue_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          fields_ = new java.util.ArrayList<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field>(fields_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> fieldsBuilder_;

      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public Builder setFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public Builder addFields(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public Builder addFields(
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public Builder addFields(
          int index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Field fields = 8;</code>
       */
      public java.util.List<de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private long volume_ ;
      /**
       * <code>optional sint64 volume = 9;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional sint64 volume = 9;</code>
       */
      public long getVolume() {
        return volume_;
      }
      /**
       * <code>optional sint64 volume = 9;</code>
       */
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000100;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 volume = 9;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000100);
        volume_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.FundPrice)
    }

    static {
      defaultInstance = new FundPrice(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.FundPrice)
  }

  public interface FieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Field)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 fieldId = 1;</code>
     */
    boolean hasFieldId();
    /**
     * <code>required uint32 fieldId = 1;</code>
     */
    int getFieldId();

    /**
     * <code>optional sint32 price_exponent = 2;</code>
     */
    boolean hasPriceExponent();
    /**
     * <code>optional sint32 price_exponent = 2;</code>
     */
    int getPriceExponent();

    /**
     * <code>optional sint64 price_value = 3;</code>
     */
    boolean hasPriceValue();
    /**
     * <code>optional sint64 price_value = 3;</code>
     */
    long getPriceValue();

    /**
     * <code>optional string string_value = 4;</code>
     */
    boolean hasStringValue();
    /**
     * <code>optional string string_value = 4;</code>
     */
    java.lang.String getStringValue();
    /**
     * <code>optional string string_value = 4;</code>
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    /**
     * <code>optional sint32 int_value = 5;</code>
     */
    boolean hasIntValue();
    /**
     * <code>optional sint32 int_value = 5;</code>
     */
    int getIntValue();
  }
  /**
   * Protobuf type {@code protobuf.Field}
   */
  public static final class Field extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Field)
      FieldOrBuilder {
    // Use Field.newBuilder() to construct.
    private Field(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Field(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Field defaultInstance;
    public static Field getDefaultInstance() {
      return defaultInstance;
    }

    public Field getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Field(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fieldId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              priceExponent_ = input.readSInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              priceValue_ = input.readSInt64();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              stringValue_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              intValue_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Field_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Field_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder.class);
    }

    public static com.google.protobuf.Parser<Field> PARSER =
        new com.google.protobuf.AbstractParser<Field>() {
      public Field parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Field(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Field> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FIELDID_FIELD_NUMBER = 1;
    private int fieldId_;
    /**
     * <code>required uint32 fieldId = 1;</code>
     */
    public boolean hasFieldId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 fieldId = 1;</code>
     */
    public int getFieldId() {
      return fieldId_;
    }

    public static final int PRICE_EXPONENT_FIELD_NUMBER = 2;
    private int priceExponent_;
    /**
     * <code>optional sint32 price_exponent = 2;</code>
     */
    public boolean hasPriceExponent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint32 price_exponent = 2;</code>
     */
    public int getPriceExponent() {
      return priceExponent_;
    }

    public static final int PRICE_VALUE_FIELD_NUMBER = 3;
    private long priceValue_;
    /**
     * <code>optional sint64 price_value = 3;</code>
     */
    public boolean hasPriceValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint64 price_value = 3;</code>
     */
    public long getPriceValue() {
      return priceValue_;
    }

    public static final int STRING_VALUE_FIELD_NUMBER = 4;
    private java.lang.Object stringValue_;
    /**
     * <code>optional string string_value = 4;</code>
     */
    public boolean hasStringValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string string_value = 4;</code>
     */
    public java.lang.String getStringValue() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringValue_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string string_value = 4;</code>
     */
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INT_VALUE_FIELD_NUMBER = 5;
    private int intValue_;
    /**
     * <code>optional sint32 int_value = 5;</code>
     */
    public boolean hasIntValue() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 int_value = 5;</code>
     */
    public int getIntValue() {
      return intValue_;
    }

    private void initFields() {
      fieldId_ = 0;
      priceExponent_ = 0;
      priceValue_ = 0L;
      stringValue_ = "";
      intValue_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFieldId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, fieldId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSInt32(2, priceExponent_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt64(3, priceValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getStringValueBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeSInt32(5, intValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fieldId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, priceExponent_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(3, priceValue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getStringValueBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, intValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Field}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Field)
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.FieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Field_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Field_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.class, de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.Builder.class);
      }

      // Construct using de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fieldId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        priceExponent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        priceValue_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        stringValue_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        intValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.internal_static_protobuf_Field_descriptor;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field getDefaultInstanceForType() {
        return de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance();
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field build() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field buildPartial() {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field result = new de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fieldId_ = fieldId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.priceExponent_ = priceExponent_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.priceValue_ = priceValue_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.stringValue_ = stringValue_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.intValue_ = intValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field) {
          return mergeFrom((de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field other) {
        if (other == de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field.getDefaultInstance()) return this;
        if (other.hasFieldId()) {
          setFieldId(other.getFieldId());
        }
        if (other.hasPriceExponent()) {
          setPriceExponent(other.getPriceExponent());
        }
        if (other.hasPriceValue()) {
          setPriceValue(other.getPriceValue());
        }
        if (other.hasStringValue()) {
          bitField0_ |= 0x00000008;
          stringValue_ = other.stringValue_;
          onChanged();
        }
        if (other.hasIntValue()) {
          setIntValue(other.getIntValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFieldId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.domainimpl.protobuf.TimeseriesProtos.Field) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fieldId_ ;
      /**
       * <code>required uint32 fieldId = 1;</code>
       */
      public boolean hasFieldId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 fieldId = 1;</code>
       */
      public int getFieldId() {
        return fieldId_;
      }
      /**
       * <code>required uint32 fieldId = 1;</code>
       */
      public Builder setFieldId(int value) {
        bitField0_ |= 0x00000001;
        fieldId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 fieldId = 1;</code>
       */
      public Builder clearFieldId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldId_ = 0;
        onChanged();
        return this;
      }

      private int priceExponent_ ;
      /**
       * <code>optional sint32 price_exponent = 2;</code>
       */
      public boolean hasPriceExponent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional sint32 price_exponent = 2;</code>
       */
      public int getPriceExponent() {
        return priceExponent_;
      }
      /**
       * <code>optional sint32 price_exponent = 2;</code>
       */
      public Builder setPriceExponent(int value) {
        bitField0_ |= 0x00000002;
        priceExponent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 price_exponent = 2;</code>
       */
      public Builder clearPriceExponent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        priceExponent_ = 0;
        onChanged();
        return this;
      }

      private long priceValue_ ;
      /**
       * <code>optional sint64 price_value = 3;</code>
       */
      public boolean hasPriceValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional sint64 price_value = 3;</code>
       */
      public long getPriceValue() {
        return priceValue_;
      }
      /**
       * <code>optional sint64 price_value = 3;</code>
       */
      public Builder setPriceValue(long value) {
        bitField0_ |= 0x00000004;
        priceValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint64 price_value = 3;</code>
       */
      public Builder clearPriceValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        priceValue_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object stringValue_ = "";
      /**
       * <code>optional string string_value = 4;</code>
       */
      public boolean hasStringValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string string_value = 4;</code>
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringValue_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string string_value = 4;</code>
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string string_value = 4;</code>
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        stringValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_value = 4;</code>
       */
      public Builder clearStringValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        stringValue_ = getDefaultInstance().getStringValue();
        onChanged();
        return this;
      }
      /**
       * <code>optional string string_value = 4;</code>
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        stringValue_ = value;
        onChanged();
        return this;
      }

      private int intValue_ ;
      /**
       * <code>optional sint32 int_value = 5;</code>
       */
      public boolean hasIntValue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sint32 int_value = 5;</code>
       */
      public int getIntValue() {
        return intValue_;
      }
      /**
       * <code>optional sint32 int_value = 5;</code>
       */
      public Builder setIntValue(int value) {
        bitField0_ |= 0x00000010;
        intValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 int_value = 5;</code>
       */
      public Builder clearIntValue() {
        bitField0_ = (bitField0_ & ~0x00000010);
        intValue_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Field)
    }

    static {
      defaultInstance = new Field(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Field)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_VolumeAggregation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_VolumeAggregation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Performance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Performance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Tick_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Tick_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_TickEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_TickEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Ohlcv_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Ohlcv_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_FundPrice_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_FundPrice_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Field_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Field_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020timeseries.proto\022\010protobuf\"\214\004\n\021VolumeA" +
      "ggregation\022\014\n\004time\030\001 \001(\022\022\"\n\032exponent_tot" +
      "al_volume_call\030\002 \001(\021\022\031\n\021total_volume_cal" +
      "l\030\003 \001(\022\022!\n\031exponent_total_volume_put\030\004 \001" +
      "(\021\022\030\n\020total_volume_put\030\005 \001(\022\022.\n&exponent" +
      "_total_block_trade_volume_call\030\006 \001(\021\022%\n\035" +
      "total_block_trade_volume_call\030\007 \001(\022\022-\n%e" +
      "xponent_total_block_trade_volume_put\030\010 \001" +
      "(\021\022$\n\034total_block_trade_volume_put\030\t \001(\022" +
      "\022%\n\035exponent_total_volume_futures\030\n \001(\021\022",
      "\034\n\024total_volume_futures\030\013 \001(\022\0221\n)exponen" +
      "t_total_block_trade_volume_futures\030\014 \001(\021" +
      "\022(\n total_block_trade_volume_futures\030\r \001" +
      "(\022\022\037\n\006fields\030\016 \003(\0132\017.protobuf.Field\"g\n\013P" +
      "erformance\022\014\n\004time\030\001 \001(\022\022\030\n\020exponent_per" +
      "cent\030\002 \001(\021\022\017\n\007percent\030\003 \001(\022\022\037\n\006fields\030\004 " +
      "\003(\0132\017.protobuf.Field\"\231\001\n\004Tick\022\014\n\004time\030\001 " +
      "\001(\022\022\026\n\016exponent_price\030\002 \001(\021\022\r\n\005price\030\003 \001" +
      "(\022\022\016\n\006volume\030\004 \001(\022\022\022\n\nsupplement\030\005 \001(\t\022\027" +
      "\n\017tradeIdentifier\030\006 \001(\t\022\037\n\006fields\030\007 \003(\0132",
      "\017.protobuf.Field\"\244\002\n\tTickEvent\022\014\n\004time\030\001" +
      " \001(\022\022\032\n\022exponent_bid_price\030\002 \001(\021\022\021\n\tbid_" +
      "price\030\003 \001(\022\022\022\n\nbid_volume\030\004 \001(\022\022\032\n\022expon" +
      "ent_ask_price\030\005 \001(\021\022\021\n\task_price\030\006 \001(\022\022\022" +
      "\n\nask_volume\030\007 \001(\022\022\026\n\016exponent_price\030\010 \001" +
      "(\021\022\r\n\005price\030\t \001(\022\022\016\n\006volume\030\n \001(\022\022\022\n\nsup" +
      "plement\030\013 \001(\t\022\027\n\017tradeIdentifier\030\014 \001(\t\022\037" +
      "\n\006fields\030\r \003(\0132\017.protobuf.Field\"\351\001\n\005Ohlc" +
      "v\022\014\n\004time\030\001 \001(\022\022\025\n\rexponent_open\030\002 \001(\021\022\014" +
      "\n\004open\030\003 \001(\022\022\025\n\rexponent_high\030\004 \001(\021\022\014\n\004h",
      "igh\030\005 \001(\022\022\024\n\014exponent_low\030\006 \001(\021\022\013\n\003low\030\007" +
      " \001(\022\022\026\n\016exponent_close\030\010 \001(\021\022\r\n\005close\030\t " +
      "\001(\022\022\016\n\006volume\030\n \001(\022\022\r\n\005count\030\013 \001(\021\022\037\n\006fi" +
      "elds\030\014 \003(\0132\017.protobuf.Field\"\371\001\n\tFundPric" +
      "e\022\014\n\004time\030\001 \001(\022\022\034\n\024exponent_issue_price\030" +
      "\002 \001(\021\022\023\n\013issue_price\030\003 \001(\022\022#\n\033exponent_r" +
      "epurchasing_price\030\004 \001(\021\022\032\n\022repurchasing_" +
      "price\030\005 \001(\022\022 \n\030exponent_net_asset_value\030" +
      "\006 \001(\021\022\027\n\017net_asset_value\030\007 \001(\022\022\037\n\006fields" +
      "\030\010 \003(\0132\017.protobuf.Field\022\016\n\006volume\030\t \001(\022\"",
      "n\n\005Field\022\017\n\007fieldId\030\001 \002(\r\022\026\n\016price_expon" +
      "ent\030\002 \001(\021\022\023\n\013price_value\030\003 \001(\022\022\024\n\014string" +
      "_value\030\004 \001(\t\022\021\n\tint_value\030\005 \001(\021B>\n(de.ma" +
      "rketmaker.istar.domainimpl.protobufB\020Tim" +
      "eseriesProtosH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_protobuf_VolumeAggregation_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protobuf_VolumeAggregation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_VolumeAggregation_descriptor,
        new java.lang.String[] { "Time", "ExponentTotalVolumeCall", "TotalVolumeCall", "ExponentTotalVolumePut", "TotalVolumePut", "ExponentTotalBlockTradeVolumeCall", "TotalBlockTradeVolumeCall", "ExponentTotalBlockTradeVolumePut", "TotalBlockTradeVolumePut", "ExponentTotalVolumeFutures", "TotalVolumeFutures", "ExponentTotalBlockTradeVolumeFutures", "TotalBlockTradeVolumeFutures", "Fields", });
    internal_static_protobuf_Performance_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protobuf_Performance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Performance_descriptor,
        new java.lang.String[] { "Time", "ExponentPercent", "Percent", "Fields", });
    internal_static_protobuf_Tick_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protobuf_Tick_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Tick_descriptor,
        new java.lang.String[] { "Time", "ExponentPrice", "Price", "Volume", "Supplement", "TradeIdentifier", "Fields", });
    internal_static_protobuf_TickEvent_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protobuf_TickEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_TickEvent_descriptor,
        new java.lang.String[] { "Time", "ExponentBidPrice", "BidPrice", "BidVolume", "ExponentAskPrice", "AskPrice", "AskVolume", "ExponentPrice", "Price", "Volume", "Supplement", "TradeIdentifier", "Fields", });
    internal_static_protobuf_Ohlcv_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_protobuf_Ohlcv_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Ohlcv_descriptor,
        new java.lang.String[] { "Time", "ExponentOpen", "Open", "ExponentHigh", "High", "ExponentLow", "Low", "ExponentClose", "Close", "Volume", "Count", "Fields", });
    internal_static_protobuf_FundPrice_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_protobuf_FundPrice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_FundPrice_descriptor,
        new java.lang.String[] { "Time", "ExponentIssuePrice", "IssuePrice", "ExponentRepurchasingPrice", "RepurchasingPrice", "ExponentNetAssetValue", "NetAssetValue", "Fields", "Volume", });
    internal_static_protobuf_Field_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_protobuf_Field_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Field_descriptor,
        new java.lang.String[] { "FieldId", "PriceExponent", "PriceValue", "StringValue", "IntValue", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
