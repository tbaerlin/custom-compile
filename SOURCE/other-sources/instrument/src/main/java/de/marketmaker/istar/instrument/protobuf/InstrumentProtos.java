// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: instrument.proto

package de.marketmaker.istar.instrument.protobuf;

public final class InstrumentProtos {
  private InstrumentProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SymbolOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Symbol)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    boolean hasKeysystemOrd();
    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    int getKeysystemOrd();

    /**
     * <code>required string value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <code>required string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code protobuf.Symbol}
   *
   * <pre>
   * a "normal" symbol
   * </pre>
   */
  public static final class Symbol extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Symbol)
      SymbolOrBuilder {
    // Use Symbol.newBuilder() to construct.
    private Symbol(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Symbol(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Symbol defaultInstance;
    public static Symbol getDefaultInstance() {
      return defaultInstance;
    }

    public Symbol getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Symbol(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keysystemOrd_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              value_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Symbol_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Symbol_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder.class);
    }

    public static com.google.protobuf.Parser<Symbol> PARSER =
        new com.google.protobuf.AbstractParser<Symbol>() {
      public Symbol parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Symbol(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Symbol> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEYSYSTEM_ORD_FIELD_NUMBER = 1;
    private int keysystemOrd_;
    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    public boolean hasKeysystemOrd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    public int getKeysystemOrd() {
      return keysystemOrd_;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private java.lang.Object value_;
    /**
     * <code>required string value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string value = 2;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      keysystemOrd_ = 0;
      value_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKeysystemOrd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, keysystemOrd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, keysystemOrd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Symbol}
     *
     * <pre>
     * a "normal" symbol
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Symbol)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Symbol_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Symbol_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keysystemOrd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Symbol_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keysystemOrd_ = keysystemOrd_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.getDefaultInstance()) return this;
        if (other.hasKeysystemOrd()) {
          setKeysystemOrd(other.getKeysystemOrd());
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000002;
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeysystemOrd()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int keysystemOrd_ ;
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public boolean hasKeysystemOrd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public int getKeysystemOrd() {
        return keysystemOrd_;
      }
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public Builder setKeysystemOrd(int value) {
        bitField0_ |= 0x00000001;
        keysystemOrd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public Builder clearKeysystemOrd() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keysystemOrd_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>required string value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Symbol)
    }

    static {
      defaultInstance = new Symbol(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Symbol)
  }

  public interface SymbolRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.SymbolRef)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    boolean hasKeysystemOrd();
    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    int getKeysystemOrd();

    /**
     * <code>required uint32 value_idx = 2;</code>
     */
    boolean hasValueIdx();
    /**
     * <code>required uint32 value_idx = 2;</code>
     */
    int getValueIdx();
  }
  /**
   * Protobuf type {@code protobuf.SymbolRef}
   *
   * <pre>
   * a symbol with a value that is an index into a list of (cached) strings
   * </pre>
   */
  public static final class SymbolRef extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.SymbolRef)
      SymbolRefOrBuilder {
    // Use SymbolRef.newBuilder() to construct.
    private SymbolRef(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SymbolRef(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SymbolRef defaultInstance;
    public static SymbolRef getDefaultInstance() {
      return defaultInstance;
    }

    public SymbolRef getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SymbolRef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keysystemOrd_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              valueIdx_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_SymbolRef_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_SymbolRef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder.class);
    }

    public static com.google.protobuf.Parser<SymbolRef> PARSER =
        new com.google.protobuf.AbstractParser<SymbolRef>() {
      public SymbolRef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SymbolRef(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SymbolRef> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEYSYSTEM_ORD_FIELD_NUMBER = 1;
    private int keysystemOrd_;
    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    public boolean hasKeysystemOrd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    public int getKeysystemOrd() {
      return keysystemOrd_;
    }

    public static final int VALUE_IDX_FIELD_NUMBER = 2;
    private int valueIdx_;
    /**
     * <code>required uint32 value_idx = 2;</code>
     */
    public boolean hasValueIdx() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 value_idx = 2;</code>
     */
    public int getValueIdx() {
      return valueIdx_;
    }

    private void initFields() {
      keysystemOrd_ = 0;
      valueIdx_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKeysystemOrd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValueIdx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, keysystemOrd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, valueIdx_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, keysystemOrd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, valueIdx_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.SymbolRef}
     *
     * <pre>
     * a symbol with a value that is an index into a list of (cached) strings
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.SymbolRef)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_SymbolRef_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_SymbolRef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keysystemOrd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        valueIdx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_SymbolRef_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keysystemOrd_ = keysystemOrd_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.valueIdx_ = valueIdx_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.getDefaultInstance()) return this;
        if (other.hasKeysystemOrd()) {
          setKeysystemOrd(other.getKeysystemOrd());
        }
        if (other.hasValueIdx()) {
          setValueIdx(other.getValueIdx());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeysystemOrd()) {
          
          return false;
        }
        if (!hasValueIdx()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int keysystemOrd_ ;
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public boolean hasKeysystemOrd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public int getKeysystemOrd() {
        return keysystemOrd_;
      }
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public Builder setKeysystemOrd(int value) {
        bitField0_ |= 0x00000001;
        keysystemOrd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public Builder clearKeysystemOrd() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keysystemOrd_ = 0;
        onChanged();
        return this;
      }

      private int valueIdx_ ;
      /**
       * <code>required uint32 value_idx = 2;</code>
       */
      public boolean hasValueIdx() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 value_idx = 2;</code>
       */
      public int getValueIdx() {
        return valueIdx_;
      }
      /**
       * <code>required uint32 value_idx = 2;</code>
       */
      public Builder setValueIdx(int value) {
        bitField0_ |= 0x00000002;
        valueIdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 value_idx = 2;</code>
       */
      public Builder clearValueIdx() {
        bitField0_ = (bitField0_ & ~0x00000002);
        valueIdx_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.SymbolRef)
    }

    static {
      defaultInstance = new SymbolRef(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.SymbolRef)
  }

  public interface LocalizedNameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.LocalizedName)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string de = 1;</code>
     */
    boolean hasDe();
    /**
     * <code>optional string de = 1;</code>
     */
    java.lang.String getDe();
    /**
     * <code>optional string de = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeBytes();

    /**
     * <code>optional string en = 2;</code>
     */
    boolean hasEn();
    /**
     * <code>optional string en = 2;</code>
     */
    java.lang.String getEn();
    /**
     * <code>optional string en = 2;</code>
     */
    com.google.protobuf.ByteString
        getEnBytes();

    /**
     * <code>optional string fr = 3;</code>
     */
    boolean hasFr();
    /**
     * <code>optional string fr = 3;</code>
     */
    java.lang.String getFr();
    /**
     * <code>optional string fr = 3;</code>
     */
    com.google.protobuf.ByteString
        getFrBytes();

    /**
     * <code>optional string it = 4;</code>
     */
    boolean hasIt();
    /**
     * <code>optional string it = 4;</code>
     */
    java.lang.String getIt();
    /**
     * <code>optional string it = 4;</code>
     */
    com.google.protobuf.ByteString
        getItBytes();

    /**
     * <code>optional string nl = 5;</code>
     */
    boolean hasNl();
    /**
     * <code>optional string nl = 5;</code>
     */
    java.lang.String getNl();
    /**
     * <code>optional string nl = 5;</code>
     */
    com.google.protobuf.ByteString
        getNlBytes();
  }
  /**
   * Protobuf type {@code protobuf.LocalizedName}
   */
  public static final class LocalizedName extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.LocalizedName)
      LocalizedNameOrBuilder {
    // Use LocalizedName.newBuilder() to construct.
    private LocalizedName(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LocalizedName(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LocalizedName defaultInstance;
    public static LocalizedName getDefaultInstance() {
      return defaultInstance;
    }

    public LocalizedName getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LocalizedName(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              de_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              en_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              fr_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              it_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              nl_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_LocalizedName_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_LocalizedName_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder.class);
    }

    public static com.google.protobuf.Parser<LocalizedName> PARSER =
        new com.google.protobuf.AbstractParser<LocalizedName>() {
      public LocalizedName parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LocalizedName(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LocalizedName> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DE_FIELD_NUMBER = 1;
    private java.lang.Object de_;
    /**
     * <code>optional string de = 1;</code>
     */
    public boolean hasDe() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string de = 1;</code>
     */
    public java.lang.String getDe() {
      java.lang.Object ref = de_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          de_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string de = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeBytes() {
      java.lang.Object ref = de_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        de_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EN_FIELD_NUMBER = 2;
    private java.lang.Object en_;
    /**
     * <code>optional string en = 2;</code>
     */
    public boolean hasEn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string en = 2;</code>
     */
    public java.lang.String getEn() {
      java.lang.Object ref = en_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          en_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string en = 2;</code>
     */
    public com.google.protobuf.ByteString
        getEnBytes() {
      java.lang.Object ref = en_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        en_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FR_FIELD_NUMBER = 3;
    private java.lang.Object fr_;
    /**
     * <code>optional string fr = 3;</code>
     */
    public boolean hasFr() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string fr = 3;</code>
     */
    public java.lang.String getFr() {
      java.lang.Object ref = fr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fr = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFrBytes() {
      java.lang.Object ref = fr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IT_FIELD_NUMBER = 4;
    private java.lang.Object it_;
    /**
     * <code>optional string it = 4;</code>
     */
    public boolean hasIt() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string it = 4;</code>
     */
    public java.lang.String getIt() {
      java.lang.Object ref = it_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          it_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string it = 4;</code>
     */
    public com.google.protobuf.ByteString
        getItBytes() {
      java.lang.Object ref = it_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        it_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NL_FIELD_NUMBER = 5;
    private java.lang.Object nl_;
    /**
     * <code>optional string nl = 5;</code>
     */
    public boolean hasNl() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string nl = 5;</code>
     */
    public java.lang.String getNl() {
      java.lang.Object ref = nl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nl = 5;</code>
     */
    public com.google.protobuf.ByteString
        getNlBytes() {
      java.lang.Object ref = nl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      de_ = "";
      en_ = "";
      fr_ = "";
      it_ = "";
      nl_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFrBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getItBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getNlBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEnBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFrBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getItBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getNlBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.LocalizedName}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.LocalizedName)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_LocalizedName_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_LocalizedName_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        de_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        en_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        fr_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        it_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        nl_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_LocalizedName_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.de_ = de_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.en_ = en_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fr_ = fr_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.it_ = it_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nl_ = nl_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance()) return this;
        if (other.hasDe()) {
          bitField0_ |= 0x00000001;
          de_ = other.de_;
          onChanged();
        }
        if (other.hasEn()) {
          bitField0_ |= 0x00000002;
          en_ = other.en_;
          onChanged();
        }
        if (other.hasFr()) {
          bitField0_ |= 0x00000004;
          fr_ = other.fr_;
          onChanged();
        }
        if (other.hasIt()) {
          bitField0_ |= 0x00000008;
          it_ = other.it_;
          onChanged();
        }
        if (other.hasNl()) {
          bitField0_ |= 0x00000010;
          nl_ = other.nl_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object de_ = "";
      /**
       * <code>optional string de = 1;</code>
       */
      public boolean hasDe() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string de = 1;</code>
       */
      public java.lang.String getDe() {
        java.lang.Object ref = de_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            de_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string de = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeBytes() {
        java.lang.Object ref = de_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          de_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string de = 1;</code>
       */
      public Builder setDe(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        de_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string de = 1;</code>
       */
      public Builder clearDe() {
        bitField0_ = (bitField0_ & ~0x00000001);
        de_ = getDefaultInstance().getDe();
        onChanged();
        return this;
      }
      /**
       * <code>optional string de = 1;</code>
       */
      public Builder setDeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        de_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object en_ = "";
      /**
       * <code>optional string en = 2;</code>
       */
      public boolean hasEn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string en = 2;</code>
       */
      public java.lang.String getEn() {
        java.lang.Object ref = en_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            en_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string en = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEnBytes() {
        java.lang.Object ref = en_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          en_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string en = 2;</code>
       */
      public Builder setEn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        en_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string en = 2;</code>
       */
      public Builder clearEn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        en_ = getDefaultInstance().getEn();
        onChanged();
        return this;
      }
      /**
       * <code>optional string en = 2;</code>
       */
      public Builder setEnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        en_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fr_ = "";
      /**
       * <code>optional string fr = 3;</code>
       */
      public boolean hasFr() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string fr = 3;</code>
       */
      public java.lang.String getFr() {
        java.lang.Object ref = fr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fr_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fr = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFrBytes() {
        java.lang.Object ref = fr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fr = 3;</code>
       */
      public Builder setFr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fr = 3;</code>
       */
      public Builder clearFr() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fr_ = getDefaultInstance().getFr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fr = 3;</code>
       */
      public Builder setFrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fr_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object it_ = "";
      /**
       * <code>optional string it = 4;</code>
       */
      public boolean hasIt() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string it = 4;</code>
       */
      public java.lang.String getIt() {
        java.lang.Object ref = it_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            it_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string it = 4;</code>
       */
      public com.google.protobuf.ByteString
          getItBytes() {
        java.lang.Object ref = it_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          it_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string it = 4;</code>
       */
      public Builder setIt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        it_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string it = 4;</code>
       */
      public Builder clearIt() {
        bitField0_ = (bitField0_ & ~0x00000008);
        it_ = getDefaultInstance().getIt();
        onChanged();
        return this;
      }
      /**
       * <code>optional string it = 4;</code>
       */
      public Builder setItBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        it_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object nl_ = "";
      /**
       * <code>optional string nl = 5;</code>
       */
      public boolean hasNl() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string nl = 5;</code>
       */
      public java.lang.String getNl() {
        java.lang.Object ref = nl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nl = 5;</code>
       */
      public com.google.protobuf.ByteString
          getNlBytes() {
        java.lang.Object ref = nl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nl = 5;</code>
       */
      public Builder setNl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        nl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nl = 5;</code>
       */
      public Builder clearNl() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nl_ = getDefaultInstance().getNl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nl = 5;</code>
       */
      public Builder setNlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        nl_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.LocalizedName)
    }

    static {
      defaultInstance = new LocalizedName(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.LocalizedName)
  }

  public interface CurrencyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Currency)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required uint64 id = 1;</code>
     */
    long getId();

    /**
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    boolean hasNames();
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames();
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder();

    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> 
        getSymbolsList();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index);
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    int getSymbolsCount();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
        getSymbolsOrBuilderList();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protobuf.Currency}
   */
  public static final class Currency extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Currency)
      CurrencyOrBuilder {
    // Use Currency.newBuilder() to construct.
    private Currency(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Currency(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Currency defaultInstance;
    public static Currency getDefaultInstance() {
      return defaultInstance;
    }

    public Currency getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Currency(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 26: {
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = names_.toBuilder();
              }
              names_ = input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(names_);
                names_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol>();
                mutable_bitField0_ |= 0x00000008;
              }
              symbols_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          symbols_ = java.util.Collections.unmodifiableList(symbols_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Currency_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Currency_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder.class);
    }

    public static com.google.protobuf.Parser<Currency> PARSER =
        new com.google.protobuf.AbstractParser<Currency>() {
      public Currency parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Currency(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Currency> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required uint64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAMES_FIELD_NUMBER = 3;
    private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName names_;
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public boolean hasNames() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames() {
      return names_;
    }
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder() {
      return names_;
    }

    public static final int SYMBOLS_FIELD_NUMBER = 4;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> symbols_;
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> getSymbolsList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
        getSymbolsOrBuilderList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public int getSymbolsCount() {
      return symbols_.size();
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index) {
      return symbols_.get(index);
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
        int index) {
      return symbols_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      name_ = "";
      names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
      symbols_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSymbolsCount(); i++) {
        if (!getSymbols(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, names_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        output.writeMessage(4, symbols_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, names_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, symbols_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Currency}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Currency)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CurrencyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Currency_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Currency_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNamesFieldBuilder();
          getSymbolsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (namesBuilder_ == null) {
          names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
        } else {
          namesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Currency_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (namesBuilder_ == null) {
          result.names_ = names_;
        } else {
          result.names_ = namesBuilder_.build();
        }
        if (symbolsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            symbols_ = java.util.Collections.unmodifiableList(symbols_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.symbols_ = symbols_;
        } else {
          result.symbols_ = symbolsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasNames()) {
          mergeNames(other.getNames());
        }
        if (symbolsBuilder_ == null) {
          if (!other.symbols_.isEmpty()) {
            if (symbols_.isEmpty()) {
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSymbolsIsMutable();
              symbols_.addAll(other.symbols_);
            }
            onChanged();
          }
        } else {
          if (!other.symbols_.isEmpty()) {
            if (symbolsBuilder_.isEmpty()) {
              symbolsBuilder_.dispose();
              symbolsBuilder_ = null;
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
              symbolsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSymbolsFieldBuilder() : null;
            } else {
              symbolsBuilder_.addAllMessages(other.symbols_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        for (int i = 0; i < getSymbolsCount(); i++) {
          if (!getSymbols(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>required uint64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder> namesBuilder_;
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public boolean hasNames() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames() {
        if (namesBuilder_ == null) {
          return names_;
        } else {
          return namesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder setNames(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName value) {
        if (namesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          names_ = value;
          onChanged();
        } else {
          namesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder setNames(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder builderForValue) {
        if (namesBuilder_ == null) {
          names_ = builderForValue.build();
          onChanged();
        } else {
          namesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder mergeNames(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName value) {
        if (namesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              names_ != de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance()) {
            names_ =
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.newBuilder(names_).mergeFrom(value).buildPartial();
          } else {
            names_ = value;
          }
          onChanged();
        } else {
          namesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder clearNames() {
        if (namesBuilder_ == null) {
          names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
          onChanged();
        } else {
          namesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder getNamesBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getNamesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder() {
        if (namesBuilder_ != null) {
          return namesBuilder_.getMessageOrBuilder();
        } else {
          return names_;
        }
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder> 
          getNamesFieldBuilder() {
        if (namesBuilder_ == null) {
          namesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder>(
                  getNames(),
                  getParentForChildren(),
                  isClean());
          names_ = null;
        }
        return namesBuilder_;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> symbols_ =
        java.util.Collections.emptyList();
      private void ensureSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol>(symbols_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> symbolsBuilder_;

      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> getSymbolsList() {
        if (symbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(symbols_);
        } else {
          return symbolsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public int getSymbolsCount() {
        if (symbolsBuilder_ == null) {
          return symbols_.size();
        } else {
          return symbolsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);
        } else {
          return symbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.set(index, value);
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(index, value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addAllSymbols(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> values) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, symbols_);
          onChanged();
        } else {
          symbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder clearSymbols() {
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder removeSymbols(int index) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.remove(index);
          onChanged();
        } else {
          symbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder getSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
          int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);  } else {
          return symbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
           getSymbolsOrBuilderList() {
        if (symbolsBuilder_ != null) {
          return symbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(symbols_);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder addSymbolsBuilder() {
        return getSymbolsFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder addSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder> 
           getSymbolsBuilderList() {
        return getSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
          getSymbolsFieldBuilder() {
        if (symbolsBuilder_ == null) {
          symbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder>(
                  symbols_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          symbols_ = null;
        }
        return symbolsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Currency)
    }

    static {
      defaultInstance = new Currency(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Currency)
  }

  public interface CountryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Country)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required uint64 id = 1;</code>
     */
    long getId();

    /**
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    boolean hasNames();
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames();
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder();

    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> 
        getSymbolsList();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index);
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    int getSymbolsCount();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
        getSymbolsOrBuilderList();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
        int index);

    /**
     * <code>optional uint64 currency_id = 5;</code>
     */
    boolean hasCurrencyId();
    /**
     * <code>optional uint64 currency_id = 5;</code>
     */
    long getCurrencyId();
  }
  /**
   * Protobuf type {@code protobuf.Country}
   */
  public static final class Country extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Country)
      CountryOrBuilder {
    // Use Country.newBuilder() to construct.
    private Country(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Country(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Country defaultInstance;
    public static Country getDefaultInstance() {
      return defaultInstance;
    }

    public Country getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Country(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 26: {
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = names_.toBuilder();
              }
              names_ = input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(names_);
                names_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol>();
                mutable_bitField0_ |= 0x00000008;
              }
              symbols_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              currencyId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          symbols_ = java.util.Collections.unmodifiableList(symbols_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Country_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Country_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder.class);
    }

    public static com.google.protobuf.Parser<Country> PARSER =
        new com.google.protobuf.AbstractParser<Country>() {
      public Country parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Country(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Country> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required uint64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAMES_FIELD_NUMBER = 3;
    private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName names_;
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public boolean hasNames() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames() {
      return names_;
    }
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder() {
      return names_;
    }

    public static final int SYMBOLS_FIELD_NUMBER = 4;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> symbols_;
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> getSymbolsList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
        getSymbolsOrBuilderList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public int getSymbolsCount() {
      return symbols_.size();
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index) {
      return symbols_.get(index);
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
        int index) {
      return symbols_.get(index);
    }

    public static final int CURRENCY_ID_FIELD_NUMBER = 5;
    private long currencyId_;
    /**
     * <code>optional uint64 currency_id = 5;</code>
     */
    public boolean hasCurrencyId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 currency_id = 5;</code>
     */
    public long getCurrencyId() {
      return currencyId_;
    }

    private void initFields() {
      id_ = 0L;
      name_ = "";
      names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
      symbols_ = java.util.Collections.emptyList();
      currencyId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSymbolsCount(); i++) {
        if (!getSymbols(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, names_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        output.writeMessage(4, symbols_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(5, currencyId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, names_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, symbols_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, currencyId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Country}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Country)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CountryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Country_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Country_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNamesFieldBuilder();
          getSymbolsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (namesBuilder_ == null) {
          names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
        } else {
          namesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          symbolsBuilder_.clear();
        }
        currencyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Country_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (namesBuilder_ == null) {
          result.names_ = names_;
        } else {
          result.names_ = namesBuilder_.build();
        }
        if (symbolsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            symbols_ = java.util.Collections.unmodifiableList(symbols_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.symbols_ = symbols_;
        } else {
          result.symbols_ = symbolsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.currencyId_ = currencyId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasNames()) {
          mergeNames(other.getNames());
        }
        if (symbolsBuilder_ == null) {
          if (!other.symbols_.isEmpty()) {
            if (symbols_.isEmpty()) {
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSymbolsIsMutable();
              symbols_.addAll(other.symbols_);
            }
            onChanged();
          }
        } else {
          if (!other.symbols_.isEmpty()) {
            if (symbolsBuilder_.isEmpty()) {
              symbolsBuilder_.dispose();
              symbolsBuilder_ = null;
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
              symbolsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSymbolsFieldBuilder() : null;
            } else {
              symbolsBuilder_.addAllMessages(other.symbols_);
            }
          }
        }
        if (other.hasCurrencyId()) {
          setCurrencyId(other.getCurrencyId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        for (int i = 0; i < getSymbolsCount(); i++) {
          if (!getSymbols(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>required uint64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder> namesBuilder_;
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public boolean hasNames() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames() {
        if (namesBuilder_ == null) {
          return names_;
        } else {
          return namesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder setNames(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName value) {
        if (namesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          names_ = value;
          onChanged();
        } else {
          namesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder setNames(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder builderForValue) {
        if (namesBuilder_ == null) {
          names_ = builderForValue.build();
          onChanged();
        } else {
          namesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder mergeNames(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName value) {
        if (namesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              names_ != de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance()) {
            names_ =
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.newBuilder(names_).mergeFrom(value).buildPartial();
          } else {
            names_ = value;
          }
          onChanged();
        } else {
          namesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder clearNames() {
        if (namesBuilder_ == null) {
          names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
          onChanged();
        } else {
          namesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder getNamesBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getNamesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder() {
        if (namesBuilder_ != null) {
          return namesBuilder_.getMessageOrBuilder();
        } else {
          return names_;
        }
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder> 
          getNamesFieldBuilder() {
        if (namesBuilder_ == null) {
          namesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder>(
                  getNames(),
                  getParentForChildren(),
                  isClean());
          names_ = null;
        }
        return namesBuilder_;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> symbols_ =
        java.util.Collections.emptyList();
      private void ensureSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol>(symbols_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> symbolsBuilder_;

      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> getSymbolsList() {
        if (symbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(symbols_);
        } else {
          return symbolsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public int getSymbolsCount() {
        if (symbolsBuilder_ == null) {
          return symbols_.size();
        } else {
          return symbolsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);
        } else {
          return symbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.set(index, value);
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(index, value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addAllSymbols(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> values) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, symbols_);
          onChanged();
        } else {
          symbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder clearSymbols() {
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder removeSymbols(int index) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.remove(index);
          onChanged();
        } else {
          symbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder getSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
          int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);  } else {
          return symbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
           getSymbolsOrBuilderList() {
        if (symbolsBuilder_ != null) {
          return symbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(symbols_);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder addSymbolsBuilder() {
        return getSymbolsFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder addSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder> 
           getSymbolsBuilderList() {
        return getSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
          getSymbolsFieldBuilder() {
        if (symbolsBuilder_ == null) {
          symbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder>(
                  symbols_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          symbols_ = null;
        }
        return symbolsBuilder_;
      }

      private long currencyId_ ;
      /**
       * <code>optional uint64 currency_id = 5;</code>
       */
      public boolean hasCurrencyId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 currency_id = 5;</code>
       */
      public long getCurrencyId() {
        return currencyId_;
      }
      /**
       * <code>optional uint64 currency_id = 5;</code>
       */
      public Builder setCurrencyId(long value) {
        bitField0_ |= 0x00000010;
        currencyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 currency_id = 5;</code>
       */
      public Builder clearCurrencyId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        currencyId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Country)
    }

    static {
      defaultInstance = new Country(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Country)
  }

  public interface MarketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Market)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required uint64 id = 1;</code>
     */
    long getId();

    /**
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    boolean hasNames();
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames();
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder();

    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> 
        getSymbolsList();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index);
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    int getSymbolsCount();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
        getSymbolsOrBuilderList();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
        int index);

    /**
     * <code>optional uint64 country_id = 5;</code>
     */
    boolean hasCountryId();
    /**
     * <code>optional uint64 country_id = 5;</code>
     */
    long getCountryId();

    /**
     * <code>optional uint32 category_ord = 6;</code>
     */
    boolean hasCategoryOrd();
    /**
     * <code>optional uint32 category_ord = 6;</code>
     */
    int getCategoryOrd();
  }
  /**
   * Protobuf type {@code protobuf.Market}
   */
  public static final class Market extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Market)
      MarketOrBuilder {
    // Use Market.newBuilder() to construct.
    private Market(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Market(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Market defaultInstance;
    public static Market getDefaultInstance() {
      return defaultInstance;
    }

    public Market getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Market(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 26: {
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = names_.toBuilder();
              }
              names_ = input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(names_);
                names_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol>();
                mutable_bitField0_ |= 0x00000008;
              }
              symbols_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              countryId_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              categoryOrd_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          symbols_ = java.util.Collections.unmodifiableList(symbols_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Market_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Market_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder.class);
    }

    public static com.google.protobuf.Parser<Market> PARSER =
        new com.google.protobuf.AbstractParser<Market>() {
      public Market parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Market(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Market> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required uint64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAMES_FIELD_NUMBER = 3;
    private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName names_;
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public boolean hasNames() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames() {
      return names_;
    }
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder() {
      return names_;
    }

    public static final int SYMBOLS_FIELD_NUMBER = 4;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> symbols_;
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> getSymbolsList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
        getSymbolsOrBuilderList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public int getSymbolsCount() {
      return symbols_.size();
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index) {
      return symbols_.get(index);
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
        int index) {
      return symbols_.get(index);
    }

    public static final int COUNTRY_ID_FIELD_NUMBER = 5;
    private long countryId_;
    /**
     * <code>optional uint64 country_id = 5;</code>
     */
    public boolean hasCountryId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 country_id = 5;</code>
     */
    public long getCountryId() {
      return countryId_;
    }

    public static final int CATEGORY_ORD_FIELD_NUMBER = 6;
    private int categoryOrd_;
    /**
     * <code>optional uint32 category_ord = 6;</code>
     */
    public boolean hasCategoryOrd() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 category_ord = 6;</code>
     */
    public int getCategoryOrd() {
      return categoryOrd_;
    }

    private void initFields() {
      id_ = 0L;
      name_ = "";
      names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
      symbols_ = java.util.Collections.emptyList();
      countryId_ = 0L;
      categoryOrd_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSymbolsCount(); i++) {
        if (!getSymbols(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, names_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        output.writeMessage(4, symbols_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(5, countryId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, categoryOrd_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, names_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, symbols_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, countryId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, categoryOrd_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Market}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Market)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MarketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Market_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Market_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNamesFieldBuilder();
          getSymbolsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (namesBuilder_ == null) {
          names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
        } else {
          namesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          symbolsBuilder_.clear();
        }
        countryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        categoryOrd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Market_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (namesBuilder_ == null) {
          result.names_ = names_;
        } else {
          result.names_ = namesBuilder_.build();
        }
        if (symbolsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            symbols_ = java.util.Collections.unmodifiableList(symbols_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.symbols_ = symbols_;
        } else {
          result.symbols_ = symbolsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.countryId_ = countryId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.categoryOrd_ = categoryOrd_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasNames()) {
          mergeNames(other.getNames());
        }
        if (symbolsBuilder_ == null) {
          if (!other.symbols_.isEmpty()) {
            if (symbols_.isEmpty()) {
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSymbolsIsMutable();
              symbols_.addAll(other.symbols_);
            }
            onChanged();
          }
        } else {
          if (!other.symbols_.isEmpty()) {
            if (symbolsBuilder_.isEmpty()) {
              symbolsBuilder_.dispose();
              symbolsBuilder_ = null;
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
              symbolsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSymbolsFieldBuilder() : null;
            } else {
              symbolsBuilder_.addAllMessages(other.symbols_);
            }
          }
        }
        if (other.hasCountryId()) {
          setCountryId(other.getCountryId());
        }
        if (other.hasCategoryOrd()) {
          setCategoryOrd(other.getCategoryOrd());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        for (int i = 0; i < getSymbolsCount(); i++) {
          if (!getSymbols(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>required uint64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder> namesBuilder_;
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public boolean hasNames() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames() {
        if (namesBuilder_ == null) {
          return names_;
        } else {
          return namesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder setNames(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName value) {
        if (namesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          names_ = value;
          onChanged();
        } else {
          namesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder setNames(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder builderForValue) {
        if (namesBuilder_ == null) {
          names_ = builderForValue.build();
          onChanged();
        } else {
          namesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder mergeNames(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName value) {
        if (namesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              names_ != de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance()) {
            names_ =
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.newBuilder(names_).mergeFrom(value).buildPartial();
          } else {
            names_ = value;
          }
          onChanged();
        } else {
          namesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder clearNames() {
        if (namesBuilder_ == null) {
          names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
          onChanged();
        } else {
          namesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder getNamesBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getNamesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder() {
        if (namesBuilder_ != null) {
          return namesBuilder_.getMessageOrBuilder();
        } else {
          return names_;
        }
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder> 
          getNamesFieldBuilder() {
        if (namesBuilder_ == null) {
          namesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder>(
                  getNames(),
                  getParentForChildren(),
                  isClean());
          names_ = null;
        }
        return namesBuilder_;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> symbols_ =
        java.util.Collections.emptyList();
      private void ensureSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol>(symbols_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> symbolsBuilder_;

      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> getSymbolsList() {
        if (symbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(symbols_);
        } else {
          return symbolsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public int getSymbolsCount() {
        if (symbolsBuilder_ == null) {
          return symbols_.size();
        } else {
          return symbolsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);
        } else {
          return symbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.set(index, value);
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(index, value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addAllSymbols(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> values) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, symbols_);
          onChanged();
        } else {
          symbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder clearSymbols() {
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder removeSymbols(int index) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.remove(index);
          onChanged();
        } else {
          symbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder getSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
          int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);  } else {
          return symbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
           getSymbolsOrBuilderList() {
        if (symbolsBuilder_ != null) {
          return symbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(symbols_);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder addSymbolsBuilder() {
        return getSymbolsFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder addSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder> 
           getSymbolsBuilderList() {
        return getSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
          getSymbolsFieldBuilder() {
        if (symbolsBuilder_ == null) {
          symbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder>(
                  symbols_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          symbols_ = null;
        }
        return symbolsBuilder_;
      }

      private long countryId_ ;
      /**
       * <code>optional uint64 country_id = 5;</code>
       */
      public boolean hasCountryId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 country_id = 5;</code>
       */
      public long getCountryId() {
        return countryId_;
      }
      /**
       * <code>optional uint64 country_id = 5;</code>
       */
      public Builder setCountryId(long value) {
        bitField0_ |= 0x00000010;
        countryId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 country_id = 5;</code>
       */
      public Builder clearCountryId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        countryId_ = 0L;
        onChanged();
        return this;
      }

      private int categoryOrd_ ;
      /**
       * <code>optional uint32 category_ord = 6;</code>
       */
      public boolean hasCategoryOrd() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 category_ord = 6;</code>
       */
      public int getCategoryOrd() {
        return categoryOrd_;
      }
      /**
       * <code>optional uint32 category_ord = 6;</code>
       */
      public Builder setCategoryOrd(int value) {
        bitField0_ |= 0x00000020;
        categoryOrd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 category_ord = 6;</code>
       */
      public Builder clearCategoryOrd() {
        bitField0_ = (bitField0_ & ~0x00000020);
        categoryOrd_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Market)
    }

    static {
      defaultInstance = new Market(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Market)
  }

  public interface SectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Sector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required uint64 id = 1;</code>
     */
    long getId();

    /**
     * <code>required string name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    boolean hasNames();
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames();
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder();

    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> 
        getSymbolsList();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index);
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    int getSymbolsCount();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
        getSymbolsOrBuilderList();
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protobuf.Sector}
   */
  public static final class Sector extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Sector)
      SectorOrBuilder {
    // Use Sector.newBuilder() to construct.
    private Sector(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Sector(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Sector defaultInstance;
    public static Sector getDefaultInstance() {
      return defaultInstance;
    }

    public Sector getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Sector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 26: {
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = names_.toBuilder();
              }
              names_ = input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(names_);
                names_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol>();
                mutable_bitField0_ |= 0x00000008;
              }
              symbols_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          symbols_ = java.util.Collections.unmodifiableList(symbols_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Sector_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Sector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder.class);
    }

    public static com.google.protobuf.Parser<Sector> PARSER =
        new com.google.protobuf.AbstractParser<Sector>() {
      public Sector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Sector(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Sector> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required uint64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAMES_FIELD_NUMBER = 3;
    private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName names_;
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public boolean hasNames() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames() {
      return names_;
    }
    /**
     * <code>optional .protobuf.LocalizedName names = 3;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder() {
      return names_;
    }

    public static final int SYMBOLS_FIELD_NUMBER = 4;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> symbols_;
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> getSymbolsList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
        getSymbolsOrBuilderList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public int getSymbolsCount() {
      return symbols_.size();
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index) {
      return symbols_.get(index);
    }
    /**
     * <code>repeated .protobuf.Symbol symbols = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
        int index) {
      return symbols_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      name_ = "";
      names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
      symbols_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSymbolsCount(); i++) {
        if (!getSymbols(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, names_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        output.writeMessage(4, symbols_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, names_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, symbols_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Sector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Sector)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Sector_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Sector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNamesFieldBuilder();
          getSymbolsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (namesBuilder_ == null) {
          names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
        } else {
          namesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Sector_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (namesBuilder_ == null) {
          result.names_ = names_;
        } else {
          result.names_ = namesBuilder_.build();
        }
        if (symbolsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            symbols_ = java.util.Collections.unmodifiableList(symbols_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.symbols_ = symbols_;
        } else {
          result.symbols_ = symbolsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasNames()) {
          mergeNames(other.getNames());
        }
        if (symbolsBuilder_ == null) {
          if (!other.symbols_.isEmpty()) {
            if (symbols_.isEmpty()) {
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSymbolsIsMutable();
              symbols_.addAll(other.symbols_);
            }
            onChanged();
          }
        } else {
          if (!other.symbols_.isEmpty()) {
            if (symbolsBuilder_.isEmpty()) {
              symbolsBuilder_.dispose();
              symbolsBuilder_ = null;
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
              symbolsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSymbolsFieldBuilder() : null;
            } else {
              symbolsBuilder_.addAllMessages(other.symbols_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        for (int i = 0; i < getSymbolsCount(); i++) {
          if (!getSymbols(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>required uint64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder> namesBuilder_;
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public boolean hasNames() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName getNames() {
        if (namesBuilder_ == null) {
          return names_;
        } else {
          return namesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder setNames(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName value) {
        if (namesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          names_ = value;
          onChanged();
        } else {
          namesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder setNames(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder builderForValue) {
        if (namesBuilder_ == null) {
          names_ = builderForValue.build();
          onChanged();
        } else {
          namesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder mergeNames(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName value) {
        if (namesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              names_ != de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance()) {
            names_ =
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.newBuilder(names_).mergeFrom(value).buildPartial();
          } else {
            names_ = value;
          }
          onChanged();
        } else {
          namesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public Builder clearNames() {
        if (namesBuilder_ == null) {
          names_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.getDefaultInstance();
          onChanged();
        } else {
          namesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder getNamesBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getNamesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder getNamesOrBuilder() {
        if (namesBuilder_ != null) {
          return namesBuilder_.getMessageOrBuilder();
        } else {
          return names_;
        }
      }
      /**
       * <code>optional .protobuf.LocalizedName names = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder> 
          getNamesFieldBuilder() {
        if (namesBuilder_ == null) {
          namesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedName.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.LocalizedNameOrBuilder>(
                  getNames(),
                  getParentForChildren(),
                  isClean());
          names_ = null;
        }
        return namesBuilder_;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> symbols_ =
        java.util.Collections.emptyList();
      private void ensureSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol>(symbols_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> symbolsBuilder_;

      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> getSymbolsList() {
        if (symbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(symbols_);
        } else {
          return symbolsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public int getSymbolsCount() {
        if (symbolsBuilder_ == null) {
          return symbols_.size();
        } else {
          return symbolsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol getSymbols(int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);
        } else {
          return symbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.set(index, value);
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(index, value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder addAllSymbols(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol> values) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, symbols_);
          onChanged();
        } else {
          symbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder clearSymbols() {
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public Builder removeSymbols(int index) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.remove(index);
          onChanged();
        } else {
          symbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder getSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder getSymbolsOrBuilder(
          int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);  } else {
          return symbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
           getSymbolsOrBuilderList() {
        if (symbolsBuilder_ != null) {
          return symbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(symbols_);
        }
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder addSymbolsBuilder() {
        return getSymbolsFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder addSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Symbol symbols = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder> 
           getSymbolsBuilderList() {
        return getSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder> 
          getSymbolsFieldBuilder() {
        if (symbolsBuilder_ == null) {
          symbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Symbol.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolOrBuilder>(
                  symbols_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          symbols_ = null;
        }
        return symbolsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Sector)
    }

    static {
      defaultInstance = new Sector(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Sector)
  }

  public interface DomainContextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.DomainContext)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .protobuf.Market markets = 1;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market> 
        getMarketsList();
    /**
     * <code>repeated .protobuf.Market markets = 1;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market getMarkets(int index);
    /**
     * <code>repeated .protobuf.Market markets = 1;</code>
     */
    int getMarketsCount();
    /**
     * <code>repeated .protobuf.Market markets = 1;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MarketOrBuilder> 
        getMarketsOrBuilderList();
    /**
     * <code>repeated .protobuf.Market markets = 1;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MarketOrBuilder getMarketsOrBuilder(
        int index);

    /**
     * <code>repeated .protobuf.Sector sectors = 2;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector> 
        getSectorsList();
    /**
     * <code>repeated .protobuf.Sector sectors = 2;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector getSectors(int index);
    /**
     * <code>repeated .protobuf.Sector sectors = 2;</code>
     */
    int getSectorsCount();
    /**
     * <code>repeated .protobuf.Sector sectors = 2;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SectorOrBuilder> 
        getSectorsOrBuilderList();
    /**
     * <code>repeated .protobuf.Sector sectors = 2;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SectorOrBuilder getSectorsOrBuilder(
        int index);

    /**
     * <code>repeated .protobuf.Currency currencies = 3;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency> 
        getCurrenciesList();
    /**
     * <code>repeated .protobuf.Currency currencies = 3;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency getCurrencies(int index);
    /**
     * <code>repeated .protobuf.Currency currencies = 3;</code>
     */
    int getCurrenciesCount();
    /**
     * <code>repeated .protobuf.Currency currencies = 3;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CurrencyOrBuilder> 
        getCurrenciesOrBuilderList();
    /**
     * <code>repeated .protobuf.Currency currencies = 3;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CurrencyOrBuilder getCurrenciesOrBuilder(
        int index);

    /**
     * <code>repeated .protobuf.Country countries = 4;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country> 
        getCountriesList();
    /**
     * <code>repeated .protobuf.Country countries = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country getCountries(int index);
    /**
     * <code>repeated .protobuf.Country countries = 4;</code>
     */
    int getCountriesCount();
    /**
     * <code>repeated .protobuf.Country countries = 4;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CountryOrBuilder> 
        getCountriesOrBuilderList();
    /**
     * <code>repeated .protobuf.Country countries = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CountryOrBuilder getCountriesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protobuf.DomainContext}
   */
  public static final class DomainContext extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.DomainContext)
      DomainContextOrBuilder {
    // Use DomainContext.newBuilder() to construct.
    private DomainContext(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DomainContext(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DomainContext defaultInstance;
    public static DomainContext getDefaultInstance() {
      return defaultInstance;
    }

    public DomainContext getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DomainContext(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                markets_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market>();
                mutable_bitField0_ |= 0x00000001;
              }
              markets_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sectors_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector>();
                mutable_bitField0_ |= 0x00000002;
              }
              sectors_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                currencies_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency>();
                mutable_bitField0_ |= 0x00000004;
              }
              currencies_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                countries_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country>();
                mutable_bitField0_ |= 0x00000008;
              }
              countries_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          markets_ = java.util.Collections.unmodifiableList(markets_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sectors_ = java.util.Collections.unmodifiableList(sectors_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          currencies_ = java.util.Collections.unmodifiableList(currencies_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          countries_ = java.util.Collections.unmodifiableList(countries_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_DomainContext_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_DomainContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext.Builder.class);
    }

    public static com.google.protobuf.Parser<DomainContext> PARSER =
        new com.google.protobuf.AbstractParser<DomainContext>() {
      public DomainContext parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DomainContext(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DomainContext> getParserForType() {
      return PARSER;
    }

    public static final int MARKETS_FIELD_NUMBER = 1;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market> markets_;
    /**
     * <code>repeated .protobuf.Market markets = 1;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market> getMarketsList() {
      return markets_;
    }
    /**
     * <code>repeated .protobuf.Market markets = 1;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MarketOrBuilder> 
        getMarketsOrBuilderList() {
      return markets_;
    }
    /**
     * <code>repeated .protobuf.Market markets = 1;</code>
     */
    public int getMarketsCount() {
      return markets_.size();
    }
    /**
     * <code>repeated .protobuf.Market markets = 1;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market getMarkets(int index) {
      return markets_.get(index);
    }
    /**
     * <code>repeated .protobuf.Market markets = 1;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MarketOrBuilder getMarketsOrBuilder(
        int index) {
      return markets_.get(index);
    }

    public static final int SECTORS_FIELD_NUMBER = 2;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector> sectors_;
    /**
     * <code>repeated .protobuf.Sector sectors = 2;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector> getSectorsList() {
      return sectors_;
    }
    /**
     * <code>repeated .protobuf.Sector sectors = 2;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SectorOrBuilder> 
        getSectorsOrBuilderList() {
      return sectors_;
    }
    /**
     * <code>repeated .protobuf.Sector sectors = 2;</code>
     */
    public int getSectorsCount() {
      return sectors_.size();
    }
    /**
     * <code>repeated .protobuf.Sector sectors = 2;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector getSectors(int index) {
      return sectors_.get(index);
    }
    /**
     * <code>repeated .protobuf.Sector sectors = 2;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SectorOrBuilder getSectorsOrBuilder(
        int index) {
      return sectors_.get(index);
    }

    public static final int CURRENCIES_FIELD_NUMBER = 3;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency> currencies_;
    /**
     * <code>repeated .protobuf.Currency currencies = 3;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency> getCurrenciesList() {
      return currencies_;
    }
    /**
     * <code>repeated .protobuf.Currency currencies = 3;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CurrencyOrBuilder> 
        getCurrenciesOrBuilderList() {
      return currencies_;
    }
    /**
     * <code>repeated .protobuf.Currency currencies = 3;</code>
     */
    public int getCurrenciesCount() {
      return currencies_.size();
    }
    /**
     * <code>repeated .protobuf.Currency currencies = 3;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency getCurrencies(int index) {
      return currencies_.get(index);
    }
    /**
     * <code>repeated .protobuf.Currency currencies = 3;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CurrencyOrBuilder getCurrenciesOrBuilder(
        int index) {
      return currencies_.get(index);
    }

    public static final int COUNTRIES_FIELD_NUMBER = 4;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country> countries_;
    /**
     * <code>repeated .protobuf.Country countries = 4;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country> getCountriesList() {
      return countries_;
    }
    /**
     * <code>repeated .protobuf.Country countries = 4;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CountryOrBuilder> 
        getCountriesOrBuilderList() {
      return countries_;
    }
    /**
     * <code>repeated .protobuf.Country countries = 4;</code>
     */
    public int getCountriesCount() {
      return countries_.size();
    }
    /**
     * <code>repeated .protobuf.Country countries = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country getCountries(int index) {
      return countries_.get(index);
    }
    /**
     * <code>repeated .protobuf.Country countries = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CountryOrBuilder getCountriesOrBuilder(
        int index) {
      return countries_.get(index);
    }

    private void initFields() {
      markets_ = java.util.Collections.emptyList();
      sectors_ = java.util.Collections.emptyList();
      currencies_ = java.util.Collections.emptyList();
      countries_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getMarketsCount(); i++) {
        if (!getMarkets(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSectorsCount(); i++) {
        if (!getSectors(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCurrenciesCount(); i++) {
        if (!getCurrencies(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCountriesCount(); i++) {
        if (!getCountries(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < markets_.size(); i++) {
        output.writeMessage(1, markets_.get(i));
      }
      for (int i = 0; i < sectors_.size(); i++) {
        output.writeMessage(2, sectors_.get(i));
      }
      for (int i = 0; i < currencies_.size(); i++) {
        output.writeMessage(3, currencies_.get(i));
      }
      for (int i = 0; i < countries_.size(); i++) {
        output.writeMessage(4, countries_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < markets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, markets_.get(i));
      }
      for (int i = 0; i < sectors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sectors_.get(i));
      }
      for (int i = 0; i < currencies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, currencies_.get(i));
      }
      for (int i = 0; i < countries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, countries_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.DomainContext}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.DomainContext)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_DomainContext_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_DomainContext_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMarketsFieldBuilder();
          getSectorsFieldBuilder();
          getCurrenciesFieldBuilder();
          getCountriesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (marketsBuilder_ == null) {
          markets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          marketsBuilder_.clear();
        }
        if (sectorsBuilder_ == null) {
          sectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sectorsBuilder_.clear();
        }
        if (currenciesBuilder_ == null) {
          currencies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          currenciesBuilder_.clear();
        }
        if (countriesBuilder_ == null) {
          countries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          countriesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_DomainContext_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext(this);
        int from_bitField0_ = bitField0_;
        if (marketsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            markets_ = java.util.Collections.unmodifiableList(markets_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.markets_ = markets_;
        } else {
          result.markets_ = marketsBuilder_.build();
        }
        if (sectorsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sectors_ = java.util.Collections.unmodifiableList(sectors_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sectors_ = sectors_;
        } else {
          result.sectors_ = sectorsBuilder_.build();
        }
        if (currenciesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            currencies_ = java.util.Collections.unmodifiableList(currencies_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.currencies_ = currencies_;
        } else {
          result.currencies_ = currenciesBuilder_.build();
        }
        if (countriesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            countries_ = java.util.Collections.unmodifiableList(countries_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.countries_ = countries_;
        } else {
          result.countries_ = countriesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext.getDefaultInstance()) return this;
        if (marketsBuilder_ == null) {
          if (!other.markets_.isEmpty()) {
            if (markets_.isEmpty()) {
              markets_ = other.markets_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMarketsIsMutable();
              markets_.addAll(other.markets_);
            }
            onChanged();
          }
        } else {
          if (!other.markets_.isEmpty()) {
            if (marketsBuilder_.isEmpty()) {
              marketsBuilder_.dispose();
              marketsBuilder_ = null;
              markets_ = other.markets_;
              bitField0_ = (bitField0_ & ~0x00000001);
              marketsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMarketsFieldBuilder() : null;
            } else {
              marketsBuilder_.addAllMessages(other.markets_);
            }
          }
        }
        if (sectorsBuilder_ == null) {
          if (!other.sectors_.isEmpty()) {
            if (sectors_.isEmpty()) {
              sectors_ = other.sectors_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSectorsIsMutable();
              sectors_.addAll(other.sectors_);
            }
            onChanged();
          }
        } else {
          if (!other.sectors_.isEmpty()) {
            if (sectorsBuilder_.isEmpty()) {
              sectorsBuilder_.dispose();
              sectorsBuilder_ = null;
              sectors_ = other.sectors_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sectorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSectorsFieldBuilder() : null;
            } else {
              sectorsBuilder_.addAllMessages(other.sectors_);
            }
          }
        }
        if (currenciesBuilder_ == null) {
          if (!other.currencies_.isEmpty()) {
            if (currencies_.isEmpty()) {
              currencies_ = other.currencies_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureCurrenciesIsMutable();
              currencies_.addAll(other.currencies_);
            }
            onChanged();
          }
        } else {
          if (!other.currencies_.isEmpty()) {
            if (currenciesBuilder_.isEmpty()) {
              currenciesBuilder_.dispose();
              currenciesBuilder_ = null;
              currencies_ = other.currencies_;
              bitField0_ = (bitField0_ & ~0x00000004);
              currenciesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCurrenciesFieldBuilder() : null;
            } else {
              currenciesBuilder_.addAllMessages(other.currencies_);
            }
          }
        }
        if (countriesBuilder_ == null) {
          if (!other.countries_.isEmpty()) {
            if (countries_.isEmpty()) {
              countries_ = other.countries_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCountriesIsMutable();
              countries_.addAll(other.countries_);
            }
            onChanged();
          }
        } else {
          if (!other.countries_.isEmpty()) {
            if (countriesBuilder_.isEmpty()) {
              countriesBuilder_.dispose();
              countriesBuilder_ = null;
              countries_ = other.countries_;
              bitField0_ = (bitField0_ & ~0x00000008);
              countriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCountriesFieldBuilder() : null;
            } else {
              countriesBuilder_.addAllMessages(other.countries_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getMarketsCount(); i++) {
          if (!getMarkets(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getSectorsCount(); i++) {
          if (!getSectors(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCurrenciesCount(); i++) {
          if (!getCurrencies(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCountriesCount(); i++) {
          if (!getCountries(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.DomainContext) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market> markets_ =
        java.util.Collections.emptyList();
      private void ensureMarketsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          markets_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market>(markets_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MarketOrBuilder> marketsBuilder_;

      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market> getMarketsList() {
        if (marketsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(markets_);
        } else {
          return marketsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public int getMarketsCount() {
        if (marketsBuilder_ == null) {
          return markets_.size();
        } else {
          return marketsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market getMarkets(int index) {
        if (marketsBuilder_ == null) {
          return markets_.get(index);
        } else {
          return marketsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public Builder setMarkets(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market value) {
        if (marketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarketsIsMutable();
          markets_.set(index, value);
          onChanged();
        } else {
          marketsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public Builder setMarkets(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder builderForValue) {
        if (marketsBuilder_ == null) {
          ensureMarketsIsMutable();
          markets_.set(index, builderForValue.build());
          onChanged();
        } else {
          marketsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public Builder addMarkets(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market value) {
        if (marketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarketsIsMutable();
          markets_.add(value);
          onChanged();
        } else {
          marketsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public Builder addMarkets(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market value) {
        if (marketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMarketsIsMutable();
          markets_.add(index, value);
          onChanged();
        } else {
          marketsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public Builder addMarkets(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder builderForValue) {
        if (marketsBuilder_ == null) {
          ensureMarketsIsMutable();
          markets_.add(builderForValue.build());
          onChanged();
        } else {
          marketsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public Builder addMarkets(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder builderForValue) {
        if (marketsBuilder_ == null) {
          ensureMarketsIsMutable();
          markets_.add(index, builderForValue.build());
          onChanged();
        } else {
          marketsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public Builder addAllMarkets(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market> values) {
        if (marketsBuilder_ == null) {
          ensureMarketsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, markets_);
          onChanged();
        } else {
          marketsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public Builder clearMarkets() {
        if (marketsBuilder_ == null) {
          markets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          marketsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public Builder removeMarkets(int index) {
        if (marketsBuilder_ == null) {
          ensureMarketsIsMutable();
          markets_.remove(index);
          onChanged();
        } else {
          marketsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder getMarketsBuilder(
          int index) {
        return getMarketsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MarketOrBuilder getMarketsOrBuilder(
          int index) {
        if (marketsBuilder_ == null) {
          return markets_.get(index);  } else {
          return marketsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MarketOrBuilder> 
           getMarketsOrBuilderList() {
        if (marketsBuilder_ != null) {
          return marketsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(markets_);
        }
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder addMarketsBuilder() {
        return getMarketsFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder addMarketsBuilder(
          int index) {
        return getMarketsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Market markets = 1;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder> 
           getMarketsBuilderList() {
        return getMarketsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MarketOrBuilder> 
          getMarketsFieldBuilder() {
        if (marketsBuilder_ == null) {
          marketsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Market.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MarketOrBuilder>(
                  markets_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          markets_ = null;
        }
        return marketsBuilder_;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector> sectors_ =
        java.util.Collections.emptyList();
      private void ensureSectorsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sectors_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector>(sectors_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SectorOrBuilder> sectorsBuilder_;

      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector> getSectorsList() {
        if (sectorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sectors_);
        } else {
          return sectorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public int getSectorsCount() {
        if (sectorsBuilder_ == null) {
          return sectors_.size();
        } else {
          return sectorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector getSectors(int index) {
        if (sectorsBuilder_ == null) {
          return sectors_.get(index);
        } else {
          return sectorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public Builder setSectors(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector value) {
        if (sectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSectorsIsMutable();
          sectors_.set(index, value);
          onChanged();
        } else {
          sectorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public Builder setSectors(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder builderForValue) {
        if (sectorsBuilder_ == null) {
          ensureSectorsIsMutable();
          sectors_.set(index, builderForValue.build());
          onChanged();
        } else {
          sectorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public Builder addSectors(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector value) {
        if (sectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSectorsIsMutable();
          sectors_.add(value);
          onChanged();
        } else {
          sectorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public Builder addSectors(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector value) {
        if (sectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSectorsIsMutable();
          sectors_.add(index, value);
          onChanged();
        } else {
          sectorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public Builder addSectors(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder builderForValue) {
        if (sectorsBuilder_ == null) {
          ensureSectorsIsMutable();
          sectors_.add(builderForValue.build());
          onChanged();
        } else {
          sectorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public Builder addSectors(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder builderForValue) {
        if (sectorsBuilder_ == null) {
          ensureSectorsIsMutable();
          sectors_.add(index, builderForValue.build());
          onChanged();
        } else {
          sectorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public Builder addAllSectors(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector> values) {
        if (sectorsBuilder_ == null) {
          ensureSectorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sectors_);
          onChanged();
        } else {
          sectorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public Builder clearSectors() {
        if (sectorsBuilder_ == null) {
          sectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sectorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public Builder removeSectors(int index) {
        if (sectorsBuilder_ == null) {
          ensureSectorsIsMutable();
          sectors_.remove(index);
          onChanged();
        } else {
          sectorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder getSectorsBuilder(
          int index) {
        return getSectorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SectorOrBuilder getSectorsOrBuilder(
          int index) {
        if (sectorsBuilder_ == null) {
          return sectors_.get(index);  } else {
          return sectorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SectorOrBuilder> 
           getSectorsOrBuilderList() {
        if (sectorsBuilder_ != null) {
          return sectorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sectors_);
        }
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder addSectorsBuilder() {
        return getSectorsFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder addSectorsBuilder(
          int index) {
        return getSectorsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Sector sectors = 2;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder> 
           getSectorsBuilderList() {
        return getSectorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SectorOrBuilder> 
          getSectorsFieldBuilder() {
        if (sectorsBuilder_ == null) {
          sectorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Sector.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SectorOrBuilder>(
                  sectors_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sectors_ = null;
        }
        return sectorsBuilder_;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency> currencies_ =
        java.util.Collections.emptyList();
      private void ensureCurrenciesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          currencies_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency>(currencies_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CurrencyOrBuilder> currenciesBuilder_;

      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency> getCurrenciesList() {
        if (currenciesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(currencies_);
        } else {
          return currenciesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public int getCurrenciesCount() {
        if (currenciesBuilder_ == null) {
          return currencies_.size();
        } else {
          return currenciesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency getCurrencies(int index) {
        if (currenciesBuilder_ == null) {
          return currencies_.get(index);
        } else {
          return currenciesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public Builder setCurrencies(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency value) {
        if (currenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCurrenciesIsMutable();
          currencies_.set(index, value);
          onChanged();
        } else {
          currenciesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public Builder setCurrencies(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder builderForValue) {
        if (currenciesBuilder_ == null) {
          ensureCurrenciesIsMutable();
          currencies_.set(index, builderForValue.build());
          onChanged();
        } else {
          currenciesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public Builder addCurrencies(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency value) {
        if (currenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCurrenciesIsMutable();
          currencies_.add(value);
          onChanged();
        } else {
          currenciesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public Builder addCurrencies(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency value) {
        if (currenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCurrenciesIsMutable();
          currencies_.add(index, value);
          onChanged();
        } else {
          currenciesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public Builder addCurrencies(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder builderForValue) {
        if (currenciesBuilder_ == null) {
          ensureCurrenciesIsMutable();
          currencies_.add(builderForValue.build());
          onChanged();
        } else {
          currenciesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public Builder addCurrencies(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder builderForValue) {
        if (currenciesBuilder_ == null) {
          ensureCurrenciesIsMutable();
          currencies_.add(index, builderForValue.build());
          onChanged();
        } else {
          currenciesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public Builder addAllCurrencies(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency> values) {
        if (currenciesBuilder_ == null) {
          ensureCurrenciesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, currencies_);
          onChanged();
        } else {
          currenciesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public Builder clearCurrencies() {
        if (currenciesBuilder_ == null) {
          currencies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          currenciesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public Builder removeCurrencies(int index) {
        if (currenciesBuilder_ == null) {
          ensureCurrenciesIsMutable();
          currencies_.remove(index);
          onChanged();
        } else {
          currenciesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder getCurrenciesBuilder(
          int index) {
        return getCurrenciesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CurrencyOrBuilder getCurrenciesOrBuilder(
          int index) {
        if (currenciesBuilder_ == null) {
          return currencies_.get(index);  } else {
          return currenciesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CurrencyOrBuilder> 
           getCurrenciesOrBuilderList() {
        if (currenciesBuilder_ != null) {
          return currenciesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(currencies_);
        }
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder addCurrenciesBuilder() {
        return getCurrenciesFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder addCurrenciesBuilder(
          int index) {
        return getCurrenciesFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Currency currencies = 3;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder> 
           getCurrenciesBuilderList() {
        return getCurrenciesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CurrencyOrBuilder> 
          getCurrenciesFieldBuilder() {
        if (currenciesBuilder_ == null) {
          currenciesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Currency.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CurrencyOrBuilder>(
                  currencies_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          currencies_ = null;
        }
        return currenciesBuilder_;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country> countries_ =
        java.util.Collections.emptyList();
      private void ensureCountriesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          countries_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country>(countries_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CountryOrBuilder> countriesBuilder_;

      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country> getCountriesList() {
        if (countriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(countries_);
        } else {
          return countriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public int getCountriesCount() {
        if (countriesBuilder_ == null) {
          return countries_.size();
        } else {
          return countriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country getCountries(int index) {
        if (countriesBuilder_ == null) {
          return countries_.get(index);
        } else {
          return countriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public Builder setCountries(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country value) {
        if (countriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCountriesIsMutable();
          countries_.set(index, value);
          onChanged();
        } else {
          countriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public Builder setCountries(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder builderForValue) {
        if (countriesBuilder_ == null) {
          ensureCountriesIsMutable();
          countries_.set(index, builderForValue.build());
          onChanged();
        } else {
          countriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public Builder addCountries(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country value) {
        if (countriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCountriesIsMutable();
          countries_.add(value);
          onChanged();
        } else {
          countriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public Builder addCountries(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country value) {
        if (countriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCountriesIsMutable();
          countries_.add(index, value);
          onChanged();
        } else {
          countriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public Builder addCountries(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder builderForValue) {
        if (countriesBuilder_ == null) {
          ensureCountriesIsMutable();
          countries_.add(builderForValue.build());
          onChanged();
        } else {
          countriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public Builder addCountries(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder builderForValue) {
        if (countriesBuilder_ == null) {
          ensureCountriesIsMutable();
          countries_.add(index, builderForValue.build());
          onChanged();
        } else {
          countriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public Builder addAllCountries(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country> values) {
        if (countriesBuilder_ == null) {
          ensureCountriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, countries_);
          onChanged();
        } else {
          countriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public Builder clearCountries() {
        if (countriesBuilder_ == null) {
          countries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          countriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public Builder removeCountries(int index) {
        if (countriesBuilder_ == null) {
          ensureCountriesIsMutable();
          countries_.remove(index);
          onChanged();
        } else {
          countriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder getCountriesBuilder(
          int index) {
        return getCountriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CountryOrBuilder getCountriesOrBuilder(
          int index) {
        if (countriesBuilder_ == null) {
          return countries_.get(index);  } else {
          return countriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CountryOrBuilder> 
           getCountriesOrBuilderList() {
        if (countriesBuilder_ != null) {
          return countriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(countries_);
        }
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder addCountriesBuilder() {
        return getCountriesFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder addCountriesBuilder(
          int index) {
        return getCountriesFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Country countries = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder> 
           getCountriesBuilderList() {
        return getCountriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CountryOrBuilder> 
          getCountriesFieldBuilder() {
        if (countriesBuilder_ == null) {
          countriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Country.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.CountryOrBuilder>(
                  countries_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          countries_ = null;
        }
        return countriesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.DomainContext)
    }

    static {
      defaultInstance = new DomainContext(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.DomainContext)
  }

  public interface MinimumQuotationSizeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.MinimumQuotationSize)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 unit_ord = 1 [default = 1];</code>
     */
    boolean hasUnitOrd();
    /**
     * <code>optional uint32 unit_ord = 1 [default = 1];</code>
     */
    int getUnitOrd();

    /**
     * <code>optional uint64 currency_id = 2;</code>
     */
    boolean hasCurrencyId();
    /**
     * <code>optional uint64 currency_id = 2;</code>
     */
    long getCurrencyId();

    /**
     * <code>optional string number = 3;</code>
     */
    boolean hasNumber();
    /**
     * <code>optional string number = 3;</code>
     */
    java.lang.String getNumber();
    /**
     * <code>optional string number = 3;</code>
     */
    com.google.protobuf.ByteString
        getNumberBytes();
  }
  /**
   * Protobuf type {@code protobuf.MinimumQuotationSize}
   */
  public static final class MinimumQuotationSize extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.MinimumQuotationSize)
      MinimumQuotationSizeOrBuilder {
    // Use MinimumQuotationSize.newBuilder() to construct.
    private MinimumQuotationSize(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MinimumQuotationSize(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MinimumQuotationSize defaultInstance;
    public static MinimumQuotationSize getDefaultInstance() {
      return defaultInstance;
    }

    public MinimumQuotationSize getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MinimumQuotationSize(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              unitOrd_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              currencyId_ = input.readUInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              number_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_MinimumQuotationSize_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_MinimumQuotationSize_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.Builder.class);
    }

    public static com.google.protobuf.Parser<MinimumQuotationSize> PARSER =
        new com.google.protobuf.AbstractParser<MinimumQuotationSize>() {
      public MinimumQuotationSize parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MinimumQuotationSize(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MinimumQuotationSize> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UNIT_ORD_FIELD_NUMBER = 1;
    private int unitOrd_;
    /**
     * <code>optional uint32 unit_ord = 1 [default = 1];</code>
     */
    public boolean hasUnitOrd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 unit_ord = 1 [default = 1];</code>
     */
    public int getUnitOrd() {
      return unitOrd_;
    }

    public static final int CURRENCY_ID_FIELD_NUMBER = 2;
    private long currencyId_;
    /**
     * <code>optional uint64 currency_id = 2;</code>
     */
    public boolean hasCurrencyId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 currency_id = 2;</code>
     */
    public long getCurrencyId() {
      return currencyId_;
    }

    public static final int NUMBER_FIELD_NUMBER = 3;
    private java.lang.Object number_;
    /**
     * <code>optional string number = 3;</code>
     */
    public boolean hasNumber() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string number = 3;</code>
     */
    public java.lang.String getNumber() {
      java.lang.Object ref = number_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          number_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string number = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNumberBytes() {
      java.lang.Object ref = number_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        number_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      unitOrd_ = 1;
      currencyId_ = 0L;
      number_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, unitOrd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, currencyId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNumberBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, unitOrd_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, currencyId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNumberBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.MinimumQuotationSize}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.MinimumQuotationSize)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSizeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_MinimumQuotationSize_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_MinimumQuotationSize_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        unitOrd_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        currencyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        number_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_MinimumQuotationSize_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unitOrd_ = unitOrd_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currencyId_ = currencyId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.number_ = number_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.getDefaultInstance()) return this;
        if (other.hasUnitOrd()) {
          setUnitOrd(other.getUnitOrd());
        }
        if (other.hasCurrencyId()) {
          setCurrencyId(other.getCurrencyId());
        }
        if (other.hasNumber()) {
          bitField0_ |= 0x00000004;
          number_ = other.number_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int unitOrd_ = 1;
      /**
       * <code>optional uint32 unit_ord = 1 [default = 1];</code>
       */
      public boolean hasUnitOrd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 unit_ord = 1 [default = 1];</code>
       */
      public int getUnitOrd() {
        return unitOrd_;
      }
      /**
       * <code>optional uint32 unit_ord = 1 [default = 1];</code>
       */
      public Builder setUnitOrd(int value) {
        bitField0_ |= 0x00000001;
        unitOrd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 unit_ord = 1 [default = 1];</code>
       */
      public Builder clearUnitOrd() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unitOrd_ = 1;
        onChanged();
        return this;
      }

      private long currencyId_ ;
      /**
       * <code>optional uint64 currency_id = 2;</code>
       */
      public boolean hasCurrencyId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 currency_id = 2;</code>
       */
      public long getCurrencyId() {
        return currencyId_;
      }
      /**
       * <code>optional uint64 currency_id = 2;</code>
       */
      public Builder setCurrencyId(long value) {
        bitField0_ |= 0x00000002;
        currencyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 currency_id = 2;</code>
       */
      public Builder clearCurrencyId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currencyId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object number_ = "";
      /**
       * <code>optional string number = 3;</code>
       */
      public boolean hasNumber() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public java.lang.String getNumber() {
        java.lang.Object ref = number_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            number_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNumberBytes() {
        java.lang.Object ref = number_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          number_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public Builder setNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        number_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public Builder clearNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        number_ = getDefaultInstance().getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public Builder setNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        number_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.MinimumQuotationSize)
    }

    static {
      defaultInstance = new MinimumQuotationSize(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.MinimumQuotationSize)
  }

  public interface EntitlementOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Entitlement)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    boolean hasKeysystemOrd();
    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    int getKeysystemOrd();

    /**
     * <code>repeated uint32 value_idx = 2 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getValueIdxList();
    /**
     * <code>repeated uint32 value_idx = 2 [packed = true];</code>
     */
    int getValueIdxCount();
    /**
     * <code>repeated uint32 value_idx = 2 [packed = true];</code>
     */
    int getValueIdx(int index);
  }
  /**
   * Protobuf type {@code protobuf.Entitlement}
   */
  public static final class Entitlement extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Entitlement)
      EntitlementOrBuilder {
    // Use Entitlement.newBuilder() to construct.
    private Entitlement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Entitlement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Entitlement defaultInstance;
    public static Entitlement getDefaultInstance() {
      return defaultInstance;
    }

    public Entitlement getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Entitlement(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              keysystemOrd_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                valueIdx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              valueIdx_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                valueIdx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                valueIdx_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          valueIdx_ = java.util.Collections.unmodifiableList(valueIdx_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Entitlement_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Entitlement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder.class);
    }

    public static com.google.protobuf.Parser<Entitlement> PARSER =
        new com.google.protobuf.AbstractParser<Entitlement>() {
      public Entitlement parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Entitlement(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Entitlement> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEYSYSTEM_ORD_FIELD_NUMBER = 1;
    private int keysystemOrd_;
    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    public boolean hasKeysystemOrd() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 keysystem_ord = 1;</code>
     */
    public int getKeysystemOrd() {
      return keysystemOrd_;
    }

    public static final int VALUE_IDX_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> valueIdx_;
    /**
     * <code>repeated uint32 value_idx = 2 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getValueIdxList() {
      return valueIdx_;
    }
    /**
     * <code>repeated uint32 value_idx = 2 [packed = true];</code>
     */
    public int getValueIdxCount() {
      return valueIdx_.size();
    }
    /**
     * <code>repeated uint32 value_idx = 2 [packed = true];</code>
     */
    public int getValueIdx(int index) {
      return valueIdx_.get(index);
    }
    private int valueIdxMemoizedSerializedSize = -1;

    private void initFields() {
      keysystemOrd_ = 0;
      valueIdx_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKeysystemOrd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, keysystemOrd_);
      }
      if (getValueIdxList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(valueIdxMemoizedSerializedSize);
      }
      for (int i = 0; i < valueIdx_.size(); i++) {
        output.writeUInt32NoTag(valueIdx_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, keysystemOrd_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < valueIdx_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(valueIdx_.get(i));
        }
        size += dataSize;
        if (!getValueIdxList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueIdxMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Entitlement}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Entitlement)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.EntitlementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Entitlement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Entitlement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        keysystemOrd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        valueIdx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Entitlement_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keysystemOrd_ = keysystemOrd_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          valueIdx_ = java.util.Collections.unmodifiableList(valueIdx_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.valueIdx_ = valueIdx_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.getDefaultInstance()) return this;
        if (other.hasKeysystemOrd()) {
          setKeysystemOrd(other.getKeysystemOrd());
        }
        if (!other.valueIdx_.isEmpty()) {
          if (valueIdx_.isEmpty()) {
            valueIdx_ = other.valueIdx_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIdxIsMutable();
            valueIdx_.addAll(other.valueIdx_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKeysystemOrd()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int keysystemOrd_ ;
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public boolean hasKeysystemOrd() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public int getKeysystemOrd() {
        return keysystemOrd_;
      }
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public Builder setKeysystemOrd(int value) {
        bitField0_ |= 0x00000001;
        keysystemOrd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 keysystem_ord = 1;</code>
       */
      public Builder clearKeysystemOrd() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keysystemOrd_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> valueIdx_ = java.util.Collections.emptyList();
      private void ensureValueIdxIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          valueIdx_ = new java.util.ArrayList<java.lang.Integer>(valueIdx_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 value_idx = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getValueIdxList() {
        return java.util.Collections.unmodifiableList(valueIdx_);
      }
      /**
       * <code>repeated uint32 value_idx = 2 [packed = true];</code>
       */
      public int getValueIdxCount() {
        return valueIdx_.size();
      }
      /**
       * <code>repeated uint32 value_idx = 2 [packed = true];</code>
       */
      public int getValueIdx(int index) {
        return valueIdx_.get(index);
      }
      /**
       * <code>repeated uint32 value_idx = 2 [packed = true];</code>
       */
      public Builder setValueIdx(
          int index, int value) {
        ensureValueIdxIsMutable();
        valueIdx_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 value_idx = 2 [packed = true];</code>
       */
      public Builder addValueIdx(int value) {
        ensureValueIdxIsMutable();
        valueIdx_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 value_idx = 2 [packed = true];</code>
       */
      public Builder addAllValueIdx(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValueIdxIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, valueIdx_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 value_idx = 2 [packed = true];</code>
       */
      public Builder clearValueIdx() {
        valueIdx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Entitlement)
    }

    static {
      defaultInstance = new Entitlement(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Entitlement)
  }

  public interface QuoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Quote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required uint64 id = 1;</code>
     */
    long getId();

    /**
     * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> 
        getSymbolsList();
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef getSymbols(int index);
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
     */
    int getSymbolsCount();
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
        getSymbolsOrBuilderList();
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder getSymbolsOrBuilder(
        int index);

    /**
     * <code>optional uint64 market_id = 3;</code>
     */
    boolean hasMarketId();
    /**
     * <code>optional uint64 market_id = 3;</code>
     */
    long getMarketId();

    /**
     * <code>optional uint64 currency_id = 4;</code>
     */
    boolean hasCurrencyId();
    /**
     * <code>optional uint64 currency_id = 4;</code>
     */
    long getCurrencyId();

    /**
     * <code>optional sfixed32 first_historic_price_yyyymmdd = 5;</code>
     */
    boolean hasFirstHistoricPriceYyyymmdd();
    /**
     * <code>optional sfixed32 first_historic_price_yyyymmdd = 5;</code>
     */
    int getFirstHistoricPriceYyyymmdd();

    /**
     * <code>optional uint32 quotedef = 6;</code>
     */
    boolean hasQuotedef();
    /**
     * <code>optional uint32 quotedef = 6;</code>
     */
    int getQuotedef();

    /**
     * <code>optional sfixed64 orders = 7;</code>
     */
    boolean hasOrders();
    /**
     * <code>optional sfixed64 orders = 7;</code>
     */
    long getOrders();

    /**
     * <code>repeated sfixed64 flags = 8;</code>
     */
    java.util.List<java.lang.Long> getFlagsList();
    /**
     * <code>repeated sfixed64 flags = 8;</code>
     */
    int getFlagsCount();
    /**
     * <code>repeated sfixed64 flags = 8;</code>
     */
    long getFlags(int index);

    /**
     * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
     */
    boolean hasMinimumQuotationSize();
    /**
     * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize getMinimumQuotationSize();
    /**
     * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSizeOrBuilder getMinimumQuotationSizeOrBuilder();

    /**
     * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement> 
        getEntitlementsList();
    /**
     * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement getEntitlements(int index);
    /**
     * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
     */
    int getEntitlementsCount();
    /**
     * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.EntitlementOrBuilder> 
        getEntitlementsOrBuilderList();
    /**
     * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.EntitlementOrBuilder getEntitlementsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protobuf.Quote}
   */
  public static final class Quote extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Quote)
      QuoteOrBuilder {
    // Use Quote.newBuilder() to construct.
    private Quote(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Quote(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Quote defaultInstance;
    public static Quote getDefaultInstance() {
      return defaultInstance;
    }

    public Quote getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Quote(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef>();
                mutable_bitField0_ |= 0x00000002;
              }
              symbols_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              marketId_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              currencyId_ = input.readUInt64();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000008;
              firstHistoricPriceYyyymmdd_ = input.readSFixed32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              quotedef_ = input.readUInt32();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000020;
              orders_ = input.readSFixed64();
              break;
            }
            case 65: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                flags_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              flags_.add(input.readSFixed64());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                flags_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                flags_.add(input.readSFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = minimumQuotationSize_.toBuilder();
              }
              minimumQuotationSize_ = input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minimumQuotationSize_);
                minimumQuotationSize_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                entitlements_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement>();
                mutable_bitField0_ |= 0x00000200;
              }
              entitlements_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          symbols_ = java.util.Collections.unmodifiableList(symbols_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          flags_ = java.util.Collections.unmodifiableList(flags_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          entitlements_ = java.util.Collections.unmodifiableList(entitlements_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Quote_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Quote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder.class);
    }

    public static com.google.protobuf.Parser<Quote> PARSER =
        new com.google.protobuf.AbstractParser<Quote>() {
      public Quote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Quote(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Quote> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required uint64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int SYMBOLS_FIELD_NUMBER = 2;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> symbols_;
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> getSymbolsList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
        getSymbolsOrBuilderList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
     */
    public int getSymbolsCount() {
      return symbols_.size();
    }
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef getSymbols(int index) {
      return symbols_.get(index);
    }
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder getSymbolsOrBuilder(
        int index) {
      return symbols_.get(index);
    }

    public static final int MARKET_ID_FIELD_NUMBER = 3;
    private long marketId_;
    /**
     * <code>optional uint64 market_id = 3;</code>
     */
    public boolean hasMarketId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 market_id = 3;</code>
     */
    public long getMarketId() {
      return marketId_;
    }

    public static final int CURRENCY_ID_FIELD_NUMBER = 4;
    private long currencyId_;
    /**
     * <code>optional uint64 currency_id = 4;</code>
     */
    public boolean hasCurrencyId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 currency_id = 4;</code>
     */
    public long getCurrencyId() {
      return currencyId_;
    }

    public static final int FIRST_HISTORIC_PRICE_YYYYMMDD_FIELD_NUMBER = 5;
    private int firstHistoricPriceYyyymmdd_;
    /**
     * <code>optional sfixed32 first_historic_price_yyyymmdd = 5;</code>
     */
    public boolean hasFirstHistoricPriceYyyymmdd() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sfixed32 first_historic_price_yyyymmdd = 5;</code>
     */
    public int getFirstHistoricPriceYyyymmdd() {
      return firstHistoricPriceYyyymmdd_;
    }

    public static final int QUOTEDEF_FIELD_NUMBER = 6;
    private int quotedef_;
    /**
     * <code>optional uint32 quotedef = 6;</code>
     */
    public boolean hasQuotedef() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 quotedef = 6;</code>
     */
    public int getQuotedef() {
      return quotedef_;
    }

    public static final int ORDERS_FIELD_NUMBER = 7;
    private long orders_;
    /**
     * <code>optional sfixed64 orders = 7;</code>
     */
    public boolean hasOrders() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional sfixed64 orders = 7;</code>
     */
    public long getOrders() {
      return orders_;
    }

    public static final int FLAGS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Long> flags_;
    /**
     * <code>repeated sfixed64 flags = 8;</code>
     */
    public java.util.List<java.lang.Long>
        getFlagsList() {
      return flags_;
    }
    /**
     * <code>repeated sfixed64 flags = 8;</code>
     */
    public int getFlagsCount() {
      return flags_.size();
    }
    /**
     * <code>repeated sfixed64 flags = 8;</code>
     */
    public long getFlags(int index) {
      return flags_.get(index);
    }

    public static final int MINIMUM_QUOTATION_SIZE_FIELD_NUMBER = 9;
    private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize minimumQuotationSize_;
    /**
     * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
     */
    public boolean hasMinimumQuotationSize() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize getMinimumQuotationSize() {
      return minimumQuotationSize_;
    }
    /**
     * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSizeOrBuilder getMinimumQuotationSizeOrBuilder() {
      return minimumQuotationSize_;
    }

    public static final int ENTITLEMENTS_FIELD_NUMBER = 10;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement> entitlements_;
    /**
     * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement> getEntitlementsList() {
      return entitlements_;
    }
    /**
     * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.EntitlementOrBuilder> 
        getEntitlementsOrBuilderList() {
      return entitlements_;
    }
    /**
     * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
     */
    public int getEntitlementsCount() {
      return entitlements_.size();
    }
    /**
     * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement getEntitlements(int index) {
      return entitlements_.get(index);
    }
    /**
     * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.EntitlementOrBuilder getEntitlementsOrBuilder(
        int index) {
      return entitlements_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      symbols_ = java.util.Collections.emptyList();
      marketId_ = 0L;
      currencyId_ = 0L;
      firstHistoricPriceYyyymmdd_ = 0;
      quotedef_ = 0;
      orders_ = 0L;
      flags_ = java.util.Collections.emptyList();
      minimumQuotationSize_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.getDefaultInstance();
      entitlements_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSymbolsCount(); i++) {
        if (!getSymbols(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getEntitlementsCount(); i++) {
        if (!getEntitlements(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, id_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        output.writeMessage(2, symbols_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(3, marketId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(4, currencyId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSFixed32(5, firstHistoricPriceYyyymmdd_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, quotedef_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSFixed64(7, orders_);
      }
      for (int i = 0; i < flags_.size(); i++) {
        output.writeSFixed64(8, flags_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(9, minimumQuotationSize_);
      }
      for (int i = 0; i < entitlements_.size(); i++) {
        output.writeMessage(10, entitlements_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, symbols_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, marketId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, currencyId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(5, firstHistoricPriceYyyymmdd_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, quotedef_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(7, orders_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getFlagsList().size();
        size += dataSize;
        size += 1 * getFlagsList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, minimumQuotationSize_);
      }
      for (int i = 0; i < entitlements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, entitlements_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Quote}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Quote)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.QuoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Quote_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Quote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSymbolsFieldBuilder();
          getMinimumQuotationSizeFieldBuilder();
          getEntitlementsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          symbolsBuilder_.clear();
        }
        marketId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        currencyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        firstHistoricPriceYyyymmdd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        quotedef_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        orders_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        flags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        if (minimumQuotationSizeBuilder_ == null) {
          minimumQuotationSize_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.getDefaultInstance();
        } else {
          minimumQuotationSizeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (entitlementsBuilder_ == null) {
          entitlements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          entitlementsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Quote_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (symbolsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            symbols_ = java.util.Collections.unmodifiableList(symbols_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.symbols_ = symbols_;
        } else {
          result.symbols_ = symbolsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.marketId_ = marketId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.currencyId_ = currencyId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.firstHistoricPriceYyyymmdd_ = firstHistoricPriceYyyymmdd_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.quotedef_ = quotedef_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.orders_ = orders_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          flags_ = java.util.Collections.unmodifiableList(flags_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.flags_ = flags_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        if (minimumQuotationSizeBuilder_ == null) {
          result.minimumQuotationSize_ = minimumQuotationSize_;
        } else {
          result.minimumQuotationSize_ = minimumQuotationSizeBuilder_.build();
        }
        if (entitlementsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            entitlements_ = java.util.Collections.unmodifiableList(entitlements_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.entitlements_ = entitlements_;
        } else {
          result.entitlements_ = entitlementsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (symbolsBuilder_ == null) {
          if (!other.symbols_.isEmpty()) {
            if (symbols_.isEmpty()) {
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSymbolsIsMutable();
              symbols_.addAll(other.symbols_);
            }
            onChanged();
          }
        } else {
          if (!other.symbols_.isEmpty()) {
            if (symbolsBuilder_.isEmpty()) {
              symbolsBuilder_.dispose();
              symbolsBuilder_ = null;
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000002);
              symbolsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSymbolsFieldBuilder() : null;
            } else {
              symbolsBuilder_.addAllMessages(other.symbols_);
            }
          }
        }
        if (other.hasMarketId()) {
          setMarketId(other.getMarketId());
        }
        if (other.hasCurrencyId()) {
          setCurrencyId(other.getCurrencyId());
        }
        if (other.hasFirstHistoricPriceYyyymmdd()) {
          setFirstHistoricPriceYyyymmdd(other.getFirstHistoricPriceYyyymmdd());
        }
        if (other.hasQuotedef()) {
          setQuotedef(other.getQuotedef());
        }
        if (other.hasOrders()) {
          setOrders(other.getOrders());
        }
        if (!other.flags_.isEmpty()) {
          if (flags_.isEmpty()) {
            flags_ = other.flags_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureFlagsIsMutable();
            flags_.addAll(other.flags_);
          }
          onChanged();
        }
        if (other.hasMinimumQuotationSize()) {
          mergeMinimumQuotationSize(other.getMinimumQuotationSize());
        }
        if (entitlementsBuilder_ == null) {
          if (!other.entitlements_.isEmpty()) {
            if (entitlements_.isEmpty()) {
              entitlements_ = other.entitlements_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureEntitlementsIsMutable();
              entitlements_.addAll(other.entitlements_);
            }
            onChanged();
          }
        } else {
          if (!other.entitlements_.isEmpty()) {
            if (entitlementsBuilder_.isEmpty()) {
              entitlementsBuilder_.dispose();
              entitlementsBuilder_ = null;
              entitlements_ = other.entitlements_;
              bitField0_ = (bitField0_ & ~0x00000200);
              entitlementsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEntitlementsFieldBuilder() : null;
            } else {
              entitlementsBuilder_.addAllMessages(other.entitlements_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        for (int i = 0; i < getSymbolsCount(); i++) {
          if (!getSymbols(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getEntitlementsCount(); i++) {
          if (!getEntitlements(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>required uint64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> symbols_ =
        java.util.Collections.emptyList();
      private void ensureSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef>(symbols_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> symbolsBuilder_;

      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> getSymbolsList() {
        if (symbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(symbols_);
        } else {
          return symbolsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public int getSymbolsCount() {
        if (symbolsBuilder_ == null) {
          return symbols_.size();
        } else {
          return symbolsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef getSymbols(int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);
        } else {
          return symbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.set(index, value);
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public Builder addSymbols(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(index, value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public Builder addSymbols(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public Builder addAllSymbols(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> values) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, symbols_);
          onChanged();
        } else {
          symbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public Builder clearSymbols() {
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public Builder removeSymbols(int index) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.remove(index);
          onChanged();
        } else {
          symbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder getSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder getSymbolsOrBuilder(
          int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);  } else {
          return symbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
           getSymbolsOrBuilderList() {
        if (symbolsBuilder_ != null) {
          return symbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(symbols_);
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder addSymbolsBuilder() {
        return getSymbolsFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder addSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 2;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder> 
           getSymbolsBuilderList() {
        return getSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
          getSymbolsFieldBuilder() {
        if (symbolsBuilder_ == null) {
          symbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder>(
                  symbols_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          symbols_ = null;
        }
        return symbolsBuilder_;
      }

      private long marketId_ ;
      /**
       * <code>optional uint64 market_id = 3;</code>
       */
      public boolean hasMarketId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 market_id = 3;</code>
       */
      public long getMarketId() {
        return marketId_;
      }
      /**
       * <code>optional uint64 market_id = 3;</code>
       */
      public Builder setMarketId(long value) {
        bitField0_ |= 0x00000004;
        marketId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 market_id = 3;</code>
       */
      public Builder clearMarketId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        marketId_ = 0L;
        onChanged();
        return this;
      }

      private long currencyId_ ;
      /**
       * <code>optional uint64 currency_id = 4;</code>
       */
      public boolean hasCurrencyId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 currency_id = 4;</code>
       */
      public long getCurrencyId() {
        return currencyId_;
      }
      /**
       * <code>optional uint64 currency_id = 4;</code>
       */
      public Builder setCurrencyId(long value) {
        bitField0_ |= 0x00000008;
        currencyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 currency_id = 4;</code>
       */
      public Builder clearCurrencyId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        currencyId_ = 0L;
        onChanged();
        return this;
      }

      private int firstHistoricPriceYyyymmdd_ ;
      /**
       * <code>optional sfixed32 first_historic_price_yyyymmdd = 5;</code>
       */
      public boolean hasFirstHistoricPriceYyyymmdd() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional sfixed32 first_historic_price_yyyymmdd = 5;</code>
       */
      public int getFirstHistoricPriceYyyymmdd() {
        return firstHistoricPriceYyyymmdd_;
      }
      /**
       * <code>optional sfixed32 first_historic_price_yyyymmdd = 5;</code>
       */
      public Builder setFirstHistoricPriceYyyymmdd(int value) {
        bitField0_ |= 0x00000010;
        firstHistoricPriceYyyymmdd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed32 first_historic_price_yyyymmdd = 5;</code>
       */
      public Builder clearFirstHistoricPriceYyyymmdd() {
        bitField0_ = (bitField0_ & ~0x00000010);
        firstHistoricPriceYyyymmdd_ = 0;
        onChanged();
        return this;
      }

      private int quotedef_ ;
      /**
       * <code>optional uint32 quotedef = 6;</code>
       */
      public boolean hasQuotedef() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 quotedef = 6;</code>
       */
      public int getQuotedef() {
        return quotedef_;
      }
      /**
       * <code>optional uint32 quotedef = 6;</code>
       */
      public Builder setQuotedef(int value) {
        bitField0_ |= 0x00000020;
        quotedef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 quotedef = 6;</code>
       */
      public Builder clearQuotedef() {
        bitField0_ = (bitField0_ & ~0x00000020);
        quotedef_ = 0;
        onChanged();
        return this;
      }

      private long orders_ ;
      /**
       * <code>optional sfixed64 orders = 7;</code>
       */
      public boolean hasOrders() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional sfixed64 orders = 7;</code>
       */
      public long getOrders() {
        return orders_;
      }
      /**
       * <code>optional sfixed64 orders = 7;</code>
       */
      public Builder setOrders(long value) {
        bitField0_ |= 0x00000040;
        orders_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sfixed64 orders = 7;</code>
       */
      public Builder clearOrders() {
        bitField0_ = (bitField0_ & ~0x00000040);
        orders_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> flags_ = java.util.Collections.emptyList();
      private void ensureFlagsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          flags_ = new java.util.ArrayList<java.lang.Long>(flags_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated sfixed64 flags = 8;</code>
       */
      public java.util.List<java.lang.Long>
          getFlagsList() {
        return java.util.Collections.unmodifiableList(flags_);
      }
      /**
       * <code>repeated sfixed64 flags = 8;</code>
       */
      public int getFlagsCount() {
        return flags_.size();
      }
      /**
       * <code>repeated sfixed64 flags = 8;</code>
       */
      public long getFlags(int index) {
        return flags_.get(index);
      }
      /**
       * <code>repeated sfixed64 flags = 8;</code>
       */
      public Builder setFlags(
          int index, long value) {
        ensureFlagsIsMutable();
        flags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 flags = 8;</code>
       */
      public Builder addFlags(long value) {
        ensureFlagsIsMutable();
        flags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 flags = 8;</code>
       */
      public Builder addAllFlags(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFlagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, flags_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated sfixed64 flags = 8;</code>
       */
      public Builder clearFlags() {
        flags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize minimumQuotationSize_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSizeOrBuilder> minimumQuotationSizeBuilder_;
      /**
       * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
       */
      public boolean hasMinimumQuotationSize() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize getMinimumQuotationSize() {
        if (minimumQuotationSizeBuilder_ == null) {
          return minimumQuotationSize_;
        } else {
          return minimumQuotationSizeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
       */
      public Builder setMinimumQuotationSize(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize value) {
        if (minimumQuotationSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minimumQuotationSize_ = value;
          onChanged();
        } else {
          minimumQuotationSizeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
       */
      public Builder setMinimumQuotationSize(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.Builder builderForValue) {
        if (minimumQuotationSizeBuilder_ == null) {
          minimumQuotationSize_ = builderForValue.build();
          onChanged();
        } else {
          minimumQuotationSizeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
       */
      public Builder mergeMinimumQuotationSize(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize value) {
        if (minimumQuotationSizeBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              minimumQuotationSize_ != de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.getDefaultInstance()) {
            minimumQuotationSize_ =
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.newBuilder(minimumQuotationSize_).mergeFrom(value).buildPartial();
          } else {
            minimumQuotationSize_ = value;
          }
          onChanged();
        } else {
          minimumQuotationSizeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
       */
      public Builder clearMinimumQuotationSize() {
        if (minimumQuotationSizeBuilder_ == null) {
          minimumQuotationSize_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.getDefaultInstance();
          onChanged();
        } else {
          minimumQuotationSizeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.Builder getMinimumQuotationSizeBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getMinimumQuotationSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSizeOrBuilder getMinimumQuotationSizeOrBuilder() {
        if (minimumQuotationSizeBuilder_ != null) {
          return minimumQuotationSizeBuilder_.getMessageOrBuilder();
        } else {
          return minimumQuotationSize_;
        }
      }
      /**
       * <code>optional .protobuf.MinimumQuotationSize minimum_quotation_size = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSizeOrBuilder> 
          getMinimumQuotationSizeFieldBuilder() {
        if (minimumQuotationSizeBuilder_ == null) {
          minimumQuotationSizeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSize.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.MinimumQuotationSizeOrBuilder>(
                  getMinimumQuotationSize(),
                  getParentForChildren(),
                  isClean());
          minimumQuotationSize_ = null;
        }
        return minimumQuotationSizeBuilder_;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement> entitlements_ =
        java.util.Collections.emptyList();
      private void ensureEntitlementsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          entitlements_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement>(entitlements_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.EntitlementOrBuilder> entitlementsBuilder_;

      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement> getEntitlementsList() {
        if (entitlementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entitlements_);
        } else {
          return entitlementsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public int getEntitlementsCount() {
        if (entitlementsBuilder_ == null) {
          return entitlements_.size();
        } else {
          return entitlementsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement getEntitlements(int index) {
        if (entitlementsBuilder_ == null) {
          return entitlements_.get(index);
        } else {
          return entitlementsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public Builder setEntitlements(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement value) {
        if (entitlementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntitlementsIsMutable();
          entitlements_.set(index, value);
          onChanged();
        } else {
          entitlementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public Builder setEntitlements(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder builderForValue) {
        if (entitlementsBuilder_ == null) {
          ensureEntitlementsIsMutable();
          entitlements_.set(index, builderForValue.build());
          onChanged();
        } else {
          entitlementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public Builder addEntitlements(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement value) {
        if (entitlementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntitlementsIsMutable();
          entitlements_.add(value);
          onChanged();
        } else {
          entitlementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public Builder addEntitlements(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement value) {
        if (entitlementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntitlementsIsMutable();
          entitlements_.add(index, value);
          onChanged();
        } else {
          entitlementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public Builder addEntitlements(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder builderForValue) {
        if (entitlementsBuilder_ == null) {
          ensureEntitlementsIsMutable();
          entitlements_.add(builderForValue.build());
          onChanged();
        } else {
          entitlementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public Builder addEntitlements(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder builderForValue) {
        if (entitlementsBuilder_ == null) {
          ensureEntitlementsIsMutable();
          entitlements_.add(index, builderForValue.build());
          onChanged();
        } else {
          entitlementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public Builder addAllEntitlements(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement> values) {
        if (entitlementsBuilder_ == null) {
          ensureEntitlementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, entitlements_);
          onChanged();
        } else {
          entitlementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public Builder clearEntitlements() {
        if (entitlementsBuilder_ == null) {
          entitlements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          entitlementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public Builder removeEntitlements(int index) {
        if (entitlementsBuilder_ == null) {
          ensureEntitlementsIsMutable();
          entitlements_.remove(index);
          onChanged();
        } else {
          entitlementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder getEntitlementsBuilder(
          int index) {
        return getEntitlementsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.EntitlementOrBuilder getEntitlementsOrBuilder(
          int index) {
        if (entitlementsBuilder_ == null) {
          return entitlements_.get(index);  } else {
          return entitlementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.EntitlementOrBuilder> 
           getEntitlementsOrBuilderList() {
        if (entitlementsBuilder_ != null) {
          return entitlementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entitlements_);
        }
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder addEntitlementsBuilder() {
        return getEntitlementsFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder addEntitlementsBuilder(
          int index) {
        return getEntitlementsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Entitlement entitlements = 10;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder> 
           getEntitlementsBuilderList() {
        return getEntitlementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.EntitlementOrBuilder> 
          getEntitlementsFieldBuilder() {
        if (entitlementsBuilder_ == null) {
          entitlementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Entitlement.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.EntitlementOrBuilder>(
                  entitlements_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          entitlements_ = null;
        }
        return entitlementsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Quote)
    }

    static {
      defaultInstance = new Quote(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Quote)
  }

  public interface InstrumentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Instrument)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required uint64 id = 1;</code>
     */
    long getId();

    /**
     * <code>required uint32 name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>required uint32 name = 2;</code>
     */
    int getName();

    /**
     * <code>required uint32 type_ord = 3;</code>
     */
    boolean hasTypeOrd();
    /**
     * <code>required uint32 type_ord = 3;</code>
     */
    int getTypeOrd();

    /**
     * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> 
        getSymbolsList();
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef getSymbols(int index);
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
     */
    int getSymbolsCount();
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
        getSymbolsOrBuilderList();
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder getSymbolsOrBuilder(
        int index);

    /**
     * <code>repeated .protobuf.Quote quotes = 5;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote> 
        getQuotesList();
    /**
     * <code>repeated .protobuf.Quote quotes = 5;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote getQuotes(int index);
    /**
     * <code>repeated .protobuf.Quote quotes = 5;</code>
     */
    int getQuotesCount();
    /**
     * <code>repeated .protobuf.Quote quotes = 5;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.QuoteOrBuilder> 
        getQuotesOrBuilderList();
    /**
     * <code>repeated .protobuf.Quote quotes = 5;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.QuoteOrBuilder getQuotesOrBuilder(
        int index);

    /**
     * <code>optional uint64 home_market_id = 6;</code>
     */
    boolean hasHomeMarketId();
    /**
     * <code>optional uint64 home_market_id = 6;</code>
     */
    long getHomeMarketId();

    /**
     * <code>optional uint64 country_id = 7;</code>
     */
    boolean hasCountryId();
    /**
     * <code>optional uint64 country_id = 7;</code>
     */
    long getCountryId();

    /**
     * <code>optional uint32 expiration_date = 8 [default = 0];</code>
     */
    boolean hasExpirationDate();
    /**
     * <code>optional uint32 expiration_date = 8 [default = 0];</code>
     */
    int getExpirationDate();

    /**
     * <code>optional uint32 instrumentclass_ord = 9;</code>
     */
    boolean hasInstrumentclassOrd();
    /**
     * <code>optional uint32 instrumentclass_ord = 9;</code>
     */
    int getInstrumentclassOrd();

    /**
     * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
     */
    java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> 
        getDetailedInstrumentTypeList();
    /**
     * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef getDetailedInstrumentType(int index);
    /**
     * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
     */
    int getDetailedInstrumentTypeCount();
    /**
     * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
     */
    java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
        getDetailedInstrumentTypeOrBuilderList();
    /**
     * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder getDetailedInstrumentTypeOrBuilder(
        int index);

    /**
     * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
     */
    boolean hasDervative();
    /**
     * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative getDervative();
    /**
     * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.DerivativeOrBuilder getDervativeOrBuilder();

    /**
     * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
     *
     * <pre>
     * cached strings, not as a Message to be able to use packed array
     * </pre>
     */
    java.util.List<java.lang.Integer> getPrefixLengthsList();
    /**
     * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
     *
     * <pre>
     * cached strings, not as a Message to be able to use packed array
     * </pre>
     */
    int getPrefixLengthsCount();
    /**
     * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
     *
     * <pre>
     * cached strings, not as a Message to be able to use packed array
     * </pre>
     */
    int getPrefixLengths(int index);

    /**
     * <code>repeated string suffixes = 15;</code>
     */
    com.google.protobuf.ProtocolStringList
        getSuffixesList();
    /**
     * <code>repeated string suffixes = 15;</code>
     */
    int getSuffixesCount();
    /**
     * <code>repeated string suffixes = 15;</code>
     */
    java.lang.String getSuffixes(int index);
    /**
     * <code>repeated string suffixes = 15;</code>
     */
    com.google.protobuf.ByteString
        getSuffixesBytes(int index);

    /**
     * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
     */
    boolean hasCrossrate();
    /**
     * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate getCrossrate();
    /**
     * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.CrossrateOrBuilder getCrossrateOrBuilder();

    /**
     * <code>optional uint32 general_meeting_date = 98 [default = 0];</code>
     */
    boolean hasGeneralMeetingDate();
    /**
     * <code>optional uint32 general_meeting_date = 98 [default = 0];</code>
     */
    int getGeneralMeetingDate();

    /**
     * <code>optional uint64 sector_id = 99 [default = 0];</code>
     */
    boolean hasSectorId();
    /**
     * <code>optional uint64 sector_id = 99 [default = 0];</code>
     */
    long getSectorId();

    /**
     * <code>optional uint32 aliases = 100;</code>
     */
    boolean hasAliases();
    /**
     * <code>optional uint32 aliases = 100;</code>
     */
    int getAliases();

    /**
     * <code>optional uint32 lei = 101;</code>
     */
    boolean hasLei();
    /**
     * <code>optional uint32 lei = 101;</code>
     */
    int getLei();

    /**
     * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
     */
    boolean hasRate();
    /**
     * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate getRate();
    /**
     * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
     */
    de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.RateOrBuilder getRateOrBuilder();
  }
  /**
   * Protobuf type {@code protobuf.Instrument}
   */
  public static final class Instrument extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Instrument)
      InstrumentOrBuilder {
    // Use Instrument.newBuilder() to construct.
    private Instrument(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Instrument(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Instrument defaultInstance;
    public static Instrument getDefaultInstance() {
      return defaultInstance;
    }

    public Instrument getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Instrument(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              name_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              typeOrd_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef>();
                mutable_bitField0_ |= 0x00000008;
              }
              symbols_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                quotes_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote>();
                mutable_bitField0_ |= 0x00000010;
              }
              quotes_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              homeMarketId_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              countryId_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              expirationDate_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              instrumentclassOrd_ = input.readUInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                detailedInstrumentType_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef>();
                mutable_bitField0_ |= 0x00000200;
              }
              detailedInstrumentType_.add(input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.PARSER, extensionRegistry));
              break;
            }
            case 90: {
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = dervative_.toBuilder();
              }
              dervative_ = input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dervative_);
                dervative_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                prefixLengths_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              prefixLengths_.add(input.readUInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                prefixLengths_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                prefixLengths_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 122: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                suffixes_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00001000;
              }
              suffixes_.add(bs);
              break;
            }
            case 778: {
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = crossrate_.toBuilder();
              }
              crossrate_ = input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(crossrate_);
                crossrate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 784: {
              bitField0_ |= 0x00000200;
              generalMeetingDate_ = input.readUInt32();
              break;
            }
            case 792: {
              bitField0_ |= 0x00000400;
              sectorId_ = input.readUInt64();
              break;
            }
            case 800: {
              bitField0_ |= 0x00000800;
              aliases_ = input.readUInt32();
              break;
            }
            case 808: {
              bitField0_ |= 0x00001000;
              lei_ = input.readUInt32();
              break;
            }
            case 818: {
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = rate_.toBuilder();
              }
              rate_ = input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rate_);
                rate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          symbols_ = java.util.Collections.unmodifiableList(symbols_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          quotes_ = java.util.Collections.unmodifiableList(quotes_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          detailedInstrumentType_ = java.util.Collections.unmodifiableList(detailedInstrumentType_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          prefixLengths_ = java.util.Collections.unmodifiableList(prefixLengths_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          suffixes_ = suffixes_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Builder.class);
    }

    public static com.google.protobuf.Parser<Instrument> PARSER =
        new com.google.protobuf.AbstractParser<Instrument>() {
      public Instrument parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Instrument(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Instrument> getParserForType() {
      return PARSER;
    }

    public interface FutureOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protobuf.Instrument.Future)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 tick_currency_id = 1;</code>
       */
      boolean hasTickCurrencyId();
      /**
       * <code>optional uint64 tick_currency_id = 1;</code>
       */
      long getTickCurrencyId();

      /**
       * <code>optional string tick_size = 2;</code>
       */
      boolean hasTickSize();
      /**
       * <code>optional string tick_size = 2;</code>
       */
      java.lang.String getTickSize();
      /**
       * <code>optional string tick_size = 2;</code>
       */
      com.google.protobuf.ByteString
          getTickSizeBytes();

      /**
       * <code>optional string tick_value = 3;</code>
       */
      boolean hasTickValue();
      /**
       * <code>optional string tick_value = 3;</code>
       */
      java.lang.String getTickValue();
      /**
       * <code>optional string tick_value = 3;</code>
       */
      com.google.protobuf.ByteString
          getTickValueBytes();

      /**
       * <code>optional uint64 contract_currency_id = 4;</code>
       */
      boolean hasContractCurrencyId();
      /**
       * <code>optional uint64 contract_currency_id = 4;</code>
       */
      long getContractCurrencyId();

      /**
       * <code>optional string contract_value = 5;</code>
       */
      boolean hasContractValue();
      /**
       * <code>optional string contract_value = 5;</code>
       */
      java.lang.String getContractValue();
      /**
       * <code>optional string contract_value = 5;</code>
       */
      com.google.protobuf.ByteString
          getContractValueBytes();

      /**
       * <code>optional uint64 underlying_product_id = 6;</code>
       */
      boolean hasUnderlyingProductId();
      /**
       * <code>optional uint64 underlying_product_id = 6;</code>
       */
      long getUnderlyingProductId();
    }
    /**
     * Protobuf type {@code protobuf.Instrument.Future}
     *
     * <pre>
     * inner messages for instrument subtypes
     * </pre>
     */
    public static final class Future extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protobuf.Instrument.Future)
        FutureOrBuilder {
      // Use Future.newBuilder() to construct.
      private Future(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Future(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Future defaultInstance;
      public static Future getDefaultInstance() {
        return defaultInstance;
      }

      public Future getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Future(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                tickCurrencyId_ = input.readUInt64();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                tickSize_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                tickValue_ = bs;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                contractCurrencyId_ = input.readUInt64();
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                contractValue_ = bs;
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                underlyingProductId_ = input.readUInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Future_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Future_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.Builder.class);
      }

      public static com.google.protobuf.Parser<Future> PARSER =
          new com.google.protobuf.AbstractParser<Future>() {
        public Future parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Future(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Future> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int TICK_CURRENCY_ID_FIELD_NUMBER = 1;
      private long tickCurrencyId_;
      /**
       * <code>optional uint64 tick_currency_id = 1;</code>
       */
      public boolean hasTickCurrencyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 tick_currency_id = 1;</code>
       */
      public long getTickCurrencyId() {
        return tickCurrencyId_;
      }

      public static final int TICK_SIZE_FIELD_NUMBER = 2;
      private java.lang.Object tickSize_;
      /**
       * <code>optional string tick_size = 2;</code>
       */
      public boolean hasTickSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string tick_size = 2;</code>
       */
      public java.lang.String getTickSize() {
        java.lang.Object ref = tickSize_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tickSize_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string tick_size = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTickSizeBytes() {
        java.lang.Object ref = tickSize_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tickSize_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TICK_VALUE_FIELD_NUMBER = 3;
      private java.lang.Object tickValue_;
      /**
       * <code>optional string tick_value = 3;</code>
       */
      public boolean hasTickValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string tick_value = 3;</code>
       */
      public java.lang.String getTickValue() {
        java.lang.Object ref = tickValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tickValue_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string tick_value = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTickValueBytes() {
        java.lang.Object ref = tickValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tickValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CONTRACT_CURRENCY_ID_FIELD_NUMBER = 4;
      private long contractCurrencyId_;
      /**
       * <code>optional uint64 contract_currency_id = 4;</code>
       */
      public boolean hasContractCurrencyId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 contract_currency_id = 4;</code>
       */
      public long getContractCurrencyId() {
        return contractCurrencyId_;
      }

      public static final int CONTRACT_VALUE_FIELD_NUMBER = 5;
      private java.lang.Object contractValue_;
      /**
       * <code>optional string contract_value = 5;</code>
       */
      public boolean hasContractValue() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string contract_value = 5;</code>
       */
      public java.lang.String getContractValue() {
        java.lang.Object ref = contractValue_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            contractValue_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string contract_value = 5;</code>
       */
      public com.google.protobuf.ByteString
          getContractValueBytes() {
        java.lang.Object ref = contractValue_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          contractValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int UNDERLYING_PRODUCT_ID_FIELD_NUMBER = 6;
      private long underlyingProductId_;
      /**
       * <code>optional uint64 underlying_product_id = 6;</code>
       */
      public boolean hasUnderlyingProductId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 underlying_product_id = 6;</code>
       */
      public long getUnderlyingProductId() {
        return underlyingProductId_;
      }

      private void initFields() {
        tickCurrencyId_ = 0L;
        tickSize_ = "";
        tickValue_ = "";
        contractCurrencyId_ = 0L;
        contractValue_ = "";
        underlyingProductId_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, tickCurrencyId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getTickSizeBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getTickValueBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(4, contractCurrencyId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, getContractValueBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt64(6, underlyingProductId_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, tickCurrencyId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getTickSizeBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getTickValueBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, contractCurrencyId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getContractValueBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(6, underlyingProductId_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protobuf.Instrument.Future}
       *
       * <pre>
       * inner messages for instrument subtypes
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protobuf.Instrument.Future)
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.FutureOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Future_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Future_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.Builder.class);
        }

        // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          tickCurrencyId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          tickSize_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          tickValue_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          contractCurrencyId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          contractValue_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          underlyingProductId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Future_descriptor;
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future getDefaultInstanceForType() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.getDefaultInstance();
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future build() {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future buildPartial() {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.tickCurrencyId_ = tickCurrencyId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.tickSize_ = tickSize_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.tickValue_ = tickValue_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.contractCurrencyId_ = contractCurrencyId_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.contractValue_ = contractValue_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.underlyingProductId_ = underlyingProductId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future) {
            return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future other) {
          if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.getDefaultInstance()) return this;
          if (other.hasTickCurrencyId()) {
            setTickCurrencyId(other.getTickCurrencyId());
          }
          if (other.hasTickSize()) {
            bitField0_ |= 0x00000002;
            tickSize_ = other.tickSize_;
            onChanged();
          }
          if (other.hasTickValue()) {
            bitField0_ |= 0x00000004;
            tickValue_ = other.tickValue_;
            onChanged();
          }
          if (other.hasContractCurrencyId()) {
            setContractCurrencyId(other.getContractCurrencyId());
          }
          if (other.hasContractValue()) {
            bitField0_ |= 0x00000010;
            contractValue_ = other.contractValue_;
            onChanged();
          }
          if (other.hasUnderlyingProductId()) {
            setUnderlyingProductId(other.getUnderlyingProductId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long tickCurrencyId_ ;
        /**
         * <code>optional uint64 tick_currency_id = 1;</code>
         */
        public boolean hasTickCurrencyId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 tick_currency_id = 1;</code>
         */
        public long getTickCurrencyId() {
          return tickCurrencyId_;
        }
        /**
         * <code>optional uint64 tick_currency_id = 1;</code>
         */
        public Builder setTickCurrencyId(long value) {
          bitField0_ |= 0x00000001;
          tickCurrencyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 tick_currency_id = 1;</code>
         */
        public Builder clearTickCurrencyId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tickCurrencyId_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object tickSize_ = "";
        /**
         * <code>optional string tick_size = 2;</code>
         */
        public boolean hasTickSize() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string tick_size = 2;</code>
         */
        public java.lang.String getTickSize() {
          java.lang.Object ref = tickSize_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              tickSize_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string tick_size = 2;</code>
         */
        public com.google.protobuf.ByteString
            getTickSizeBytes() {
          java.lang.Object ref = tickSize_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tickSize_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string tick_size = 2;</code>
         */
        public Builder setTickSize(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          tickSize_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string tick_size = 2;</code>
         */
        public Builder clearTickSize() {
          bitField0_ = (bitField0_ & ~0x00000002);
          tickSize_ = getDefaultInstance().getTickSize();
          onChanged();
          return this;
        }
        /**
         * <code>optional string tick_size = 2;</code>
         */
        public Builder setTickSizeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          tickSize_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object tickValue_ = "";
        /**
         * <code>optional string tick_value = 3;</code>
         */
        public boolean hasTickValue() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string tick_value = 3;</code>
         */
        public java.lang.String getTickValue() {
          java.lang.Object ref = tickValue_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              tickValue_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string tick_value = 3;</code>
         */
        public com.google.protobuf.ByteString
            getTickValueBytes() {
          java.lang.Object ref = tickValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tickValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string tick_value = 3;</code>
         */
        public Builder setTickValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          tickValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string tick_value = 3;</code>
         */
        public Builder clearTickValue() {
          bitField0_ = (bitField0_ & ~0x00000004);
          tickValue_ = getDefaultInstance().getTickValue();
          onChanged();
          return this;
        }
        /**
         * <code>optional string tick_value = 3;</code>
         */
        public Builder setTickValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          tickValue_ = value;
          onChanged();
          return this;
        }

        private long contractCurrencyId_ ;
        /**
         * <code>optional uint64 contract_currency_id = 4;</code>
         */
        public boolean hasContractCurrencyId() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint64 contract_currency_id = 4;</code>
         */
        public long getContractCurrencyId() {
          return contractCurrencyId_;
        }
        /**
         * <code>optional uint64 contract_currency_id = 4;</code>
         */
        public Builder setContractCurrencyId(long value) {
          bitField0_ |= 0x00000008;
          contractCurrencyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 contract_currency_id = 4;</code>
         */
        public Builder clearContractCurrencyId() {
          bitField0_ = (bitField0_ & ~0x00000008);
          contractCurrencyId_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object contractValue_ = "";
        /**
         * <code>optional string contract_value = 5;</code>
         */
        public boolean hasContractValue() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string contract_value = 5;</code>
         */
        public java.lang.String getContractValue() {
          java.lang.Object ref = contractValue_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              contractValue_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string contract_value = 5;</code>
         */
        public com.google.protobuf.ByteString
            getContractValueBytes() {
          java.lang.Object ref = contractValue_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            contractValue_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string contract_value = 5;</code>
         */
        public Builder setContractValue(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          contractValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string contract_value = 5;</code>
         */
        public Builder clearContractValue() {
          bitField0_ = (bitField0_ & ~0x00000010);
          contractValue_ = getDefaultInstance().getContractValue();
          onChanged();
          return this;
        }
        /**
         * <code>optional string contract_value = 5;</code>
         */
        public Builder setContractValueBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          contractValue_ = value;
          onChanged();
          return this;
        }

        private long underlyingProductId_ ;
        /**
         * <code>optional uint64 underlying_product_id = 6;</code>
         */
        public boolean hasUnderlyingProductId() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint64 underlying_product_id = 6;</code>
         */
        public long getUnderlyingProductId() {
          return underlyingProductId_;
        }
        /**
         * <code>optional uint64 underlying_product_id = 6;</code>
         */
        public Builder setUnderlyingProductId(long value) {
          bitField0_ |= 0x00000020;
          underlyingProductId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 underlying_product_id = 6;</code>
         */
        public Builder clearUnderlyingProductId() {
          bitField0_ = (bitField0_ & ~0x00000020);
          underlyingProductId_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:protobuf.Instrument.Future)
      }

      static {
        defaultInstance = new Future(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:protobuf.Instrument.Future)
    }

    public interface DerivativeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protobuf.Instrument.Derivative)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 underlying_id = 1;</code>
       */
      boolean hasUnderlyingId();
      /**
       * <code>optional uint64 underlying_id = 1;</code>
       */
      long getUnderlyingId();

      /**
       * <code>optional string subscription_ratio = 2 [default = "1"];</code>
       */
      boolean hasSubscriptionRatio();
      /**
       * <code>optional string subscription_ratio = 2 [default = "1"];</code>
       */
      java.lang.String getSubscriptionRatio();
      /**
       * <code>optional string subscription_ratio = 2 [default = "1"];</code>
       */
      com.google.protobuf.ByteString
          getSubscriptionRatioBytes();

      /**
       * <code>optional string strike = 3;</code>
       */
      boolean hasStrike();
      /**
       * <code>optional string strike = 3;</code>
       */
      java.lang.String getStrike();
      /**
       * <code>optional string strike = 3;</code>
       */
      com.google.protobuf.ByteString
          getStrikeBytes();

      /**
       * <code>optional uint64 strike_currency_id = 4;</code>
       */
      boolean hasStrikeCurrencyId();
      /**
       * <code>optional uint64 strike_currency_id = 4;</code>
       */
      long getStrikeCurrencyId();

      /**
       * <code>optional uint32 type_ord = 5;</code>
       */
      boolean hasTypeOrd();
      /**
       * <code>optional uint32 type_ord = 5;</code>
       */
      int getTypeOrd();

      /**
       * <code>optional .protobuf.Instrument.Future future = 6;</code>
       */
      boolean hasFuture();
      /**
       * <code>optional .protobuf.Instrument.Future future = 6;</code>
       */
      de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future getFuture();
      /**
       * <code>optional .protobuf.Instrument.Future future = 6;</code>
       */
      de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.FutureOrBuilder getFutureOrBuilder();
    }
    /**
     * Protobuf type {@code protobuf.Instrument.Derivative}
     *
     * <pre>
     * - subsumes Derivative and DerivativeWithStrike
     * </pre>
     */
    public static final class Derivative extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protobuf.Instrument.Derivative)
        DerivativeOrBuilder {
      // Use Derivative.newBuilder() to construct.
      private Derivative(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Derivative(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Derivative defaultInstance;
      public static Derivative getDefaultInstance() {
        return defaultInstance;
      }

      public Derivative getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Derivative(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                underlyingId_ = input.readUInt64();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                subscriptionRatio_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                strike_ = bs;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                strikeCurrencyId_ = input.readUInt64();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                typeOrd_ = input.readUInt32();
                break;
              }
              case 50: {
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                  subBuilder = future_.toBuilder();
                }
                future_ = input.readMessage(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(future_);
                  future_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Derivative_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Derivative_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.Builder.class);
      }

      public static com.google.protobuf.Parser<Derivative> PARSER =
          new com.google.protobuf.AbstractParser<Derivative>() {
        public Derivative parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Derivative(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Derivative> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int UNDERLYING_ID_FIELD_NUMBER = 1;
      private long underlyingId_;
      /**
       * <code>optional uint64 underlying_id = 1;</code>
       */
      public boolean hasUnderlyingId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 underlying_id = 1;</code>
       */
      public long getUnderlyingId() {
        return underlyingId_;
      }

      public static final int SUBSCRIPTION_RATIO_FIELD_NUMBER = 2;
      private java.lang.Object subscriptionRatio_;
      /**
       * <code>optional string subscription_ratio = 2 [default = "1"];</code>
       */
      public boolean hasSubscriptionRatio() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string subscription_ratio = 2 [default = "1"];</code>
       */
      public java.lang.String getSubscriptionRatio() {
        java.lang.Object ref = subscriptionRatio_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            subscriptionRatio_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string subscription_ratio = 2 [default = "1"];</code>
       */
      public com.google.protobuf.ByteString
          getSubscriptionRatioBytes() {
        java.lang.Object ref = subscriptionRatio_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subscriptionRatio_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STRIKE_FIELD_NUMBER = 3;
      private java.lang.Object strike_;
      /**
       * <code>optional string strike = 3;</code>
       */
      public boolean hasStrike() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string strike = 3;</code>
       */
      public java.lang.String getStrike() {
        java.lang.Object ref = strike_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            strike_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string strike = 3;</code>
       */
      public com.google.protobuf.ByteString
          getStrikeBytes() {
        java.lang.Object ref = strike_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strike_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STRIKE_CURRENCY_ID_FIELD_NUMBER = 4;
      private long strikeCurrencyId_;
      /**
       * <code>optional uint64 strike_currency_id = 4;</code>
       */
      public boolean hasStrikeCurrencyId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 strike_currency_id = 4;</code>
       */
      public long getStrikeCurrencyId() {
        return strikeCurrencyId_;
      }

      public static final int TYPE_ORD_FIELD_NUMBER = 5;
      private int typeOrd_;
      /**
       * <code>optional uint32 type_ord = 5;</code>
       */
      public boolean hasTypeOrd() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 type_ord = 5;</code>
       */
      public int getTypeOrd() {
        return typeOrd_;
      }

      public static final int FUTURE_FIELD_NUMBER = 6;
      private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future future_;
      /**
       * <code>optional .protobuf.Instrument.Future future = 6;</code>
       */
      public boolean hasFuture() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .protobuf.Instrument.Future future = 6;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future getFuture() {
        return future_;
      }
      /**
       * <code>optional .protobuf.Instrument.Future future = 6;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.FutureOrBuilder getFutureOrBuilder() {
        return future_;
      }

      private void initFields() {
        underlyingId_ = 0L;
        subscriptionRatio_ = "1";
        strike_ = "";
        strikeCurrencyId_ = 0L;
        typeOrd_ = 0;
        future_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, underlyingId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getSubscriptionRatioBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getStrikeBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(4, strikeCurrencyId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, typeOrd_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeMessage(6, future_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, underlyingId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getSubscriptionRatioBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getStrikeBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, strikeCurrencyId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, typeOrd_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, future_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protobuf.Instrument.Derivative}
       *
       * <pre>
       * - subsumes Derivative and DerivativeWithStrike
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protobuf.Instrument.Derivative)
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.DerivativeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Derivative_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Derivative_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.Builder.class);
        }

        // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getFutureFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          underlyingId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          subscriptionRatio_ = "1";
          bitField0_ = (bitField0_ & ~0x00000002);
          strike_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          strikeCurrencyId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          typeOrd_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          if (futureBuilder_ == null) {
            future_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.getDefaultInstance();
          } else {
            futureBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Derivative_descriptor;
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative getDefaultInstanceForType() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.getDefaultInstance();
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative build() {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative buildPartial() {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.underlyingId_ = underlyingId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.subscriptionRatio_ = subscriptionRatio_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.strike_ = strike_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.strikeCurrencyId_ = strikeCurrencyId_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.typeOrd_ = typeOrd_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          if (futureBuilder_ == null) {
            result.future_ = future_;
          } else {
            result.future_ = futureBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative) {
            return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative other) {
          if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.getDefaultInstance()) return this;
          if (other.hasUnderlyingId()) {
            setUnderlyingId(other.getUnderlyingId());
          }
          if (other.hasSubscriptionRatio()) {
            bitField0_ |= 0x00000002;
            subscriptionRatio_ = other.subscriptionRatio_;
            onChanged();
          }
          if (other.hasStrike()) {
            bitField0_ |= 0x00000004;
            strike_ = other.strike_;
            onChanged();
          }
          if (other.hasStrikeCurrencyId()) {
            setStrikeCurrencyId(other.getStrikeCurrencyId());
          }
          if (other.hasTypeOrd()) {
            setTypeOrd(other.getTypeOrd());
          }
          if (other.hasFuture()) {
            mergeFuture(other.getFuture());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long underlyingId_ ;
        /**
         * <code>optional uint64 underlying_id = 1;</code>
         */
        public boolean hasUnderlyingId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 underlying_id = 1;</code>
         */
        public long getUnderlyingId() {
          return underlyingId_;
        }
        /**
         * <code>optional uint64 underlying_id = 1;</code>
         */
        public Builder setUnderlyingId(long value) {
          bitField0_ |= 0x00000001;
          underlyingId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 underlying_id = 1;</code>
         */
        public Builder clearUnderlyingId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          underlyingId_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object subscriptionRatio_ = "1";
        /**
         * <code>optional string subscription_ratio = 2 [default = "1"];</code>
         */
        public boolean hasSubscriptionRatio() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string subscription_ratio = 2 [default = "1"];</code>
         */
        public java.lang.String getSubscriptionRatio() {
          java.lang.Object ref = subscriptionRatio_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              subscriptionRatio_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string subscription_ratio = 2 [default = "1"];</code>
         */
        public com.google.protobuf.ByteString
            getSubscriptionRatioBytes() {
          java.lang.Object ref = subscriptionRatio_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            subscriptionRatio_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string subscription_ratio = 2 [default = "1"];</code>
         */
        public Builder setSubscriptionRatio(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          subscriptionRatio_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string subscription_ratio = 2 [default = "1"];</code>
         */
        public Builder clearSubscriptionRatio() {
          bitField0_ = (bitField0_ & ~0x00000002);
          subscriptionRatio_ = getDefaultInstance().getSubscriptionRatio();
          onChanged();
          return this;
        }
        /**
         * <code>optional string subscription_ratio = 2 [default = "1"];</code>
         */
        public Builder setSubscriptionRatioBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          subscriptionRatio_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object strike_ = "";
        /**
         * <code>optional string strike = 3;</code>
         */
        public boolean hasStrike() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string strike = 3;</code>
         */
        public java.lang.String getStrike() {
          java.lang.Object ref = strike_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              strike_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string strike = 3;</code>
         */
        public com.google.protobuf.ByteString
            getStrikeBytes() {
          java.lang.Object ref = strike_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            strike_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string strike = 3;</code>
         */
        public Builder setStrike(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          strike_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string strike = 3;</code>
         */
        public Builder clearStrike() {
          bitField0_ = (bitField0_ & ~0x00000004);
          strike_ = getDefaultInstance().getStrike();
          onChanged();
          return this;
        }
        /**
         * <code>optional string strike = 3;</code>
         */
        public Builder setStrikeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          strike_ = value;
          onChanged();
          return this;
        }

        private long strikeCurrencyId_ ;
        /**
         * <code>optional uint64 strike_currency_id = 4;</code>
         */
        public boolean hasStrikeCurrencyId() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint64 strike_currency_id = 4;</code>
         */
        public long getStrikeCurrencyId() {
          return strikeCurrencyId_;
        }
        /**
         * <code>optional uint64 strike_currency_id = 4;</code>
         */
        public Builder setStrikeCurrencyId(long value) {
          bitField0_ |= 0x00000008;
          strikeCurrencyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 strike_currency_id = 4;</code>
         */
        public Builder clearStrikeCurrencyId() {
          bitField0_ = (bitField0_ & ~0x00000008);
          strikeCurrencyId_ = 0L;
          onChanged();
          return this;
        }

        private int typeOrd_ ;
        /**
         * <code>optional uint32 type_ord = 5;</code>
         */
        public boolean hasTypeOrd() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 type_ord = 5;</code>
         */
        public int getTypeOrd() {
          return typeOrd_;
        }
        /**
         * <code>optional uint32 type_ord = 5;</code>
         */
        public Builder setTypeOrd(int value) {
          bitField0_ |= 0x00000010;
          typeOrd_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 type_ord = 5;</code>
         */
        public Builder clearTypeOrd() {
          bitField0_ = (bitField0_ & ~0x00000010);
          typeOrd_ = 0;
          onChanged();
          return this;
        }

        private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future future_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.FutureOrBuilder> futureBuilder_;
        /**
         * <code>optional .protobuf.Instrument.Future future = 6;</code>
         */
        public boolean hasFuture() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .protobuf.Instrument.Future future = 6;</code>
         */
        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future getFuture() {
          if (futureBuilder_ == null) {
            return future_;
          } else {
            return futureBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .protobuf.Instrument.Future future = 6;</code>
         */
        public Builder setFuture(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future value) {
          if (futureBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            future_ = value;
            onChanged();
          } else {
            futureBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .protobuf.Instrument.Future future = 6;</code>
         */
        public Builder setFuture(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.Builder builderForValue) {
          if (futureBuilder_ == null) {
            future_ = builderForValue.build();
            onChanged();
          } else {
            futureBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .protobuf.Instrument.Future future = 6;</code>
         */
        public Builder mergeFuture(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future value) {
          if (futureBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020) &&
                future_ != de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.getDefaultInstance()) {
              future_ =
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.newBuilder(future_).mergeFrom(value).buildPartial();
            } else {
              future_ = value;
            }
            onChanged();
          } else {
            futureBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .protobuf.Instrument.Future future = 6;</code>
         */
        public Builder clearFuture() {
          if (futureBuilder_ == null) {
            future_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.getDefaultInstance();
            onChanged();
          } else {
            futureBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }
        /**
         * <code>optional .protobuf.Instrument.Future future = 6;</code>
         */
        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.Builder getFutureBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getFutureFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .protobuf.Instrument.Future future = 6;</code>
         */
        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.FutureOrBuilder getFutureOrBuilder() {
          if (futureBuilder_ != null) {
            return futureBuilder_.getMessageOrBuilder();
          } else {
            return future_;
          }
        }
        /**
         * <code>optional .protobuf.Instrument.Future future = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.FutureOrBuilder> 
            getFutureFieldBuilder() {
          if (futureBuilder_ == null) {
            futureBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Future.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.FutureOrBuilder>(
                    getFuture(),
                    getParentForChildren(),
                    isClean());
            future_ = null;
          }
          return futureBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:protobuf.Instrument.Derivative)
      }

      static {
        defaultInstance = new Derivative(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:protobuf.Instrument.Derivative)
    }

    public interface CrossrateOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protobuf.Instrument.Crossrate)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 source_currency_id = 1;</code>
       */
      boolean hasSourceCurrencyId();
      /**
       * <code>optional uint64 source_currency_id = 1;</code>
       */
      long getSourceCurrencyId();

      /**
       * <code>optional uint64 target_currency_id = 2;</code>
       */
      boolean hasTargetCurrencyId();
      /**
       * <code>optional uint64 target_currency_id = 2;</code>
       */
      long getTargetCurrencyId();

      /**
       * <code>optional string factor = 3;</code>
       */
      boolean hasFactor();
      /**
       * <code>optional string factor = 3;</code>
       */
      java.lang.String getFactor();
      /**
       * <code>optional string factor = 3;</code>
       */
      com.google.protobuf.ByteString
          getFactorBytes();
    }
    /**
     * Protobuf type {@code protobuf.Instrument.Crossrate}
     *
     * <pre>
     * - currency crossrate
     * </pre>
     */
    public static final class Crossrate extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protobuf.Instrument.Crossrate)
        CrossrateOrBuilder {
      // Use Crossrate.newBuilder() to construct.
      private Crossrate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Crossrate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Crossrate defaultInstance;
      public static Crossrate getDefaultInstance() {
        return defaultInstance;
      }

      public Crossrate getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Crossrate(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                sourceCurrencyId_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                targetCurrencyId_ = input.readUInt64();
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                factor_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Crossrate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Crossrate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.Builder.class);
      }

      public static com.google.protobuf.Parser<Crossrate> PARSER =
          new com.google.protobuf.AbstractParser<Crossrate>() {
        public Crossrate parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Crossrate(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Crossrate> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SOURCE_CURRENCY_ID_FIELD_NUMBER = 1;
      private long sourceCurrencyId_;
      /**
       * <code>optional uint64 source_currency_id = 1;</code>
       */
      public boolean hasSourceCurrencyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 source_currency_id = 1;</code>
       */
      public long getSourceCurrencyId() {
        return sourceCurrencyId_;
      }

      public static final int TARGET_CURRENCY_ID_FIELD_NUMBER = 2;
      private long targetCurrencyId_;
      /**
       * <code>optional uint64 target_currency_id = 2;</code>
       */
      public boolean hasTargetCurrencyId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 target_currency_id = 2;</code>
       */
      public long getTargetCurrencyId() {
        return targetCurrencyId_;
      }

      public static final int FACTOR_FIELD_NUMBER = 3;
      private java.lang.Object factor_;
      /**
       * <code>optional string factor = 3;</code>
       */
      public boolean hasFactor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string factor = 3;</code>
       */
      public java.lang.String getFactor() {
        java.lang.Object ref = factor_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            factor_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string factor = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFactorBytes() {
        java.lang.Object ref = factor_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          factor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        sourceCurrencyId_ = 0L;
        targetCurrencyId_ = 0L;
        factor_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, sourceCurrencyId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, targetCurrencyId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getFactorBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, sourceCurrencyId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, targetCurrencyId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getFactorBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protobuf.Instrument.Crossrate}
       *
       * <pre>
       * - currency crossrate
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protobuf.Instrument.Crossrate)
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.CrossrateOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Crossrate_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Crossrate_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.Builder.class);
        }

        // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          sourceCurrencyId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          targetCurrencyId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          factor_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Crossrate_descriptor;
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate getDefaultInstanceForType() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.getDefaultInstance();
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate build() {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate buildPartial() {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.sourceCurrencyId_ = sourceCurrencyId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.targetCurrencyId_ = targetCurrencyId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.factor_ = factor_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate) {
            return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate other) {
          if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.getDefaultInstance()) return this;
          if (other.hasSourceCurrencyId()) {
            setSourceCurrencyId(other.getSourceCurrencyId());
          }
          if (other.hasTargetCurrencyId()) {
            setTargetCurrencyId(other.getTargetCurrencyId());
          }
          if (other.hasFactor()) {
            bitField0_ |= 0x00000004;
            factor_ = other.factor_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long sourceCurrencyId_ ;
        /**
         * <code>optional uint64 source_currency_id = 1;</code>
         */
        public boolean hasSourceCurrencyId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 source_currency_id = 1;</code>
         */
        public long getSourceCurrencyId() {
          return sourceCurrencyId_;
        }
        /**
         * <code>optional uint64 source_currency_id = 1;</code>
         */
        public Builder setSourceCurrencyId(long value) {
          bitField0_ |= 0x00000001;
          sourceCurrencyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 source_currency_id = 1;</code>
         */
        public Builder clearSourceCurrencyId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sourceCurrencyId_ = 0L;
          onChanged();
          return this;
        }

        private long targetCurrencyId_ ;
        /**
         * <code>optional uint64 target_currency_id = 2;</code>
         */
        public boolean hasTargetCurrencyId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint64 target_currency_id = 2;</code>
         */
        public long getTargetCurrencyId() {
          return targetCurrencyId_;
        }
        /**
         * <code>optional uint64 target_currency_id = 2;</code>
         */
        public Builder setTargetCurrencyId(long value) {
          bitField0_ |= 0x00000002;
          targetCurrencyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 target_currency_id = 2;</code>
         */
        public Builder clearTargetCurrencyId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          targetCurrencyId_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object factor_ = "";
        /**
         * <code>optional string factor = 3;</code>
         */
        public boolean hasFactor() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string factor = 3;</code>
         */
        public java.lang.String getFactor() {
          java.lang.Object ref = factor_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              factor_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string factor = 3;</code>
         */
        public com.google.protobuf.ByteString
            getFactorBytes() {
          java.lang.Object ref = factor_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            factor_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string factor = 3;</code>
         */
        public Builder setFactor(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          factor_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string factor = 3;</code>
         */
        public Builder clearFactor() {
          bitField0_ = (bitField0_ & ~0x00000004);
          factor_ = getDefaultInstance().getFactor();
          onChanged();
          return this;
        }
        /**
         * <code>optional string factor = 3;</code>
         */
        public Builder setFactorBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          factor_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:protobuf.Instrument.Crossrate)
      }

      static {
        defaultInstance = new Crossrate(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:protobuf.Instrument.Crossrate)
    }

    public interface RateOrBuilder extends
        // @@protoc_insertion_point(interface_extends:protobuf.Instrument.Rate)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 source_currency_id = 1;</code>
       */
      boolean hasSourceCurrencyId();
      /**
       * <code>optional uint64 source_currency_id = 1;</code>
       */
      long getSourceCurrencyId();

      /**
       * <code>optional uint64 target_currency_id = 2;</code>
       */
      boolean hasTargetCurrencyId();
      /**
       * <code>optional uint64 target_currency_id = 2;</code>
       */
      long getTargetCurrencyId();

      /**
       * <code>optional string factor = 3;</code>
       */
      boolean hasFactor();
      /**
       * <code>optional string factor = 3;</code>
       */
      java.lang.String getFactor();
      /**
       * <code>optional string factor = 3;</code>
       */
      com.google.protobuf.ByteString
          getFactorBytes();
    }
    /**
     * Protobuf type {@code protobuf.Instrument.Rate}
     */
    public static final class Rate extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:protobuf.Instrument.Rate)
        RateOrBuilder {
      // Use Rate.newBuilder() to construct.
      private Rate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Rate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Rate defaultInstance;
      public static Rate getDefaultInstance() {
        return defaultInstance;
      }

      public Rate getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Rate(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                sourceCurrencyId_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                targetCurrencyId_ = input.readUInt64();
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                factor_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Rate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Rate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.Builder.class);
      }

      public static com.google.protobuf.Parser<Rate> PARSER =
          new com.google.protobuf.AbstractParser<Rate>() {
        public Rate parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Rate(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Rate> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SOURCE_CURRENCY_ID_FIELD_NUMBER = 1;
      private long sourceCurrencyId_;
      /**
       * <code>optional uint64 source_currency_id = 1;</code>
       */
      public boolean hasSourceCurrencyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 source_currency_id = 1;</code>
       */
      public long getSourceCurrencyId() {
        return sourceCurrencyId_;
      }

      public static final int TARGET_CURRENCY_ID_FIELD_NUMBER = 2;
      private long targetCurrencyId_;
      /**
       * <code>optional uint64 target_currency_id = 2;</code>
       */
      public boolean hasTargetCurrencyId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 target_currency_id = 2;</code>
       */
      public long getTargetCurrencyId() {
        return targetCurrencyId_;
      }

      public static final int FACTOR_FIELD_NUMBER = 3;
      private java.lang.Object factor_;
      /**
       * <code>optional string factor = 3;</code>
       */
      public boolean hasFactor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string factor = 3;</code>
       */
      public java.lang.String getFactor() {
        java.lang.Object ref = factor_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            factor_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string factor = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFactorBytes() {
        java.lang.Object ref = factor_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          factor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        sourceCurrencyId_ = 0L;
        targetCurrencyId_ = 0L;
        factor_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, sourceCurrencyId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, targetCurrencyId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getFactorBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, sourceCurrencyId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, targetCurrencyId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getFactorBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code protobuf.Instrument.Rate}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:protobuf.Instrument.Rate)
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.RateOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Rate_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Rate_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.Builder.class);
        }

        // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          sourceCurrencyId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          targetCurrencyId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          factor_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_Rate_descriptor;
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate getDefaultInstanceForType() {
          return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.getDefaultInstance();
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate build() {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate buildPartial() {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.sourceCurrencyId_ = sourceCurrencyId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.targetCurrencyId_ = targetCurrencyId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.factor_ = factor_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate) {
            return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate other) {
          if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.getDefaultInstance()) return this;
          if (other.hasSourceCurrencyId()) {
            setSourceCurrencyId(other.getSourceCurrencyId());
          }
          if (other.hasTargetCurrencyId()) {
            setTargetCurrencyId(other.getTargetCurrencyId());
          }
          if (other.hasFactor()) {
            bitField0_ |= 0x00000004;
            factor_ = other.factor_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long sourceCurrencyId_ ;
        /**
         * <code>optional uint64 source_currency_id = 1;</code>
         */
        public boolean hasSourceCurrencyId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 source_currency_id = 1;</code>
         */
        public long getSourceCurrencyId() {
          return sourceCurrencyId_;
        }
        /**
         * <code>optional uint64 source_currency_id = 1;</code>
         */
        public Builder setSourceCurrencyId(long value) {
          bitField0_ |= 0x00000001;
          sourceCurrencyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 source_currency_id = 1;</code>
         */
        public Builder clearSourceCurrencyId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sourceCurrencyId_ = 0L;
          onChanged();
          return this;
        }

        private long targetCurrencyId_ ;
        /**
         * <code>optional uint64 target_currency_id = 2;</code>
         */
        public boolean hasTargetCurrencyId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint64 target_currency_id = 2;</code>
         */
        public long getTargetCurrencyId() {
          return targetCurrencyId_;
        }
        /**
         * <code>optional uint64 target_currency_id = 2;</code>
         */
        public Builder setTargetCurrencyId(long value) {
          bitField0_ |= 0x00000002;
          targetCurrencyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 target_currency_id = 2;</code>
         */
        public Builder clearTargetCurrencyId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          targetCurrencyId_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object factor_ = "";
        /**
         * <code>optional string factor = 3;</code>
         */
        public boolean hasFactor() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string factor = 3;</code>
         */
        public java.lang.String getFactor() {
          java.lang.Object ref = factor_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              factor_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string factor = 3;</code>
         */
        public com.google.protobuf.ByteString
            getFactorBytes() {
          java.lang.Object ref = factor_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            factor_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string factor = 3;</code>
         */
        public Builder setFactor(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          factor_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string factor = 3;</code>
         */
        public Builder clearFactor() {
          bitField0_ = (bitField0_ & ~0x00000004);
          factor_ = getDefaultInstance().getFactor();
          onChanged();
          return this;
        }
        /**
         * <code>optional string factor = 3;</code>
         */
        public Builder setFactorBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          factor_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:protobuf.Instrument.Rate)
      }

      static {
        defaultInstance = new Rate(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:protobuf.Instrument.Rate)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required uint64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private int name_;
    /**
     * <code>required uint32 name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 name = 2;</code>
     */
    public int getName() {
      return name_;
    }

    public static final int TYPE_ORD_FIELD_NUMBER = 3;
    private int typeOrd_;
    /**
     * <code>required uint32 type_ord = 3;</code>
     */
    public boolean hasTypeOrd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 type_ord = 3;</code>
     */
    public int getTypeOrd() {
      return typeOrd_;
    }

    public static final int SYMBOLS_FIELD_NUMBER = 4;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> symbols_;
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> getSymbolsList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
        getSymbolsOrBuilderList() {
      return symbols_;
    }
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
     */
    public int getSymbolsCount() {
      return symbols_.size();
    }
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef getSymbols(int index) {
      return symbols_.get(index);
    }
    /**
     * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder getSymbolsOrBuilder(
        int index) {
      return symbols_.get(index);
    }

    public static final int QUOTES_FIELD_NUMBER = 5;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote> quotes_;
    /**
     * <code>repeated .protobuf.Quote quotes = 5;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote> getQuotesList() {
      return quotes_;
    }
    /**
     * <code>repeated .protobuf.Quote quotes = 5;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.QuoteOrBuilder> 
        getQuotesOrBuilderList() {
      return quotes_;
    }
    /**
     * <code>repeated .protobuf.Quote quotes = 5;</code>
     */
    public int getQuotesCount() {
      return quotes_.size();
    }
    /**
     * <code>repeated .protobuf.Quote quotes = 5;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote getQuotes(int index) {
      return quotes_.get(index);
    }
    /**
     * <code>repeated .protobuf.Quote quotes = 5;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.QuoteOrBuilder getQuotesOrBuilder(
        int index) {
      return quotes_.get(index);
    }

    public static final int HOME_MARKET_ID_FIELD_NUMBER = 6;
    private long homeMarketId_;
    /**
     * <code>optional uint64 home_market_id = 6;</code>
     */
    public boolean hasHomeMarketId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 home_market_id = 6;</code>
     */
    public long getHomeMarketId() {
      return homeMarketId_;
    }

    public static final int COUNTRY_ID_FIELD_NUMBER = 7;
    private long countryId_;
    /**
     * <code>optional uint64 country_id = 7;</code>
     */
    public boolean hasCountryId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 country_id = 7;</code>
     */
    public long getCountryId() {
      return countryId_;
    }

    public static final int EXPIRATION_DATE_FIELD_NUMBER = 8;
    private int expirationDate_;
    /**
     * <code>optional uint32 expiration_date = 8 [default = 0];</code>
     */
    public boolean hasExpirationDate() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 expiration_date = 8 [default = 0];</code>
     */
    public int getExpirationDate() {
      return expirationDate_;
    }

    public static final int INSTRUMENTCLASS_ORD_FIELD_NUMBER = 9;
    private int instrumentclassOrd_;
    /**
     * <code>optional uint32 instrumentclass_ord = 9;</code>
     */
    public boolean hasInstrumentclassOrd() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 instrumentclass_ord = 9;</code>
     */
    public int getInstrumentclassOrd() {
      return instrumentclassOrd_;
    }

    public static final int DETAILED_INSTRUMENT_TYPE_FIELD_NUMBER = 10;
    private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> detailedInstrumentType_;
    /**
     * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
     */
    public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> getDetailedInstrumentTypeList() {
      return detailedInstrumentType_;
    }
    /**
     * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
     */
    public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
        getDetailedInstrumentTypeOrBuilderList() {
      return detailedInstrumentType_;
    }
    /**
     * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
     */
    public int getDetailedInstrumentTypeCount() {
      return detailedInstrumentType_.size();
    }
    /**
     * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef getDetailedInstrumentType(int index) {
      return detailedInstrumentType_.get(index);
    }
    /**
     * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder getDetailedInstrumentTypeOrBuilder(
        int index) {
      return detailedInstrumentType_.get(index);
    }

    public static final int DERVATIVE_FIELD_NUMBER = 11;
    private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative dervative_;
    /**
     * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
     */
    public boolean hasDervative() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative getDervative() {
      return dervative_;
    }
    /**
     * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.DerivativeOrBuilder getDervativeOrBuilder() {
      return dervative_;
    }

    public static final int PREFIX_LENGTHS_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> prefixLengths_;
    /**
     * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
     *
     * <pre>
     * cached strings, not as a Message to be able to use packed array
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPrefixLengthsList() {
      return prefixLengths_;
    }
    /**
     * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
     *
     * <pre>
     * cached strings, not as a Message to be able to use packed array
     * </pre>
     */
    public int getPrefixLengthsCount() {
      return prefixLengths_.size();
    }
    /**
     * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
     *
     * <pre>
     * cached strings, not as a Message to be able to use packed array
     * </pre>
     */
    public int getPrefixLengths(int index) {
      return prefixLengths_.get(index);
    }
    private int prefixLengthsMemoizedSerializedSize = -1;

    public static final int SUFFIXES_FIELD_NUMBER = 15;
    private com.google.protobuf.LazyStringList suffixes_;
    /**
     * <code>repeated string suffixes = 15;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getSuffixesList() {
      return suffixes_;
    }
    /**
     * <code>repeated string suffixes = 15;</code>
     */
    public int getSuffixesCount() {
      return suffixes_.size();
    }
    /**
     * <code>repeated string suffixes = 15;</code>
     */
    public java.lang.String getSuffixes(int index) {
      return suffixes_.get(index);
    }
    /**
     * <code>repeated string suffixes = 15;</code>
     */
    public com.google.protobuf.ByteString
        getSuffixesBytes(int index) {
      return suffixes_.getByteString(index);
    }

    public static final int CROSSRATE_FIELD_NUMBER = 97;
    private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate crossrate_;
    /**
     * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
     */
    public boolean hasCrossrate() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate getCrossrate() {
      return crossrate_;
    }
    /**
     * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.CrossrateOrBuilder getCrossrateOrBuilder() {
      return crossrate_;
    }

    public static final int GENERAL_MEETING_DATE_FIELD_NUMBER = 98;
    private int generalMeetingDate_;
    /**
     * <code>optional uint32 general_meeting_date = 98 [default = 0];</code>
     */
    public boolean hasGeneralMeetingDate() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 general_meeting_date = 98 [default = 0];</code>
     */
    public int getGeneralMeetingDate() {
      return generalMeetingDate_;
    }

    public static final int SECTOR_ID_FIELD_NUMBER = 99;
    private long sectorId_;
    /**
     * <code>optional uint64 sector_id = 99 [default = 0];</code>
     */
    public boolean hasSectorId() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint64 sector_id = 99 [default = 0];</code>
     */
    public long getSectorId() {
      return sectorId_;
    }

    public static final int ALIASES_FIELD_NUMBER = 100;
    private int aliases_;
    /**
     * <code>optional uint32 aliases = 100;</code>
     */
    public boolean hasAliases() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 aliases = 100;</code>
     */
    public int getAliases() {
      return aliases_;
    }

    public static final int LEI_FIELD_NUMBER = 101;
    private int lei_;
    /**
     * <code>optional uint32 lei = 101;</code>
     */
    public boolean hasLei() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 lei = 101;</code>
     */
    public int getLei() {
      return lei_;
    }

    public static final int RATE_FIELD_NUMBER = 102;
    private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate rate_;
    /**
     * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
     */
    public boolean hasRate() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate getRate() {
      return rate_;
    }
    /**
     * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
     */
    public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.RateOrBuilder getRateOrBuilder() {
      return rate_;
    }

    private void initFields() {
      id_ = 0L;
      name_ = 0;
      typeOrd_ = 0;
      symbols_ = java.util.Collections.emptyList();
      quotes_ = java.util.Collections.emptyList();
      homeMarketId_ = 0L;
      countryId_ = 0L;
      expirationDate_ = 0;
      instrumentclassOrd_ = 0;
      detailedInstrumentType_ = java.util.Collections.emptyList();
      dervative_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.getDefaultInstance();
      prefixLengths_ = java.util.Collections.emptyList();
      suffixes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      crossrate_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.getDefaultInstance();
      generalMeetingDate_ = 0;
      sectorId_ = 0L;
      aliases_ = 0;
      lei_ = 0;
      rate_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTypeOrd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSymbolsCount(); i++) {
        if (!getSymbols(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getQuotesCount(); i++) {
        if (!getQuotes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDetailedInstrumentTypeCount(); i++) {
        if (!getDetailedInstrumentType(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, typeOrd_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        output.writeMessage(4, symbols_.get(i));
      }
      for (int i = 0; i < quotes_.size(); i++) {
        output.writeMessage(5, quotes_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(6, homeMarketId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(7, countryId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(8, expirationDate_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(9, instrumentclassOrd_);
      }
      for (int i = 0; i < detailedInstrumentType_.size(); i++) {
        output.writeMessage(10, detailedInstrumentType_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(11, dervative_);
      }
      if (getPrefixLengthsList().size() > 0) {
        output.writeRawVarint32(114);
        output.writeRawVarint32(prefixLengthsMemoizedSerializedSize);
      }
      for (int i = 0; i < prefixLengths_.size(); i++) {
        output.writeUInt32NoTag(prefixLengths_.get(i));
      }
      for (int i = 0; i < suffixes_.size(); i++) {
        output.writeBytes(15, suffixes_.getByteString(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(97, crossrate_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(98, generalMeetingDate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt64(99, sectorId_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(100, aliases_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(101, lei_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(102, rate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, typeOrd_);
      }
      for (int i = 0; i < symbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, symbols_.get(i));
      }
      for (int i = 0; i < quotes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, quotes_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, homeMarketId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, countryId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, expirationDate_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, instrumentclassOrd_);
      }
      for (int i = 0; i < detailedInstrumentType_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, detailedInstrumentType_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, dervative_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < prefixLengths_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(prefixLengths_.get(i));
        }
        size += dataSize;
        if (!getPrefixLengthsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        prefixLengthsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < suffixes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(suffixes_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getSuffixesList().size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(97, crossrate_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(98, generalMeetingDate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(99, sectorId_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(100, aliases_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(101, lei_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(102, rate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Instrument}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Instrument)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.InstrumentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSymbolsFieldBuilder();
          getQuotesFieldBuilder();
          getDetailedInstrumentTypeFieldBuilder();
          getDervativeFieldBuilder();
          getCrossrateFieldBuilder();
          getRateFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        typeOrd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          symbolsBuilder_.clear();
        }
        if (quotesBuilder_ == null) {
          quotes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          quotesBuilder_.clear();
        }
        homeMarketId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        countryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        expirationDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        instrumentclassOrd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (detailedInstrumentTypeBuilder_ == null) {
          detailedInstrumentType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          detailedInstrumentTypeBuilder_.clear();
        }
        if (dervativeBuilder_ == null) {
          dervative_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.getDefaultInstance();
        } else {
          dervativeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        prefixLengths_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        suffixes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (crossrateBuilder_ == null) {
          crossrate_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.getDefaultInstance();
        } else {
          crossrateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        generalMeetingDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        sectorId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        aliases_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        lei_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        if (rateBuilder_ == null) {
          rate_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.getDefaultInstance();
        } else {
          rateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Instrument_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.typeOrd_ = typeOrd_;
        if (symbolsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            symbols_ = java.util.Collections.unmodifiableList(symbols_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.symbols_ = symbols_;
        } else {
          result.symbols_ = symbolsBuilder_.build();
        }
        if (quotesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            quotes_ = java.util.Collections.unmodifiableList(quotes_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.quotes_ = quotes_;
        } else {
          result.quotes_ = quotesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.homeMarketId_ = homeMarketId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.countryId_ = countryId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.expirationDate_ = expirationDate_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.instrumentclassOrd_ = instrumentclassOrd_;
        if (detailedInstrumentTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            detailedInstrumentType_ = java.util.Collections.unmodifiableList(detailedInstrumentType_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.detailedInstrumentType_ = detailedInstrumentType_;
        } else {
          result.detailedInstrumentType_ = detailedInstrumentTypeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        if (dervativeBuilder_ == null) {
          result.dervative_ = dervative_;
        } else {
          result.dervative_ = dervativeBuilder_.build();
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          prefixLengths_ = java.util.Collections.unmodifiableList(prefixLengths_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.prefixLengths_ = prefixLengths_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          suffixes_ = suffixes_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.suffixes_ = suffixes_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000100;
        }
        if (crossrateBuilder_ == null) {
          result.crossrate_ = crossrate_;
        } else {
          result.crossrate_ = crossrateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.generalMeetingDate_ = generalMeetingDate_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.sectorId_ = sectorId_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.aliases_ = aliases_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.lei_ = lei_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (rateBuilder_ == null) {
          result.rate_ = rate_;
        } else {
          result.rate_ = rateBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasTypeOrd()) {
          setTypeOrd(other.getTypeOrd());
        }
        if (symbolsBuilder_ == null) {
          if (!other.symbols_.isEmpty()) {
            if (symbols_.isEmpty()) {
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSymbolsIsMutable();
              symbols_.addAll(other.symbols_);
            }
            onChanged();
          }
        } else {
          if (!other.symbols_.isEmpty()) {
            if (symbolsBuilder_.isEmpty()) {
              symbolsBuilder_.dispose();
              symbolsBuilder_ = null;
              symbols_ = other.symbols_;
              bitField0_ = (bitField0_ & ~0x00000008);
              symbolsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSymbolsFieldBuilder() : null;
            } else {
              symbolsBuilder_.addAllMessages(other.symbols_);
            }
          }
        }
        if (quotesBuilder_ == null) {
          if (!other.quotes_.isEmpty()) {
            if (quotes_.isEmpty()) {
              quotes_ = other.quotes_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureQuotesIsMutable();
              quotes_.addAll(other.quotes_);
            }
            onChanged();
          }
        } else {
          if (!other.quotes_.isEmpty()) {
            if (quotesBuilder_.isEmpty()) {
              quotesBuilder_.dispose();
              quotesBuilder_ = null;
              quotes_ = other.quotes_;
              bitField0_ = (bitField0_ & ~0x00000010);
              quotesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getQuotesFieldBuilder() : null;
            } else {
              quotesBuilder_.addAllMessages(other.quotes_);
            }
          }
        }
        if (other.hasHomeMarketId()) {
          setHomeMarketId(other.getHomeMarketId());
        }
        if (other.hasCountryId()) {
          setCountryId(other.getCountryId());
        }
        if (other.hasExpirationDate()) {
          setExpirationDate(other.getExpirationDate());
        }
        if (other.hasInstrumentclassOrd()) {
          setInstrumentclassOrd(other.getInstrumentclassOrd());
        }
        if (detailedInstrumentTypeBuilder_ == null) {
          if (!other.detailedInstrumentType_.isEmpty()) {
            if (detailedInstrumentType_.isEmpty()) {
              detailedInstrumentType_ = other.detailedInstrumentType_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureDetailedInstrumentTypeIsMutable();
              detailedInstrumentType_.addAll(other.detailedInstrumentType_);
            }
            onChanged();
          }
        } else {
          if (!other.detailedInstrumentType_.isEmpty()) {
            if (detailedInstrumentTypeBuilder_.isEmpty()) {
              detailedInstrumentTypeBuilder_.dispose();
              detailedInstrumentTypeBuilder_ = null;
              detailedInstrumentType_ = other.detailedInstrumentType_;
              bitField0_ = (bitField0_ & ~0x00000200);
              detailedInstrumentTypeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDetailedInstrumentTypeFieldBuilder() : null;
            } else {
              detailedInstrumentTypeBuilder_.addAllMessages(other.detailedInstrumentType_);
            }
          }
        }
        if (other.hasDervative()) {
          mergeDervative(other.getDervative());
        }
        if (!other.prefixLengths_.isEmpty()) {
          if (prefixLengths_.isEmpty()) {
            prefixLengths_ = other.prefixLengths_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensurePrefixLengthsIsMutable();
            prefixLengths_.addAll(other.prefixLengths_);
          }
          onChanged();
        }
        if (!other.suffixes_.isEmpty()) {
          if (suffixes_.isEmpty()) {
            suffixes_ = other.suffixes_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureSuffixesIsMutable();
            suffixes_.addAll(other.suffixes_);
          }
          onChanged();
        }
        if (other.hasCrossrate()) {
          mergeCrossrate(other.getCrossrate());
        }
        if (other.hasGeneralMeetingDate()) {
          setGeneralMeetingDate(other.getGeneralMeetingDate());
        }
        if (other.hasSectorId()) {
          setSectorId(other.getSectorId());
        }
        if (other.hasAliases()) {
          setAliases(other.getAliases());
        }
        if (other.hasLei()) {
          setLei(other.getLei());
        }
        if (other.hasRate()) {
          mergeRate(other.getRate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasTypeOrd()) {
          
          return false;
        }
        for (int i = 0; i < getSymbolsCount(); i++) {
          if (!getSymbols(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getQuotesCount(); i++) {
          if (!getQuotes(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDetailedInstrumentTypeCount(); i++) {
          if (!getDetailedInstrumentType(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>required uint64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private int name_ ;
      /**
       * <code>required uint32 name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 name = 2;</code>
       */
      public int getName() {
        return name_;
      }
      /**
       * <code>required uint32 name = 2;</code>
       */
      public Builder setName(int value) {
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = 0;
        onChanged();
        return this;
      }

      private int typeOrd_ ;
      /**
       * <code>required uint32 type_ord = 3;</code>
       */
      public boolean hasTypeOrd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 type_ord = 3;</code>
       */
      public int getTypeOrd() {
        return typeOrd_;
      }
      /**
       * <code>required uint32 type_ord = 3;</code>
       */
      public Builder setTypeOrd(int value) {
        bitField0_ |= 0x00000004;
        typeOrd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 type_ord = 3;</code>
       */
      public Builder clearTypeOrd() {
        bitField0_ = (bitField0_ & ~0x00000004);
        typeOrd_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> symbols_ =
        java.util.Collections.emptyList();
      private void ensureSymbolsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          symbols_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef>(symbols_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> symbolsBuilder_;

      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> getSymbolsList() {
        if (symbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(symbols_);
        } else {
          return symbolsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public int getSymbolsCount() {
        if (symbolsBuilder_ == null) {
          return symbols_.size();
        } else {
          return symbolsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef getSymbols(int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);
        } else {
          return symbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.set(index, value);
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public Builder setSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public Builder addSymbols(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef value) {
        if (symbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSymbolsIsMutable();
          symbols_.add(index, value);
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public Builder addSymbols(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public Builder addSymbols(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder builderForValue) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          symbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public Builder addAllSymbols(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> values) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, symbols_);
          onChanged();
        } else {
          symbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public Builder clearSymbols() {
        if (symbolsBuilder_ == null) {
          symbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          symbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public Builder removeSymbols(int index) {
        if (symbolsBuilder_ == null) {
          ensureSymbolsIsMutable();
          symbols_.remove(index);
          onChanged();
        } else {
          symbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder getSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder getSymbolsOrBuilder(
          int index) {
        if (symbolsBuilder_ == null) {
          return symbols_.get(index);  } else {
          return symbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
           getSymbolsOrBuilderList() {
        if (symbolsBuilder_ != null) {
          return symbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(symbols_);
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder addSymbolsBuilder() {
        return getSymbolsFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder addSymbolsBuilder(
          int index) {
        return getSymbolsFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.SymbolRef symbols = 4;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder> 
           getSymbolsBuilderList() {
        return getSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
          getSymbolsFieldBuilder() {
        if (symbolsBuilder_ == null) {
          symbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder>(
                  symbols_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          symbols_ = null;
        }
        return symbolsBuilder_;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote> quotes_ =
        java.util.Collections.emptyList();
      private void ensureQuotesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          quotes_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote>(quotes_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.QuoteOrBuilder> quotesBuilder_;

      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote> getQuotesList() {
        if (quotesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(quotes_);
        } else {
          return quotesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public int getQuotesCount() {
        if (quotesBuilder_ == null) {
          return quotes_.size();
        } else {
          return quotesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote getQuotes(int index) {
        if (quotesBuilder_ == null) {
          return quotes_.get(index);
        } else {
          return quotesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public Builder setQuotes(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote value) {
        if (quotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuotesIsMutable();
          quotes_.set(index, value);
          onChanged();
        } else {
          quotesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public Builder setQuotes(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder builderForValue) {
        if (quotesBuilder_ == null) {
          ensureQuotesIsMutable();
          quotes_.set(index, builderForValue.build());
          onChanged();
        } else {
          quotesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public Builder addQuotes(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote value) {
        if (quotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuotesIsMutable();
          quotes_.add(value);
          onChanged();
        } else {
          quotesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public Builder addQuotes(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote value) {
        if (quotesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuotesIsMutable();
          quotes_.add(index, value);
          onChanged();
        } else {
          quotesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public Builder addQuotes(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder builderForValue) {
        if (quotesBuilder_ == null) {
          ensureQuotesIsMutable();
          quotes_.add(builderForValue.build());
          onChanged();
        } else {
          quotesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public Builder addQuotes(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder builderForValue) {
        if (quotesBuilder_ == null) {
          ensureQuotesIsMutable();
          quotes_.add(index, builderForValue.build());
          onChanged();
        } else {
          quotesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public Builder addAllQuotes(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote> values) {
        if (quotesBuilder_ == null) {
          ensureQuotesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, quotes_);
          onChanged();
        } else {
          quotesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public Builder clearQuotes() {
        if (quotesBuilder_ == null) {
          quotes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          quotesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public Builder removeQuotes(int index) {
        if (quotesBuilder_ == null) {
          ensureQuotesIsMutable();
          quotes_.remove(index);
          onChanged();
        } else {
          quotesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder getQuotesBuilder(
          int index) {
        return getQuotesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.QuoteOrBuilder getQuotesOrBuilder(
          int index) {
        if (quotesBuilder_ == null) {
          return quotes_.get(index);  } else {
          return quotesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.QuoteOrBuilder> 
           getQuotesOrBuilderList() {
        if (quotesBuilder_ != null) {
          return quotesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(quotes_);
        }
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder addQuotesBuilder() {
        return getQuotesFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder addQuotesBuilder(
          int index) {
        return getQuotesFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Quote quotes = 5;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder> 
           getQuotesBuilderList() {
        return getQuotesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.QuoteOrBuilder> 
          getQuotesFieldBuilder() {
        if (quotesBuilder_ == null) {
          quotesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Quote.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.QuoteOrBuilder>(
                  quotes_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          quotes_ = null;
        }
        return quotesBuilder_;
      }

      private long homeMarketId_ ;
      /**
       * <code>optional uint64 home_market_id = 6;</code>
       */
      public boolean hasHomeMarketId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 home_market_id = 6;</code>
       */
      public long getHomeMarketId() {
        return homeMarketId_;
      }
      /**
       * <code>optional uint64 home_market_id = 6;</code>
       */
      public Builder setHomeMarketId(long value) {
        bitField0_ |= 0x00000020;
        homeMarketId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 home_market_id = 6;</code>
       */
      public Builder clearHomeMarketId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        homeMarketId_ = 0L;
        onChanged();
        return this;
      }

      private long countryId_ ;
      /**
       * <code>optional uint64 country_id = 7;</code>
       */
      public boolean hasCountryId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 country_id = 7;</code>
       */
      public long getCountryId() {
        return countryId_;
      }
      /**
       * <code>optional uint64 country_id = 7;</code>
       */
      public Builder setCountryId(long value) {
        bitField0_ |= 0x00000040;
        countryId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 country_id = 7;</code>
       */
      public Builder clearCountryId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        countryId_ = 0L;
        onChanged();
        return this;
      }

      private int expirationDate_ ;
      /**
       * <code>optional uint32 expiration_date = 8 [default = 0];</code>
       */
      public boolean hasExpirationDate() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 expiration_date = 8 [default = 0];</code>
       */
      public int getExpirationDate() {
        return expirationDate_;
      }
      /**
       * <code>optional uint32 expiration_date = 8 [default = 0];</code>
       */
      public Builder setExpirationDate(int value) {
        bitField0_ |= 0x00000080;
        expirationDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 expiration_date = 8 [default = 0];</code>
       */
      public Builder clearExpirationDate() {
        bitField0_ = (bitField0_ & ~0x00000080);
        expirationDate_ = 0;
        onChanged();
        return this;
      }

      private int instrumentclassOrd_ ;
      /**
       * <code>optional uint32 instrumentclass_ord = 9;</code>
       */
      public boolean hasInstrumentclassOrd() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 instrumentclass_ord = 9;</code>
       */
      public int getInstrumentclassOrd() {
        return instrumentclassOrd_;
      }
      /**
       * <code>optional uint32 instrumentclass_ord = 9;</code>
       */
      public Builder setInstrumentclassOrd(int value) {
        bitField0_ |= 0x00000100;
        instrumentclassOrd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 instrumentclass_ord = 9;</code>
       */
      public Builder clearInstrumentclassOrd() {
        bitField0_ = (bitField0_ & ~0x00000100);
        instrumentclassOrd_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> detailedInstrumentType_ =
        java.util.Collections.emptyList();
      private void ensureDetailedInstrumentTypeIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          detailedInstrumentType_ = new java.util.ArrayList<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef>(detailedInstrumentType_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> detailedInstrumentTypeBuilder_;

      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> getDetailedInstrumentTypeList() {
        if (detailedInstrumentTypeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(detailedInstrumentType_);
        } else {
          return detailedInstrumentTypeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public int getDetailedInstrumentTypeCount() {
        if (detailedInstrumentTypeBuilder_ == null) {
          return detailedInstrumentType_.size();
        } else {
          return detailedInstrumentTypeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef getDetailedInstrumentType(int index) {
        if (detailedInstrumentTypeBuilder_ == null) {
          return detailedInstrumentType_.get(index);
        } else {
          return detailedInstrumentTypeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public Builder setDetailedInstrumentType(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef value) {
        if (detailedInstrumentTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailedInstrumentTypeIsMutable();
          detailedInstrumentType_.set(index, value);
          onChanged();
        } else {
          detailedInstrumentTypeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public Builder setDetailedInstrumentType(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder builderForValue) {
        if (detailedInstrumentTypeBuilder_ == null) {
          ensureDetailedInstrumentTypeIsMutable();
          detailedInstrumentType_.set(index, builderForValue.build());
          onChanged();
        } else {
          detailedInstrumentTypeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public Builder addDetailedInstrumentType(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef value) {
        if (detailedInstrumentTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailedInstrumentTypeIsMutable();
          detailedInstrumentType_.add(value);
          onChanged();
        } else {
          detailedInstrumentTypeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public Builder addDetailedInstrumentType(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef value) {
        if (detailedInstrumentTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailedInstrumentTypeIsMutable();
          detailedInstrumentType_.add(index, value);
          onChanged();
        } else {
          detailedInstrumentTypeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public Builder addDetailedInstrumentType(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder builderForValue) {
        if (detailedInstrumentTypeBuilder_ == null) {
          ensureDetailedInstrumentTypeIsMutable();
          detailedInstrumentType_.add(builderForValue.build());
          onChanged();
        } else {
          detailedInstrumentTypeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public Builder addDetailedInstrumentType(
          int index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder builderForValue) {
        if (detailedInstrumentTypeBuilder_ == null) {
          ensureDetailedInstrumentTypeIsMutable();
          detailedInstrumentType_.add(index, builderForValue.build());
          onChanged();
        } else {
          detailedInstrumentTypeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public Builder addAllDetailedInstrumentType(
          java.lang.Iterable<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef> values) {
        if (detailedInstrumentTypeBuilder_ == null) {
          ensureDetailedInstrumentTypeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, detailedInstrumentType_);
          onChanged();
        } else {
          detailedInstrumentTypeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public Builder clearDetailedInstrumentType() {
        if (detailedInstrumentTypeBuilder_ == null) {
          detailedInstrumentType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          detailedInstrumentTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public Builder removeDetailedInstrumentType(int index) {
        if (detailedInstrumentTypeBuilder_ == null) {
          ensureDetailedInstrumentTypeIsMutable();
          detailedInstrumentType_.remove(index);
          onChanged();
        } else {
          detailedInstrumentTypeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder getDetailedInstrumentTypeBuilder(
          int index) {
        return getDetailedInstrumentTypeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder getDetailedInstrumentTypeOrBuilder(
          int index) {
        if (detailedInstrumentTypeBuilder_ == null) {
          return detailedInstrumentType_.get(index);  } else {
          return detailedInstrumentTypeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public java.util.List<? extends de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
           getDetailedInstrumentTypeOrBuilderList() {
        if (detailedInstrumentTypeBuilder_ != null) {
          return detailedInstrumentTypeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(detailedInstrumentType_);
        }
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder addDetailedInstrumentTypeBuilder() {
        return getDetailedInstrumentTypeFieldBuilder().addBuilder(
            de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder addDetailedInstrumentTypeBuilder(
          int index) {
        return getDetailedInstrumentTypeFieldBuilder().addBuilder(
            index, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.SymbolRef detailed_instrument_type = 10;</code>
       */
      public java.util.List<de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder> 
           getDetailedInstrumentTypeBuilderList() {
        return getDetailedInstrumentTypeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder> 
          getDetailedInstrumentTypeFieldBuilder() {
        if (detailedInstrumentTypeBuilder_ == null) {
          detailedInstrumentTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRef.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SymbolRefOrBuilder>(
                  detailedInstrumentType_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          detailedInstrumentType_ = null;
        }
        return detailedInstrumentTypeBuilder_;
      }

      private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative dervative_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.DerivativeOrBuilder> dervativeBuilder_;
      /**
       * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
       */
      public boolean hasDervative() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative getDervative() {
        if (dervativeBuilder_ == null) {
          return dervative_;
        } else {
          return dervativeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
       */
      public Builder setDervative(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative value) {
        if (dervativeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dervative_ = value;
          onChanged();
        } else {
          dervativeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
       */
      public Builder setDervative(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.Builder builderForValue) {
        if (dervativeBuilder_ == null) {
          dervative_ = builderForValue.build();
          onChanged();
        } else {
          dervativeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
       */
      public Builder mergeDervative(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative value) {
        if (dervativeBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              dervative_ != de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.getDefaultInstance()) {
            dervative_ =
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.newBuilder(dervative_).mergeFrom(value).buildPartial();
          } else {
            dervative_ = value;
          }
          onChanged();
        } else {
          dervativeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
       */
      public Builder clearDervative() {
        if (dervativeBuilder_ == null) {
          dervative_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.getDefaultInstance();
          onChanged();
        } else {
          dervativeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.Builder getDervativeBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getDervativeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.DerivativeOrBuilder getDervativeOrBuilder() {
        if (dervativeBuilder_ != null) {
          return dervativeBuilder_.getMessageOrBuilder();
        } else {
          return dervative_;
        }
      }
      /**
       * <code>optional .protobuf.Instrument.Derivative dervative = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.DerivativeOrBuilder> 
          getDervativeFieldBuilder() {
        if (dervativeBuilder_ == null) {
          dervativeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Derivative.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.DerivativeOrBuilder>(
                  getDervative(),
                  getParentForChildren(),
                  isClean());
          dervative_ = null;
        }
        return dervativeBuilder_;
      }

      private java.util.List<java.lang.Integer> prefixLengths_ = java.util.Collections.emptyList();
      private void ensurePrefixLengthsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          prefixLengths_ = new java.util.ArrayList<java.lang.Integer>(prefixLengths_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
       *
       * <pre>
       * cached strings, not as a Message to be able to use packed array
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPrefixLengthsList() {
        return java.util.Collections.unmodifiableList(prefixLengths_);
      }
      /**
       * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
       *
       * <pre>
       * cached strings, not as a Message to be able to use packed array
       * </pre>
       */
      public int getPrefixLengthsCount() {
        return prefixLengths_.size();
      }
      /**
       * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
       *
       * <pre>
       * cached strings, not as a Message to be able to use packed array
       * </pre>
       */
      public int getPrefixLengths(int index) {
        return prefixLengths_.get(index);
      }
      /**
       * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
       *
       * <pre>
       * cached strings, not as a Message to be able to use packed array
       * </pre>
       */
      public Builder setPrefixLengths(
          int index, int value) {
        ensurePrefixLengthsIsMutable();
        prefixLengths_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
       *
       * <pre>
       * cached strings, not as a Message to be able to use packed array
       * </pre>
       */
      public Builder addPrefixLengths(int value) {
        ensurePrefixLengthsIsMutable();
        prefixLengths_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
       *
       * <pre>
       * cached strings, not as a Message to be able to use packed array
       * </pre>
       */
      public Builder addAllPrefixLengths(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePrefixLengthsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, prefixLengths_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 prefix_lengths = 14 [packed = true];</code>
       *
       * <pre>
       * cached strings, not as a Message to be able to use packed array
       * </pre>
       */
      public Builder clearPrefixLengths() {
        prefixLengths_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList suffixes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSuffixesIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          suffixes_ = new com.google.protobuf.LazyStringArrayList(suffixes_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated string suffixes = 15;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getSuffixesList() {
        return suffixes_.getUnmodifiableView();
      }
      /**
       * <code>repeated string suffixes = 15;</code>
       */
      public int getSuffixesCount() {
        return suffixes_.size();
      }
      /**
       * <code>repeated string suffixes = 15;</code>
       */
      public java.lang.String getSuffixes(int index) {
        return suffixes_.get(index);
      }
      /**
       * <code>repeated string suffixes = 15;</code>
       */
      public com.google.protobuf.ByteString
          getSuffixesBytes(int index) {
        return suffixes_.getByteString(index);
      }
      /**
       * <code>repeated string suffixes = 15;</code>
       */
      public Builder setSuffixes(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSuffixesIsMutable();
        suffixes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string suffixes = 15;</code>
       */
      public Builder addSuffixes(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSuffixesIsMutable();
        suffixes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string suffixes = 15;</code>
       */
      public Builder addAllSuffixes(
          java.lang.Iterable<java.lang.String> values) {
        ensureSuffixesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, suffixes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string suffixes = 15;</code>
       */
      public Builder clearSuffixes() {
        suffixes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string suffixes = 15;</code>
       */
      public Builder addSuffixesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSuffixesIsMutable();
        suffixes_.add(value);
        onChanged();
        return this;
      }

      private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate crossrate_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.CrossrateOrBuilder> crossrateBuilder_;
      /**
       * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
       */
      public boolean hasCrossrate() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate getCrossrate() {
        if (crossrateBuilder_ == null) {
          return crossrate_;
        } else {
          return crossrateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
       */
      public Builder setCrossrate(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate value) {
        if (crossrateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          crossrate_ = value;
          onChanged();
        } else {
          crossrateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
       */
      public Builder setCrossrate(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.Builder builderForValue) {
        if (crossrateBuilder_ == null) {
          crossrate_ = builderForValue.build();
          onChanged();
        } else {
          crossrateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
       */
      public Builder mergeCrossrate(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate value) {
        if (crossrateBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              crossrate_ != de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.getDefaultInstance()) {
            crossrate_ =
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.newBuilder(crossrate_).mergeFrom(value).buildPartial();
          } else {
            crossrate_ = value;
          }
          onChanged();
        } else {
          crossrateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
       */
      public Builder clearCrossrate() {
        if (crossrateBuilder_ == null) {
          crossrate_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.getDefaultInstance();
          onChanged();
        } else {
          crossrateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.Builder getCrossrateBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getCrossrateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.CrossrateOrBuilder getCrossrateOrBuilder() {
        if (crossrateBuilder_ != null) {
          return crossrateBuilder_.getMessageOrBuilder();
        } else {
          return crossrate_;
        }
      }
      /**
       * <code>optional .protobuf.Instrument.Crossrate crossrate = 97;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.CrossrateOrBuilder> 
          getCrossrateFieldBuilder() {
        if (crossrateBuilder_ == null) {
          crossrateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Crossrate.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.CrossrateOrBuilder>(
                  getCrossrate(),
                  getParentForChildren(),
                  isClean());
          crossrate_ = null;
        }
        return crossrateBuilder_;
      }

      private int generalMeetingDate_ ;
      /**
       * <code>optional uint32 general_meeting_date = 98 [default = 0];</code>
       */
      public boolean hasGeneralMeetingDate() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 general_meeting_date = 98 [default = 0];</code>
       */
      public int getGeneralMeetingDate() {
        return generalMeetingDate_;
      }
      /**
       * <code>optional uint32 general_meeting_date = 98 [default = 0];</code>
       */
      public Builder setGeneralMeetingDate(int value) {
        bitField0_ |= 0x00004000;
        generalMeetingDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 general_meeting_date = 98 [default = 0];</code>
       */
      public Builder clearGeneralMeetingDate() {
        bitField0_ = (bitField0_ & ~0x00004000);
        generalMeetingDate_ = 0;
        onChanged();
        return this;
      }

      private long sectorId_ ;
      /**
       * <code>optional uint64 sector_id = 99 [default = 0];</code>
       */
      public boolean hasSectorId() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint64 sector_id = 99 [default = 0];</code>
       */
      public long getSectorId() {
        return sectorId_;
      }
      /**
       * <code>optional uint64 sector_id = 99 [default = 0];</code>
       */
      public Builder setSectorId(long value) {
        bitField0_ |= 0x00008000;
        sectorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 sector_id = 99 [default = 0];</code>
       */
      public Builder clearSectorId() {
        bitField0_ = (bitField0_ & ~0x00008000);
        sectorId_ = 0L;
        onChanged();
        return this;
      }

      private int aliases_ ;
      /**
       * <code>optional uint32 aliases = 100;</code>
       */
      public boolean hasAliases() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 aliases = 100;</code>
       */
      public int getAliases() {
        return aliases_;
      }
      /**
       * <code>optional uint32 aliases = 100;</code>
       */
      public Builder setAliases(int value) {
        bitField0_ |= 0x00010000;
        aliases_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 aliases = 100;</code>
       */
      public Builder clearAliases() {
        bitField0_ = (bitField0_ & ~0x00010000);
        aliases_ = 0;
        onChanged();
        return this;
      }

      private int lei_ ;
      /**
       * <code>optional uint32 lei = 101;</code>
       */
      public boolean hasLei() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 lei = 101;</code>
       */
      public int getLei() {
        return lei_;
      }
      /**
       * <code>optional uint32 lei = 101;</code>
       */
      public Builder setLei(int value) {
        bitField0_ |= 0x00020000;
        lei_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lei = 101;</code>
       */
      public Builder clearLei() {
        bitField0_ = (bitField0_ & ~0x00020000);
        lei_ = 0;
        onChanged();
        return this;
      }

      private de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate rate_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.RateOrBuilder> rateBuilder_;
      /**
       * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
       */
      public boolean hasRate() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate getRate() {
        if (rateBuilder_ == null) {
          return rate_;
        } else {
          return rateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
       */
      public Builder setRate(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate value) {
        if (rateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rate_ = value;
          onChanged();
        } else {
          rateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
       */
      public Builder setRate(
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.Builder builderForValue) {
        if (rateBuilder_ == null) {
          rate_ = builderForValue.build();
          onChanged();
        } else {
          rateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
       */
      public Builder mergeRate(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate value) {
        if (rateBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              rate_ != de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.getDefaultInstance()) {
            rate_ =
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.newBuilder(rate_).mergeFrom(value).buildPartial();
          } else {
            rate_ = value;
          }
          onChanged();
        } else {
          rateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
       */
      public Builder clearRate() {
        if (rateBuilder_ == null) {
          rate_ = de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.getDefaultInstance();
          onChanged();
        } else {
          rateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.Builder getRateBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getRateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
       */
      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.RateOrBuilder getRateOrBuilder() {
        if (rateBuilder_ != null) {
          return rateBuilder_.getMessageOrBuilder();
        } else {
          return rate_;
        }
      }
      /**
       * <code>optional .protobuf.Instrument.Rate rate = 102;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.RateOrBuilder> 
          getRateFieldBuilder() {
        if (rateBuilder_ == null) {
          rateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.Rate.Builder, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Instrument.RateOrBuilder>(
                  getRate(),
                  getParentForChildren(),
                  isClean());
          rate_ = null;
        }
        return rateBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Instrument)
    }

    static {
      defaultInstance = new Instrument(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Instrument)
  }

  public interface SuggestionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Suggestion)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required uint64 id = 1;</code>
     */
    long getId();

    /**
     * <code>required uint32 type_ord = 2;</code>
     */
    boolean hasTypeOrd();
    /**
     * <code>required uint32 type_ord = 2;</code>
     */
    int getTypeOrd();

    /**
     * <code>required string name = 3;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string wm_wp_name_kurz = 4;</code>
     */
    boolean hasWmWpNameKurz();
    /**
     * <code>optional string wm_wp_name_kurz = 4;</code>
     */
    java.lang.String getWmWpNameKurz();
    /**
     * <code>optional string wm_wp_name_kurz = 4;</code>
     */
    com.google.protobuf.ByteString
        getWmWpNameKurzBytes();

    /**
     * <code>optional string pm_name_cost = 5;</code>
     */
    boolean hasPmNameCost();
    /**
     * <code>optional string pm_name_cost = 5;</code>
     */
    java.lang.String getPmNameCost();
    /**
     * <code>optional string pm_name_cost = 5;</code>
     */
    com.google.protobuf.ByteString
        getPmNameCostBytes();

    /**
     * <code>optional string pm_name_free = 6;</code>
     */
    boolean hasPmNameFree();
    /**
     * <code>optional string pm_name_free = 6;</code>
     */
    java.lang.String getPmNameFree();
    /**
     * <code>optional string pm_name_free = 6;</code>
     */
    com.google.protobuf.ByteString
        getPmNameFreeBytes();

    /**
     * <code>optional string isin = 7;</code>
     */
    boolean hasIsin();
    /**
     * <code>optional string isin = 7;</code>
     */
    java.lang.String getIsin();
    /**
     * <code>optional string isin = 7;</code>
     */
    com.google.protobuf.ByteString
        getIsinBytes();

    /**
     * <code>optional string wkn = 8;</code>
     */
    boolean hasWkn();
    /**
     * <code>optional string wkn = 8;</code>
     */
    java.lang.String getWkn();
    /**
     * <code>optional string wkn = 8;</code>
     */
    com.google.protobuf.ByteString
        getWknBytes();

    /**
     * <code>repeated int32 ranks = 9 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getRanksList();
    /**
     * <code>repeated int32 ranks = 9 [packed = true];</code>
     */
    int getRanksCount();
    /**
     * <code>repeated int32 ranks = 9 [packed = true];</code>
     */
    int getRanks(int index);

    /**
     * <code>repeated int32 entitlements = 10 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getEntitlementsList();
    /**
     * <code>repeated int32 entitlements = 10 [packed = true];</code>
     */
    int getEntitlementsCount();
    /**
     * <code>repeated int32 entitlements = 10 [packed = true];</code>
     */
    int getEntitlements(int index);
  }
  /**
   * Protobuf type {@code protobuf.Suggestion}
   */
  public static final class Suggestion extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:protobuf.Suggestion)
      SuggestionOrBuilder {
    // Use Suggestion.newBuilder() to construct.
    private Suggestion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Suggestion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Suggestion defaultInstance;
    public static Suggestion getDefaultInstance() {
      return defaultInstance;
    }

    public Suggestion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Suggestion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              typeOrd_ = input.readUInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              name_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              wmWpNameKurz_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              pmNameCost_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              pmNameFree_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              isin_ = bs;
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              wkn_ = bs;
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                ranks_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              ranks_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                ranks_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                ranks_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                entitlements_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              entitlements_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                entitlements_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                entitlements_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          ranks_ = java.util.Collections.unmodifiableList(ranks_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          entitlements_ = java.util.Collections.unmodifiableList(entitlements_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Suggestion_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Suggestion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion.Builder.class);
    }

    public static com.google.protobuf.Parser<Suggestion> PARSER =
        new com.google.protobuf.AbstractParser<Suggestion>() {
      public Suggestion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Suggestion(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Suggestion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required uint64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int TYPE_ORD_FIELD_NUMBER = 2;
    private int typeOrd_;
    /**
     * <code>required uint32 type_ord = 2;</code>
     */
    public boolean hasTypeOrd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 type_ord = 2;</code>
     */
    public int getTypeOrd() {
      return typeOrd_;
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    /**
     * <code>required string name = 3;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WM_WP_NAME_KURZ_FIELD_NUMBER = 4;
    private java.lang.Object wmWpNameKurz_;
    /**
     * <code>optional string wm_wp_name_kurz = 4;</code>
     */
    public boolean hasWmWpNameKurz() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string wm_wp_name_kurz = 4;</code>
     */
    public java.lang.String getWmWpNameKurz() {
      java.lang.Object ref = wmWpNameKurz_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          wmWpNameKurz_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string wm_wp_name_kurz = 4;</code>
     */
    public com.google.protobuf.ByteString
        getWmWpNameKurzBytes() {
      java.lang.Object ref = wmWpNameKurz_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        wmWpNameKurz_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PM_NAME_COST_FIELD_NUMBER = 5;
    private java.lang.Object pmNameCost_;
    /**
     * <code>optional string pm_name_cost = 5;</code>
     */
    public boolean hasPmNameCost() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string pm_name_cost = 5;</code>
     */
    public java.lang.String getPmNameCost() {
      java.lang.Object ref = pmNameCost_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pmNameCost_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pm_name_cost = 5;</code>
     */
    public com.google.protobuf.ByteString
        getPmNameCostBytes() {
      java.lang.Object ref = pmNameCost_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pmNameCost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PM_NAME_FREE_FIELD_NUMBER = 6;
    private java.lang.Object pmNameFree_;
    /**
     * <code>optional string pm_name_free = 6;</code>
     */
    public boolean hasPmNameFree() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string pm_name_free = 6;</code>
     */
    public java.lang.String getPmNameFree() {
      java.lang.Object ref = pmNameFree_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pmNameFree_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pm_name_free = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPmNameFreeBytes() {
      java.lang.Object ref = pmNameFree_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pmNameFree_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISIN_FIELD_NUMBER = 7;
    private java.lang.Object isin_;
    /**
     * <code>optional string isin = 7;</code>
     */
    public boolean hasIsin() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string isin = 7;</code>
     */
    public java.lang.String getIsin() {
      java.lang.Object ref = isin_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          isin_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string isin = 7;</code>
     */
    public com.google.protobuf.ByteString
        getIsinBytes() {
      java.lang.Object ref = isin_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        isin_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WKN_FIELD_NUMBER = 8;
    private java.lang.Object wkn_;
    /**
     * <code>optional string wkn = 8;</code>
     */
    public boolean hasWkn() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string wkn = 8;</code>
     */
    public java.lang.String getWkn() {
      java.lang.Object ref = wkn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          wkn_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string wkn = 8;</code>
     */
    public com.google.protobuf.ByteString
        getWknBytes() {
      java.lang.Object ref = wkn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        wkn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RANKS_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> ranks_;
    /**
     * <code>repeated int32 ranks = 9 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getRanksList() {
      return ranks_;
    }
    /**
     * <code>repeated int32 ranks = 9 [packed = true];</code>
     */
    public int getRanksCount() {
      return ranks_.size();
    }
    /**
     * <code>repeated int32 ranks = 9 [packed = true];</code>
     */
    public int getRanks(int index) {
      return ranks_.get(index);
    }
    private int ranksMemoizedSerializedSize = -1;

    public static final int ENTITLEMENTS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> entitlements_;
    /**
     * <code>repeated int32 entitlements = 10 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getEntitlementsList() {
      return entitlements_;
    }
    /**
     * <code>repeated int32 entitlements = 10 [packed = true];</code>
     */
    public int getEntitlementsCount() {
      return entitlements_.size();
    }
    /**
     * <code>repeated int32 entitlements = 10 [packed = true];</code>
     */
    public int getEntitlements(int index) {
      return entitlements_.get(index);
    }
    private int entitlementsMemoizedSerializedSize = -1;

    private void initFields() {
      id_ = 0L;
      typeOrd_ = 0;
      name_ = "";
      wmWpNameKurz_ = "";
      pmNameCost_ = "";
      pmNameFree_ = "";
      isin_ = "";
      wkn_ = "";
      ranks_ = java.util.Collections.emptyList();
      entitlements_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTypeOrd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, typeOrd_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getWmWpNameKurzBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getPmNameCostBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getPmNameFreeBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getIsinBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getWknBytes());
      }
      if (getRanksList().size() > 0) {
        output.writeRawVarint32(74);
        output.writeRawVarint32(ranksMemoizedSerializedSize);
      }
      for (int i = 0; i < ranks_.size(); i++) {
        output.writeInt32NoTag(ranks_.get(i));
      }
      if (getEntitlementsList().size() > 0) {
        output.writeRawVarint32(82);
        output.writeRawVarint32(entitlementsMemoizedSerializedSize);
      }
      for (int i = 0; i < entitlements_.size(); i++) {
        output.writeInt32NoTag(entitlements_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, typeOrd_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getWmWpNameKurzBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPmNameCostBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPmNameFreeBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getIsinBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getWknBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ranks_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(ranks_.get(i));
        }
        size += dataSize;
        if (!getRanksList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        ranksMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < entitlements_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(entitlements_.get(i));
        }
        size += dataSize;
        if (!getEntitlementsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        entitlementsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Suggestion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Suggestion)
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.SuggestionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Suggestion_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Suggestion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion.class, de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion.Builder.class);
      }

      // Construct using de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        typeOrd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        wmWpNameKurz_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        pmNameCost_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        pmNameFree_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        isin_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        wkn_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        ranks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        entitlements_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.internal_static_protobuf_Suggestion_descriptor;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion getDefaultInstanceForType() {
        return de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion.getDefaultInstance();
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion build() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion buildPartial() {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion result = new de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.typeOrd_ = typeOrd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.wmWpNameKurz_ = wmWpNameKurz_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.pmNameCost_ = pmNameCost_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.pmNameFree_ = pmNameFree_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isin_ = isin_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.wkn_ = wkn_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          ranks_ = java.util.Collections.unmodifiableList(ranks_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.ranks_ = ranks_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          entitlements_ = java.util.Collections.unmodifiableList(entitlements_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.entitlements_ = entitlements_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion) {
          return mergeFrom((de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion other) {
        if (other == de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasTypeOrd()) {
          setTypeOrd(other.getTypeOrd());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000004;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasWmWpNameKurz()) {
          bitField0_ |= 0x00000008;
          wmWpNameKurz_ = other.wmWpNameKurz_;
          onChanged();
        }
        if (other.hasPmNameCost()) {
          bitField0_ |= 0x00000010;
          pmNameCost_ = other.pmNameCost_;
          onChanged();
        }
        if (other.hasPmNameFree()) {
          bitField0_ |= 0x00000020;
          pmNameFree_ = other.pmNameFree_;
          onChanged();
        }
        if (other.hasIsin()) {
          bitField0_ |= 0x00000040;
          isin_ = other.isin_;
          onChanged();
        }
        if (other.hasWkn()) {
          bitField0_ |= 0x00000080;
          wkn_ = other.wkn_;
          onChanged();
        }
        if (!other.ranks_.isEmpty()) {
          if (ranks_.isEmpty()) {
            ranks_ = other.ranks_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureRanksIsMutable();
            ranks_.addAll(other.ranks_);
          }
          onChanged();
        }
        if (!other.entitlements_.isEmpty()) {
          if (entitlements_.isEmpty()) {
            entitlements_ = other.entitlements_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureEntitlementsIsMutable();
            entitlements_.addAll(other.entitlements_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasTypeOrd()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (de.marketmaker.istar.instrument.protobuf.InstrumentProtos.Suggestion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>required uint64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private int typeOrd_ ;
      /**
       * <code>required uint32 type_ord = 2;</code>
       */
      public boolean hasTypeOrd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 type_ord = 2;</code>
       */
      public int getTypeOrd() {
        return typeOrd_;
      }
      /**
       * <code>required uint32 type_ord = 2;</code>
       */
      public Builder setTypeOrd(int value) {
        bitField0_ |= 0x00000002;
        typeOrd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 type_ord = 2;</code>
       */
      public Builder clearTypeOrd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        typeOrd_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 3;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 3;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object wmWpNameKurz_ = "";
      /**
       * <code>optional string wm_wp_name_kurz = 4;</code>
       */
      public boolean hasWmWpNameKurz() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string wm_wp_name_kurz = 4;</code>
       */
      public java.lang.String getWmWpNameKurz() {
        java.lang.Object ref = wmWpNameKurz_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            wmWpNameKurz_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string wm_wp_name_kurz = 4;</code>
       */
      public com.google.protobuf.ByteString
          getWmWpNameKurzBytes() {
        java.lang.Object ref = wmWpNameKurz_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          wmWpNameKurz_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string wm_wp_name_kurz = 4;</code>
       */
      public Builder setWmWpNameKurz(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        wmWpNameKurz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string wm_wp_name_kurz = 4;</code>
       */
      public Builder clearWmWpNameKurz() {
        bitField0_ = (bitField0_ & ~0x00000008);
        wmWpNameKurz_ = getDefaultInstance().getWmWpNameKurz();
        onChanged();
        return this;
      }
      /**
       * <code>optional string wm_wp_name_kurz = 4;</code>
       */
      public Builder setWmWpNameKurzBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        wmWpNameKurz_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pmNameCost_ = "";
      /**
       * <code>optional string pm_name_cost = 5;</code>
       */
      public boolean hasPmNameCost() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string pm_name_cost = 5;</code>
       */
      public java.lang.String getPmNameCost() {
        java.lang.Object ref = pmNameCost_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pmNameCost_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pm_name_cost = 5;</code>
       */
      public com.google.protobuf.ByteString
          getPmNameCostBytes() {
        java.lang.Object ref = pmNameCost_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pmNameCost_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pm_name_cost = 5;</code>
       */
      public Builder setPmNameCost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        pmNameCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pm_name_cost = 5;</code>
       */
      public Builder clearPmNameCost() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pmNameCost_ = getDefaultInstance().getPmNameCost();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pm_name_cost = 5;</code>
       */
      public Builder setPmNameCostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        pmNameCost_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pmNameFree_ = "";
      /**
       * <code>optional string pm_name_free = 6;</code>
       */
      public boolean hasPmNameFree() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string pm_name_free = 6;</code>
       */
      public java.lang.String getPmNameFree() {
        java.lang.Object ref = pmNameFree_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pmNameFree_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pm_name_free = 6;</code>
       */
      public com.google.protobuf.ByteString
          getPmNameFreeBytes() {
        java.lang.Object ref = pmNameFree_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pmNameFree_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pm_name_free = 6;</code>
       */
      public Builder setPmNameFree(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        pmNameFree_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pm_name_free = 6;</code>
       */
      public Builder clearPmNameFree() {
        bitField0_ = (bitField0_ & ~0x00000020);
        pmNameFree_ = getDefaultInstance().getPmNameFree();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pm_name_free = 6;</code>
       */
      public Builder setPmNameFreeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        pmNameFree_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object isin_ = "";
      /**
       * <code>optional string isin = 7;</code>
       */
      public boolean hasIsin() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string isin = 7;</code>
       */
      public java.lang.String getIsin() {
        java.lang.Object ref = isin_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            isin_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string isin = 7;</code>
       */
      public com.google.protobuf.ByteString
          getIsinBytes() {
        java.lang.Object ref = isin_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          isin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string isin = 7;</code>
       */
      public Builder setIsin(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        isin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string isin = 7;</code>
       */
      public Builder clearIsin() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isin_ = getDefaultInstance().getIsin();
        onChanged();
        return this;
      }
      /**
       * <code>optional string isin = 7;</code>
       */
      public Builder setIsinBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        isin_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object wkn_ = "";
      /**
       * <code>optional string wkn = 8;</code>
       */
      public boolean hasWkn() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string wkn = 8;</code>
       */
      public java.lang.String getWkn() {
        java.lang.Object ref = wkn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            wkn_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string wkn = 8;</code>
       */
      public com.google.protobuf.ByteString
          getWknBytes() {
        java.lang.Object ref = wkn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          wkn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string wkn = 8;</code>
       */
      public Builder setWkn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        wkn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string wkn = 8;</code>
       */
      public Builder clearWkn() {
        bitField0_ = (bitField0_ & ~0x00000080);
        wkn_ = getDefaultInstance().getWkn();
        onChanged();
        return this;
      }
      /**
       * <code>optional string wkn = 8;</code>
       */
      public Builder setWknBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        wkn_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> ranks_ = java.util.Collections.emptyList();
      private void ensureRanksIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          ranks_ = new java.util.ArrayList<java.lang.Integer>(ranks_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 ranks = 9 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getRanksList() {
        return java.util.Collections.unmodifiableList(ranks_);
      }
      /**
       * <code>repeated int32 ranks = 9 [packed = true];</code>
       */
      public int getRanksCount() {
        return ranks_.size();
      }
      /**
       * <code>repeated int32 ranks = 9 [packed = true];</code>
       */
      public int getRanks(int index) {
        return ranks_.get(index);
      }
      /**
       * <code>repeated int32 ranks = 9 [packed = true];</code>
       */
      public Builder setRanks(
          int index, int value) {
        ensureRanksIsMutable();
        ranks_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ranks = 9 [packed = true];</code>
       */
      public Builder addRanks(int value) {
        ensureRanksIsMutable();
        ranks_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ranks = 9 [packed = true];</code>
       */
      public Builder addAllRanks(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRanksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ranks_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ranks = 9 [packed = true];</code>
       */
      public Builder clearRanks() {
        ranks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> entitlements_ = java.util.Collections.emptyList();
      private void ensureEntitlementsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          entitlements_ = new java.util.ArrayList<java.lang.Integer>(entitlements_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 entitlements = 10 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getEntitlementsList() {
        return java.util.Collections.unmodifiableList(entitlements_);
      }
      /**
       * <code>repeated int32 entitlements = 10 [packed = true];</code>
       */
      public int getEntitlementsCount() {
        return entitlements_.size();
      }
      /**
       * <code>repeated int32 entitlements = 10 [packed = true];</code>
       */
      public int getEntitlements(int index) {
        return entitlements_.get(index);
      }
      /**
       * <code>repeated int32 entitlements = 10 [packed = true];</code>
       */
      public Builder setEntitlements(
          int index, int value) {
        ensureEntitlementsIsMutable();
        entitlements_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 entitlements = 10 [packed = true];</code>
       */
      public Builder addEntitlements(int value) {
        ensureEntitlementsIsMutable();
        entitlements_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 entitlements = 10 [packed = true];</code>
       */
      public Builder addAllEntitlements(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEntitlementsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, entitlements_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 entitlements = 10 [packed = true];</code>
       */
      public Builder clearEntitlements() {
        entitlements_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protobuf.Suggestion)
    }

    static {
      defaultInstance = new Suggestion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protobuf.Suggestion)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Symbol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Symbol_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_SymbolRef_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_SymbolRef_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_LocalizedName_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_LocalizedName_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Currency_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Currency_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Country_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Country_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Market_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Market_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Sector_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Sector_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_DomainContext_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_DomainContext_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_MinimumQuotationSize_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_MinimumQuotationSize_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Entitlement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Entitlement_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Quote_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Quote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Instrument_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Instrument_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Instrument_Future_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Instrument_Future_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Instrument_Derivative_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Instrument_Derivative_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Instrument_Crossrate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Instrument_Crossrate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Instrument_Rate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Instrument_Rate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Suggestion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protobuf_Suggestion_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020instrument.proto\022\010protobuf\032 google/pro" +
      "tobuf/descriptor.proto\".\n\006Symbol\022\025\n\rkeys" +
      "ystem_ord\030\001 \002(\r\022\r\n\005value\030\002 \002(\t\"5\n\tSymbol" +
      "Ref\022\025\n\rkeysystem_ord\030\001 \002(\r\022\021\n\tvalue_idx\030" +
      "\002 \002(\r\"K\n\rLocalizedName\022\n\n\002de\030\001 \001(\t\022\n\n\002en" +
      "\030\002 \001(\t\022\n\n\002fr\030\003 \001(\t\022\n\n\002it\030\004 \001(\t\022\n\n\002nl\030\005 \001" +
      "(\t\"o\n\010Currency\022\n\n\002id\030\001 \002(\004\022\014\n\004name\030\002 \002(\t" +
      "\022&\n\005names\030\003 \001(\0132\027.protobuf.LocalizedName" +
      "\022!\n\007symbols\030\004 \003(\0132\020.protobuf.Symbol\"\203\001\n\007" +
      "Country\022\n\n\002id\030\001 \002(\004\022\014\n\004name\030\002 \002(\t\022&\n\005nam",
      "es\030\003 \001(\0132\027.protobuf.LocalizedName\022!\n\007sym" +
      "bols\030\004 \003(\0132\020.protobuf.Symbol\022\023\n\013currency" +
      "_id\030\005 \001(\004\"\227\001\n\006Market\022\n\n\002id\030\001 \002(\004\022\014\n\004name" +
      "\030\002 \002(\t\022&\n\005names\030\003 \001(\0132\027.protobuf.Localiz" +
      "edName\022!\n\007symbols\030\004 \003(\0132\020.protobuf.Symbo" +
      "l\022\022\n\ncountry_id\030\005 \001(\004\022\024\n\014category_ord\030\006 " +
      "\001(\r\"m\n\006Sector\022\n\n\002id\030\001 \002(\004\022\014\n\004name\030\002 \002(\t\022" +
      "&\n\005names\030\003 \001(\0132\027.protobuf.LocalizedName\022" +
      "!\n\007symbols\030\004 \003(\0132\020.protobuf.Symbol\"\243\001\n\rD" +
      "omainContext\022!\n\007markets\030\001 \003(\0132\020.protobuf",
      ".Market\022!\n\007sectors\030\002 \003(\0132\020.protobuf.Sect" +
      "or\022&\n\ncurrencies\030\003 \003(\0132\022.protobuf.Curren" +
      "cy\022$\n\tcountries\030\004 \003(\0132\021.protobuf.Country" +
      "\"P\n\024MinimumQuotationSize\022\023\n\010unit_ord\030\001 \001" +
      "(\r:\0011\022\023\n\013currency_id\030\002 \001(\004\022\016\n\006number\030\003 \001" +
      "(\t\";\n\013Entitlement\022\025\n\rkeysystem_ord\030\001 \002(\r" +
      "\022\025\n\tvalue_idx\030\002 \003(\rB\002\020\001\"\246\002\n\005Quote\022\n\n\002id\030" +
      "\001 \002(\004\022$\n\007symbols\030\002 \003(\0132\023.protobuf.Symbol" +
      "Ref\022\021\n\tmarket_id\030\003 \001(\004\022\023\n\013currency_id\030\004 " +
      "\001(\004\022%\n\035first_historic_price_yyyymmdd\030\005 \001",
      "(\017\022\020\n\010quotedef\030\006 \001(\r\022\016\n\006orders\030\007 \001(\020\022\r\n\005" +
      "flags\030\010 \003(\020\022>\n\026minimum_quotation_size\030\t " +
      "\001(\0132\036.protobuf.MinimumQuotationSize\022+\n\014e" +
      "ntitlements\030\n \003(\0132\025.protobuf.Entitlement" +
      "\"\244\010\n\nInstrument\022\n\n\002id\030\001 \002(\004\022\014\n\004name\030\002 \002(" +
      "\r\022\020\n\010type_ord\030\003 \002(\r\022$\n\007symbols\030\004 \003(\0132\023.p" +
      "rotobuf.SymbolRef\022\037\n\006quotes\030\005 \003(\0132\017.prot" +
      "obuf.Quote\022\026\n\016home_market_id\030\006 \001(\004\022\022\n\nco" +
      "untry_id\030\007 \001(\004\022\032\n\017expiration_date\030\010 \001(\r:" +
      "\0010\022\033\n\023instrumentclass_ord\030\t \001(\r\0225\n\030detai",
      "led_instrument_type\030\n \003(\0132\023.protobuf.Sym" +
      "bolRef\0222\n\tdervative\030\013 \001(\0132\037.protobuf.Ins" +
      "trument.Derivative\022\032\n\016prefix_lengths\030\016 \003" +
      "(\rB\002\020\001\022\020\n\010suffixes\030\017 \003(\t\0221\n\tcrossrate\030a " +
      "\001(\0132\036.protobuf.Instrument.Crossrate\022\037\n\024g" +
      "eneral_meeting_date\030b \001(\r:\0010\022\024\n\tsector_i" +
      "d\030c \001(\004:\0010\022\017\n\007aliases\030d \001(\r\022\013\n\003lei\030e \001(\r" +
      "\022\'\n\004rate\030f \001(\0132\031.protobuf.Instrument.Rat" +
      "e\032\236\001\n\006Future\022\030\n\020tick_currency_id\030\001 \001(\004\022\021" +
      "\n\ttick_size\030\002 \001(\t\022\022\n\ntick_value\030\003 \001(\t\022\034\n",
      "\024contract_currency_id\030\004 \001(\004\022\026\n\016contract_" +
      "value\030\005 \001(\t\022\035\n\025underlying_product_id\030\006 \001" +
      "(\004\032\255\001\n\nDerivative\022\025\n\runderlying_id\030\001 \001(\004" +
      "\022\035\n\022subscription_ratio\030\002 \001(\t:\0011\022\016\n\006strik" +
      "e\030\003 \001(\t\022\032\n\022strike_currency_id\030\004 \001(\004\022\020\n\010t" +
      "ype_ord\030\005 \001(\r\022+\n\006future\030\006 \001(\0132\033.protobuf" +
      ".Instrument.Future\032S\n\tCrossrate\022\032\n\022sourc" +
      "e_currency_id\030\001 \001(\004\022\032\n\022target_currency_i" +
      "d\030\002 \001(\004\022\016\n\006factor\030\003 \001(\t\032N\n\004Rate\022\032\n\022sourc" +
      "e_currency_id\030\001 \001(\004\022\032\n\022target_currency_i",
      "d\030\002 \001(\004\022\016\n\006factor\030\003 \001(\t\"\305\001\n\nSuggestion\022\n" +
      "\n\002id\030\001 \002(\004\022\020\n\010type_ord\030\002 \002(\r\022\014\n\004name\030\003 \002" +
      "(\t\022\027\n\017wm_wp_name_kurz\030\004 \001(\t\022\024\n\014pm_name_c" +
      "ost\030\005 \001(\t\022\024\n\014pm_name_free\030\006 \001(\t\022\014\n\004isin\030" +
      "\007 \001(\t\022\013\n\003wkn\030\010 \001(\t\022\021\n\005ranks\030\t \003(\005B\002\020\001\022\030\n" +
      "\014entitlements\030\n \003(\005B\002\020\001B>\n(de.marketmake" +
      "r.istar.instrument.protobufB\020InstrumentP" +
      "rotosH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DescriptorProtos.getDescriptor(),
        }, assigner);
    internal_static_protobuf_Symbol_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protobuf_Symbol_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Symbol_descriptor,
        new java.lang.String[] { "KeysystemOrd", "Value", });
    internal_static_protobuf_SymbolRef_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protobuf_SymbolRef_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_SymbolRef_descriptor,
        new java.lang.String[] { "KeysystemOrd", "ValueIdx", });
    internal_static_protobuf_LocalizedName_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protobuf_LocalizedName_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_LocalizedName_descriptor,
        new java.lang.String[] { "De", "En", "Fr", "It", "Nl", });
    internal_static_protobuf_Currency_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protobuf_Currency_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Currency_descriptor,
        new java.lang.String[] { "Id", "Name", "Names", "Symbols", });
    internal_static_protobuf_Country_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_protobuf_Country_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Country_descriptor,
        new java.lang.String[] { "Id", "Name", "Names", "Symbols", "CurrencyId", });
    internal_static_protobuf_Market_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_protobuf_Market_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Market_descriptor,
        new java.lang.String[] { "Id", "Name", "Names", "Symbols", "CountryId", "CategoryOrd", });
    internal_static_protobuf_Sector_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_protobuf_Sector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Sector_descriptor,
        new java.lang.String[] { "Id", "Name", "Names", "Symbols", });
    internal_static_protobuf_DomainContext_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_protobuf_DomainContext_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_DomainContext_descriptor,
        new java.lang.String[] { "Markets", "Sectors", "Currencies", "Countries", });
    internal_static_protobuf_MinimumQuotationSize_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_protobuf_MinimumQuotationSize_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_MinimumQuotationSize_descriptor,
        new java.lang.String[] { "UnitOrd", "CurrencyId", "Number", });
    internal_static_protobuf_Entitlement_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_protobuf_Entitlement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Entitlement_descriptor,
        new java.lang.String[] { "KeysystemOrd", "ValueIdx", });
    internal_static_protobuf_Quote_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_protobuf_Quote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Quote_descriptor,
        new java.lang.String[] { "Id", "Symbols", "MarketId", "CurrencyId", "FirstHistoricPriceYyyymmdd", "Quotedef", "Orders", "Flags", "MinimumQuotationSize", "Entitlements", });
    internal_static_protobuf_Instrument_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_protobuf_Instrument_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Instrument_descriptor,
        new java.lang.String[] { "Id", "Name", "TypeOrd", "Symbols", "Quotes", "HomeMarketId", "CountryId", "ExpirationDate", "InstrumentclassOrd", "DetailedInstrumentType", "Dervative", "PrefixLengths", "Suffixes", "Crossrate", "GeneralMeetingDate", "SectorId", "Aliases", "Lei", "Rate", });
    internal_static_protobuf_Instrument_Future_descriptor =
      internal_static_protobuf_Instrument_descriptor.getNestedTypes().get(0);
    internal_static_protobuf_Instrument_Future_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Instrument_Future_descriptor,
        new java.lang.String[] { "TickCurrencyId", "TickSize", "TickValue", "ContractCurrencyId", "ContractValue", "UnderlyingProductId", });
    internal_static_protobuf_Instrument_Derivative_descriptor =
      internal_static_protobuf_Instrument_descriptor.getNestedTypes().get(1);
    internal_static_protobuf_Instrument_Derivative_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Instrument_Derivative_descriptor,
        new java.lang.String[] { "UnderlyingId", "SubscriptionRatio", "Strike", "StrikeCurrencyId", "TypeOrd", "Future", });
    internal_static_protobuf_Instrument_Crossrate_descriptor =
      internal_static_protobuf_Instrument_descriptor.getNestedTypes().get(2);
    internal_static_protobuf_Instrument_Crossrate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Instrument_Crossrate_descriptor,
        new java.lang.String[] { "SourceCurrencyId", "TargetCurrencyId", "Factor", });
    internal_static_protobuf_Instrument_Rate_descriptor =
      internal_static_protobuf_Instrument_descriptor.getNestedTypes().get(3);
    internal_static_protobuf_Instrument_Rate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Instrument_Rate_descriptor,
        new java.lang.String[] { "SourceCurrencyId", "TargetCurrencyId", "Factor", });
    internal_static_protobuf_Suggestion_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_protobuf_Suggestion_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_protobuf_Suggestion_descriptor,
        new java.lang.String[] { "Id", "TypeOrd", "Name", "WmWpNameKurz", "PmNameCost", "PmNameFree", "Isin", "Wkn", "Ranks", "Entitlements", });
    com.google.protobuf.DescriptorProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
